--生活技能尝鲜包		
------------------------------------------------------------------------------------------
--一般物品的默认脚本

--脚本号

x418129_g_scriptId = 418129
x418129_g_ItemList = {}
x418129_g_LevelMin = 1	
--需要的等级


--**********************************
--事件交互入口
--**********************************
function x418129_ProcEventEntry( sceneId, selfId, bagIndex )
-- 不需要这个接口，但要保留空函数
end

--**********************************
--这个物品的使用过程是否类似于技能：
--系统会在执行开始时检测这个函数的返回值，如果返回失败则忽略后面的类似技能的执行。
--返回1：技能类似的物品，可以继续类似技能的执行；返回0：忽略后面的操作。
--**********************************
function x418129_IsSkillLikeScript( sceneId, selfId)
	return 1; --这个脚本需要动作支持
end

--**********************************
--直接取消效果：
--系统会直接调用这个接口，并根据这个函数的返回值确定以后的流程是否执行。
--返回1：已经取消对应效果，不再执行后续操作；返回0：没有检测到相关效果，继续执行。
--**********************************
function x418129_CancelImpacts( sceneId, selfId )
	return 0; --不需要这个接口，但要保留空函数,并且始终返回0。
end

--**********************************
--条件检测入口：
--系统会在技能检测的时间点调用这个接口，并根据这个函数的返回值确定以后的流程是否执行。
--返回1：条件检测通过，可以继续执行；返回0：条件检测失败，中断后续执行。
--**********************************
function x418129_OnConditionCheck( sceneId, selfId )
	
	--校验使用的物品
	
	if(1~=VerifyUsedItem(sceneId, selfId)) then
		return 0
	end
	return 1; --不需要任何条件，并且始终返回1。
end

--**********************************
--消耗检测及处理入口：
--系统会在技能消耗的时间点调用这个接口，并根据这个函数的返回值确定以后的流程是否执行。
--返回1：消耗处理通过，可以继续执行；返回0：消耗检测失败，中断后续执行。
--注意：这不光负责消耗的检测也负责消耗的执行。
--**********************************
function x418129_OnDeplete( sceneId, selfId )
	
	
	--if(DepletingUsedItem(sceneId, selfId)) == 1 then
	--	return 1;
	--end
	--return 0;
	
	return 1;
end

--**********************************
--只会执行一次入口：
--聚气和瞬发技能会在消耗完成后调用这个接口（聚气结束并且各种条件都满足的时候），而引导
--技能也会在消耗完成后调用这个接口（技能的一开始，消耗成功执行之后）。
--返回1：处理成功；返回0：处理失败。
--注：这里是技能生效一次的入口
--**********************************
function x418129_OnActivateOnce( sceneId, selfId, impactId )
	
	if GetLevel(sceneId, selfId)< x418129_g_LevelMin then
		BeginQuestEvent(sceneId)
		AddQuestText(sceneId,"等级不足")
		EndQuestEvent(sceneId)
		DispatchQuestTips(sceneId,selfId)
		return
	end

--	local i = random(1,3)
	
--	local itemId = 0
--	if i<=3 then
--		itemId = x418129_g_ItemList[i]
--	end
	
	local  nZhiYe = GetZhiye( sceneId, selfId);	--0、1、2、3、4、5、6、7、8、9、10、11
	local itemId1 = 0

	if nZhiYe == 0 or nZhiYe == 1 or nZhiYe == 6 or nZhiYe == 7 then
		itemId1 = 11000905  --宗师级洗石剂
		itemId2 = 12041211	--蛮力
		itemId3 = 12041110	--一级碎甲丸
	elseif nZhiYe == 2 or nZhiYe == 3 or nZhiYe == 8 or nZhiYe == 9 then
		itemId1 = 11000905  --宗师级洗石剂
		itemId2 = 12041213 	--追影
		itemId3 = 12041111 	--一级穿甲丸
	elseif nZhiYe ==4 or nZhiYe == 5 or nZhiYe == 10 or nZhiYe == 11 then
		itemId1 = 11000905  --宗师级洗石剂
		itemId2 = 12041212	--聪慧
		itemId3 = 12041112	--一级溶甲丸
	end
	
--	local  nZhiYe = GetZhiye( sceneId, selfId);
--	local itemId2 = 0
--	if nZhiYe == 0 or nZhiYe == 1 then
--		itemId2 = 12041211	--蛮力
--	elseif nZhiYe == 2 or nZhiYe == 3 then
--		itemId2 = 12041213 	--追影
--	elseif nZhiYe ==4 or nZhiYe == 5 then
--		itemId2 = 12041212	--聪慧
--	end

--	local  nZhiYe = GetZhiye( sceneId, selfId);
--	local itemId3 = 0
--	if nZhiYe == 0 or nZhiYe == 1 then
--		itemId3 = 12041110	--一级碎甲丸
--	elseif nZhiYe == 2 or nZhiYe == 3 then
--		itemId3 = 12041111 	--一级穿甲丸
--	elseif nZhiYe ==4 or nZhiYe == 5 then
--		itemId3 = 12041112	--一级溶甲丸
--	end	
	
	BeginAddItem(sceneId)
	AddBindItem( sceneId, 12010203, 10 )	--仙方活命饮10个
	AddBindItem( sceneId, 11970021, 3 )	--乱士符3个
	AddBindItem( sceneId, itemId1, 1 )	--一宗师级洗石剂1个
	AddBindItem( sceneId, itemId2, 1 )	--骑术强化符1个
	AddBindItem( sceneId, itemId3, 1 )	--一忽视伤免药1个
	
	local ret = EndAddItem(sceneId,selfId)
	if ret > 0 then
		if(DepletingUsedItem(sceneId, selfId)) == 1 then
			BeginQuestEvent(sceneId)
			AddQuestText(sceneId,"打开礼包，获得了礼包道具")
			EndQuestEvent(sceneId)
			DispatchQuestTips(sceneId,selfId)
			AddItemListToPlayer(sceneId,selfId)
		else
			BeginQuestEvent(sceneId)
			AddQuestText(sceneId,"使用物品异常！")
			EndQuestEvent(sceneId)
			DispatchQuestTips(sceneId,selfId)
		end

	else
		BeginQuestEvent(sceneId)
		AddQuestText(sceneId,"背包已满，无法得到物品！您需要至少有5个背包空间！")
		EndQuestEvent(sceneId)
		DispatchQuestTips(sceneId,selfId)
	end

end

--**********************************
--引导心跳处理入口：
--引导技能会在每次心跳结束时调用这个接口。
--返回：1继续下次心跳；0：中断引导。
--注：这里是技能生效一次的入口
--**********************************
function x418129_OnActivateEachTick( sceneId, selfId)
	return 1; --不是引导性脚本, 只保留空函数.
end
