/*$T MapServer/Server/Obj/Beastie/Beastie.h GC 1.140 10/10/07 10:07:27 */


/*$6
 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 */


#ifndef _OBJ_BEASTIE_H_
#define _OBJ_BEASTIE_H_

#include "gameobject/Character.h"
#include "horse/HorseStruct.h"
#include "gameobject/Pet.h"

//小动物备份的属性
struct _OBJ_BEASTIE_INIT :
	public _INIT_PLAYERACTER_OBJECT
{
	GUID_t	m_GUID;				
	uint32	m_uBeastieId;		//在beastie_attr.tab表里的编号
	char	m_szName[MAX_CHARACTER_NAME];	//小动物名字
	int32	m_nItemId;			//小动物生成的物品ID
	float	m_fSpeed;			//移动速度
	int32	m_RespawnTime;		//重生时间
	int32	m_nModelId;			//模型ID
	int32	m_nCampId;			//阵营
	int32	m_nBeastieType;		//类型：静止或随机移动的

	_OBJ_BEASTIE_INIT (void)
	{
		Clear();
	}

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual void Clear(void)
	{
		m_GUID = INVALID_GUID;
		m_RespawnTime = INVALID_ID;
		m_uBeastieId = INVALID_ID;
		memset(m_szName, 0, sizeof(m_szName));
		m_nItemId = INVALID_ID;
		m_fSpeed = 0.0f;
		m_RespawnTime = 60000;
		m_nModelId = INVALID_ID;
		m_nCampId = INVALID_CAMP;
		m_nBeastieType = INVALID_ID;

		_INIT_PLAYERACTER_OBJECT::Clear();
	}
};

class	Behavior_Beastie;

class Beastie :
	public Character
{
/*
 -----------------------------------------------------------------------------------------------------------------------
 -----------------------------------------------------------------------------------------------------------------------
 */
public:
	enum { BEASTIE_IDLE = 1, BEASTIE_MOVE };

/*
 -----------------------------------------------------------------------------------------------------------------------
 -----------------------------------------------------------------------------------------------------------------------
 */
public:
	friend class	Behavior_Beastie;

/*
 -----------------------------------------------------------------------------------------------------------------------
 -----------------------------------------------------------------------------------------------------------------------
 */
public:
	Beastie();
	virtual ~Beastie();

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */

	virtual ObjectClass GetObjType(void) const
	{
		return OBJECT_CLASS_BEASTIE;
	}

	virtual void	Clear();
	virtual BOOL	Init(const _INIT_OBJECT *pInit);
	virtual bool	HeartBeat(uint32 uTime = 0);
	virtual void	InitAIObj();

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	Behavior_Beastie *GetBeastieAI(void) const
	{
		return((Behavior_Beastie *) m_pAI_Character);
	}

	virtual BOOL	IsCanViewMe(const Object *pObj);

/*
 -----------------------------------------------------------------------------------------------------------------------
 -----------------------------------------------------------------------------------------------------------------------
 */
public:

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual BOOL IsEnemy(Character *pCharacter)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual BOOL IsFriend(Character *pCharacter)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual BOOL IsPartner(Character *pCharacter)
	{
		return 0;
	};

/*
 -----------------------------------------------------------------------------------------------------------------------
 -----------------------------------------------------------------------------------------------------------------------
 */
public:
	virtual NetPacket	*CreateNewObjMsg(void);
	virtual void		DestroyNewObjMsg(NetPacket*pPacket);

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */

	void LevelUp(void)
	{
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual void SetReliveInfo(BOOL bSkillRelive, const _RELIVE_INFO *pReliveInfo)
	{
	};
	virtual void	RequestBaseProperty(Player *pTargetHuman, BASEPROPERTY_REFESH_MODE nMode = REFESH_ALL);

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual void AskMsg_DetailAttrib(Player *pTargetHuman)
	{
	};

/*
 -----------------------------------------------------------------------------------------------------------------------
 -----------------------------------------------------------------------------------------------------------------------
 */
protected:

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual _EFFECT_LIST &Effect_GetEffectList(void)
	{
		return m_ImpactList;
	};

/*
 -----------------------------------------------------------------------------------------------------------------------
 -----------------------------------------------------------------------------------------------------------------------
 */
private:
	_EFFECT_LIST	m_ImpactList;

/*
 -----------------------------------------------------------------------------------------------------------------------
 -----------------------------------------------------------------------------------------------------------------------
 */
protected:
/*
 -----------------------------------------------------------------------------------------------------------------------
 -----------------------------------------------------------------------------------------------------------------------
 */
public:
	int32	GetCaptureCount(void) const;

	BOOL	AddCapturer(ObjID_t idObj);
	BOOL	DelCapturer(ObjID_t idObj);

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	void CleanAllCapturer(void)
	{
	};
	void	SendCaptureFailedToOthers(ObjID_t idObj);

/*
 -----------------------------------------------------------------------------------------------------------------------
 -----------------------------------------------------------------------------------------------------------------------
 */
public:
	BOOL	HeartBeat_OutMap(uint32 uTime);

/*
 -----------------------------------------------------------------------------------------------------------------------
 -----------------------------------------------------------------------------------------------------------------------
 */
public:
	void	Enter_Respawn(void);
	BOOL	Respawn(CharacterVisitor *pVisitor);

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */

	int32 GetRespawnTime(void) const
	{
		return m_RespawnTime;
	}

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	void SetRespawnPos(const GLPos *pPos)
	{
		m_RespawnPos = *pPos;
	}

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	const GLPos *GetRespawnPos(void) const
	{
		return &m_RespawnPos;
	}

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	void SetRespawnDir(float fDir)
	{
		m_RespawnDir = fDir;
	}

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	float GetRespawnDir(void) const
	{
		return m_RespawnDir;
	}

/*
 -----------------------------------------------------------------------------------------------------------------------
 -----------------------------------------------------------------------------------------------------------------------
 */
private:
	int32		m_RespawnTime;
	CTinyTimer	m_RespawnTimer;
	float		m_RespawnDir;
	GLPos	m_RespawnPos;

/*
 -----------------------------------------------------------------------------------------------------------------------
 -----------------------------------------------------------------------------------------------------------------------
 */
public:

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	BOOL PushSkillToCache(int32 idSkill)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	void GetRateOfBuffTakeEffect(int32 idSkill, int32 &rateOfBuffTakeEffect)
	{
	};

/*
 -----------------------------------------------------------------------------------------------------------------------
 -----------------------------------------------------------------------------------------------------------------------
 */
public:

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual GUID_t GetGUID(void) const
	{
		return m_GUID;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */

	void SetDataID(const uint32 dataID)
	{
		m_nDataID = dataID;
	}

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual uint32 GetDataID(void) const
	{
		return m_nDataID;
	}

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual void SetName(const char *pszName)
	{
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual const char *GetName(void) const
	{
		return m_szName;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */

	virtual void SetTitle(const char *pszTitle)
	{
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual const char *GetTitle(void) const
	{
		return m_szName;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */

	virtual int32 GetExp(void) const
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual void SetExp(int32 nExp)
	{
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */

	virtual void SetHP(int32 nHP)
	{
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual int32 GetHP(void)
	{
		return 100;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */

	virtual void SetMP(int32 nMP)
	{
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual int32 GetMP(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */

	virtual int32 Get_Property_Rage(void)
	{
		return 0;
	}

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual void Set_Property_Rage(int32 nRage)
	{
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */

	virtual int32 GetLevel(void) const
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual void SetLevel(int32 nLevel)
	{
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */

	virtual int32 GetLife(void) const
	{
		return 100;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual void SetLife(int32 nLife)
	{
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */

	virtual int32 GetStrPerception(void) const
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual int32 GetSmartnessPerception(void) const
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual int32 GetMindPerception(void) const
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual int32 GetConstitutionPerception(void) const
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */

	virtual int32 GetRemainPoint(void) const
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual void SetRemainPoint(int32 nRemainPoint)
	{
	}

/*
 -----------------------------------------------------------------------------------------------------------------------
 -----------------------------------------------------------------------------------------------------------------------
 */
protected:
	GUID_t	m_GUID;

/*
 -----------------------------------------------------------------------------------------------------------------------
 -----------------------------------------------------------------------------------------------------------------------
 */
public:

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual int32 Get_Property_MaxStrikePoint(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */

	virtual int32 Get_Property_MaxRage(void)
	{
		return 0;
	}

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual int32 GetBaseMaxRage(void)
	{
		return 0;
	}

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual void SetBaseMaxRage(int32 const nRage)
	{
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual int32 GetRageRegenerate(void)
	{
		return 0;
	}

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual int32 GetBaseRageRegenerate(void)
	{
		return 0;
	}

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual void SetBaseRageRegenerate(int32 const nValue)
	{
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */

	virtual int32 Get_Property_Str(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual int32 Get_BaseProperty_Str(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual void Set_BaseProperty_Str(int32 const nValue)
	{
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */

	virtual int32 Get_Property_Con(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual int32 Get_BaseProperty_Con(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual void Set_BaseProperty_Con(int32 const nValue)
	{
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */

	virtual int32 Get_Property_Int(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual int32 Get_BaseProperty_Int(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual void Set_BaseProperty_Int(int32 const nValue)
	{
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */

	virtual int32 Get_Property_Dex(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual int32 Get_BaseProperty_Dex(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual void Set_BaseProperty_Dex(int32 const nValue)
	{
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */

	virtual int32 GetMaxHP(void)
	{
		return 100;
	}

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual int32 Get_BaseProperty_MaxHP(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual void Set_BaseProperty_MaxHP(int32 const nHp)
	{
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual int32 Get_Property_HPRegenerate(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual int32 Get_BaseProperty_HPRegenerate(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual void Set_BaseProperty_HPRegenerate(int32 const nValue)
	{
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */

	virtual int32 GetMaxMP(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual int32 Get_BaseProperty_MaxMP(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual void Set_BaseProperty_MaxMp(int32 const nMp)
	{
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual int32 Get_Property_MPRegenerate(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual int32 Get_BaseProperty_MPRegenerate(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual void Set_BaseProperty_MPRegenerate(int32 const nValue)
	{
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */

	virtual const SCampData *GetCampData(void)
	{
		return &m_CampData;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual const SCampData *GetBaseCampData(void) const
	{
		return &m_CampData;
	}

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual void SetBaseCampData(const SCampData *pCampData)
	{
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual int32 GetCampID(void)
	{
		return m_CampData.m_nCampID;
	}

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual int32 GetBaseCampID(void) const
	{
		return m_CampData.m_nCampID;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual void SetBaseCampID(int32 const nID)
	{
	};

	virtual int32	GetModelID(void);

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */

	virtual int32 Get_BaseProperty_ModelID(void) const
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual void Set_BaseProperty_ModelID(int32 const nID)
	{
	};

	virtual float	Get_Property_MoveSpeed(void);

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual int32 Get_BaseProperty_MoveSpeed(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual void Set_BaseProperty_MoveSpeed(int32 const nValue)
	{
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */

	virtual int32 Get_Property_AttackSpeed(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual int32 Get_BaseProperty_AttackSpeed(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual void Set_BaseProperty_AttackSpeed(int32 const nValue)
	{
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */

	virtual int32 Get_Property_Miss(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual int32 Get_BaseProperty_Miss(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual void Set_BaseProperty_Miss(int32 const nValue)
	{
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */

	virtual int32 Get_Property_Hit(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual int32 Get_BaseProperty_Hit(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual void Set_BaseProperty_Hit(int32 const nValue)
	{
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */

	virtual int32 Get_Property_Critical(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual int32 Get_BaseProperty_Critical(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual void Set_BaseProperty_Critical(int32 const nValue)
	{
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */

	virtual int32 GetDefenceNear(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual int32 GetBaseDefenceNear(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual void SetBaseDefenceNear(int32 const nValue)
	{
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */

	virtual int32 GetDefenceFar(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual int32 GetBaseDefenceFar(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual void SetBaseDefenceFar(int32 const nValue)
	{
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */

	virtual int32 GetAttackNear(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual int32 GetBaseAttackNear(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual void SetBaseAttackNear(int32 const nValue)
	{
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */

	virtual int32 GetAttackFar(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual int32 GetBaseAttackFar(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual void SetBaseAttackFar(int32 const nValue)
	{
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */

	virtual int32 GetToughness(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual int32 GetBaseToughness(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual void SetBaseToughness(int32 const nValue)
	{
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */

	virtual int32 GetNearAttReduce(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual int32 GetBaseNearAttReduce(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual void SetBaseNearAttReduce(int32 const nValue)
	{
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */

	virtual int32 GetFarAttReduce(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual int32 GetBaseFarAttReduce(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual void SetBaseFarAttReduce(int32 const nValue)
	{
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */

	virtual int32 GetMagicAttReduce(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual int32 GetBaseMagicAttReduce(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual void SetBaseMagicAttReduce(int32 const nValue)
	{
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */

	virtual int32 GetDreadAttResist(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual int32 GetBaseDreadAttResist(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual void SetBaseDreadAttResist(int32 const nValue)
	{
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */

	virtual int32 GetComaAttResist(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual int32 GetBaseComaAttResist(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual void SetBaseComaAttResist(int32 const nValue)
	{
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */

	virtual int32 GetHushAttResist(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual int32 GetBaseHushAttResist(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual void SetBaseHushAttResist(int32 const nValue)
	{
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */

	virtual int32 GetUnArmyAttResist(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual int32 GetBaseUnArmyAttResist(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual void SetBaseUnArmyAttResist(int32 const nValue)
	{
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */

	virtual int32 GetAttSpeedAttResist(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual int32 GetBaseAttSpeedAttResist(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual void SetBaseAttSpeedAttResist(int32 const nValue)
	{
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */

	virtual int32 GetSkillSpeedAttResist(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual int32 GetBaseSkillSpeedAttResist(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual void SetBaseSkillSpeedAttResist(int32 const nValue)
	{
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */

	virtual int32 GetMoveSpeedAttResist(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual int32 GetBaseMoveSpeedAttResist(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual void SetBaseMoveSpeedAttResist(int32 const nValue)
	{
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */

	virtual int32 Get_Property_AttackMagic(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual int32 Get_BaseProperty_AttackMagic(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual void Set_BaseProperty_AttackMagic(int32 const nValue)
	{
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual int32 Get_Property_DefenceMagic(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual int32 Get_BaseProperty_DefenceMagic(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual void Set_BaseProperty_DefenceMagic(int32 const nValue)
	{
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */

	virtual int32 Get_Property_AttackCold(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual int32 Get_BaseProperty_AttackCold(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual void Set_BaseProperty_AttackCold(int32 const nValue)
	{
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual int32 Get_Property_DefenceCold(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual int32 Get_BaseProperty_DefenceCold(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual void Set_BaseProperty_DefenceCold(int32 const nValue)
	{
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */

	virtual int32 Get_Property_AttackFire(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual int32 Get_BaseProperty_AttackFire(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual void Set_BaseProperty_AttackFire(int32 const nValue)
	{
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual int32 Get_Property_DefenceFire(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual int32 Get_BaseProperty_DefenceFire(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual void Set_BaseProperty_DefenceFire(int32 const nValue)
	{
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */

	virtual int32 Get_Property_AttackLight(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual int32 Get_BaseProperty_AttackLight(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual void Set_BaseProperty_AttackLight(int32 const nValue)
	{
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual int32 Get_Property_DefenceLight(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual int32 Get_BaseProperty_DefenceLight(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual void Set_BaseProperty_DefenceLight(int32 const nValue)
	{
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */

	virtual int32 Get_Property_AttackPoison(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual int32 Get_BaseProperty_AttackPoison(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual void Set_BaseProperty_AttackPoison(int32 const nValue)
	{
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual int32 Get_Property_DefencePoison(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual int32 Get_BaseProperty_DefencePoison(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual void Set_BaseProperty_DefencePoison(int32 const nValue)
	{
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */

	virtual int32 Get_Property_ReduceSlowerDuration(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */

	virtual int32 Get_Property_ReduceWeakenDuration(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */

	virtual int32 Get_Property_ReduceFaintDuration(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */

	virtual int32 Get_Property_ReducePoisonedDuration(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */

	virtual int32 GetVisionRange(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual int32 GetBaseVisionRange(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual void SetBaseVisionRange(int32 const nValue)
	{
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */

	virtual int32 Get_Property_MaxVigor(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual int32 GetBaseMaxVigor(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual void SetBaseMaxVigor(int32 const nValue)
	{
	}

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual int32 Get_Property_VigorRegeneRate(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual int32 GetBaseVigorRegeneRate(void)
	{
		return 0;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual void SetBaseVigorRegeneRate(int32 const nValue)
	{
	}

/*
 -----------------------------------------------------------------------------------------------------------------------
 -----------------------------------------------------------------------------------------------------------------------
 */
public:

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	virtual int32 GetItemID(void) const
	{
		return m_nItemId;
	};
	virtual int32	GetBeastieItem(int32 beastieDataId);

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */
	int32 GetBeastieType(void) const
	{
		return m_nBeastieType;
	}

/*
 -----------------------------------------------------------------------------------------------------------------------
 -----------------------------------------------------------------------------------------------------------------------
 */
protected:
	ObjID_t m_OwnerID;
	ObjID_t m_TargetID;

	int32	m_nCapturerCount;
	ObjID_t m_aCapturer[MAX_CAPTURER_NUM];

/*
 -----------------------------------------------------------------------------------------------------------------------
 -----------------------------------------------------------------------------------------------------------------------
 */
private:
	SCampData	m_CampData;		//阵营数据
	char		m_szName[MAX_CHARACTER_NAME];	//小动物名字
	float		m_MoveSpeed;	//移动速度
	int32		m_nModelId;		//模型ID
	uint32		m_nDataID;		//在beastie_attr.tab表里的编号
	int32		m_nItemId;		//小动物生成的物品ID
	int32		m_nBeastieType;//类型：静止或随机移动的
};
#endif
