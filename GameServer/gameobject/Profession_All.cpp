/*$T MapServer/Server/Profession/AllProfessions.cpp GC 1.140 10/10/07 10:07:46 */


/*$6
 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 */


#include "stdafx.h"
#include "Profession_All.h"

/*
 =======================================================================================================================
 -- 武士：自己被攻击( OnDie才调用?)
 =======================================================================================================================
 */

void WuShiProfession::OnEvent_Damage(Player &rMe, int32 nDamage) const
{
	if(0 >= nDamage)
	{
		return;
	}

	/*~~~~~~~~~~~~~~*/
	int32	nRage = 2;
	/*~~~~~~~~~~~~~~*/

	rMe.RageIncrement(nRage, rMe.GetLogicCount(), NULL);
}

/*
 =======================================================================================================================
 =======================================================================================================================
 */
int32 WuShiProfession::TransferValueToRage(int32 nValue) const
{
	if(0 >= nValue)
	{
		return 0;
	}

	return nValue / 20;
}

/*
 =======================================================================================================================
 --武士：自己攻击别人
 =======================================================================================================================
 */
void WuShiProfession::OnEvent_DamageTarget(Player &rMe, int32 nDamage) const
{
	if(0 >= nDamage)
	{
		return;
	}

	/*~~~~~~~~~~~~~~*/
	int32	nRage = 5;
	/*~~~~~~~~~~~~~~*/

	rMe.RageIncrement(nRage, rMe.GetLogicCount(), NULL);//攻击了别人， 自身怒气值要增加5
}

/*
 =======================================================================================================================
 =======================================================================================================================
 */
int32 JianXiaProfession::TransferValueToRage(int32 nValue) const
{
	if(0 >= nValue)
	{
		return 0;
	}

	return nValue / 20;
}

/*
 =======================================================================================================================
 =======================================================================================================================
 */
void QiSheProfession::OnEvent_DepleteStrikePoints(Player &rMe, int32 nStrikePoint) const
{
	if(0 >= nStrikePoint)
	{
		return;
	}

	/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
	int32	nRage = TransferValueToRage(nStrikePoint);
	/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/

	rMe.RefixRageRegeneration(nRage);
	rMe.RageIncrement(nRage, rMe.GetLogicCount(), NULL);
}

/*
 =======================================================================================================================
 =======================================================================================================================
 */
int32 QiSheProfession::TransferValueToRage(int32 nValue) const
{
	if(0 >= nValue)
	{
		return 0;
	}

	return nValue * 10;
}

/*
 =======================================================================================================================
 =======================================================================================================================
 */
void XianZhiProfession::OnEvent_HealTarget(Player &rMe, int32 nHealHp) const
{
}

/*
 =======================================================================================================================
 =======================================================================================================================
 */
int32 XianZhiProfession::TransferValueToRage(int32 nValue) const
{
	if(0 >= nValue)
	{
		return 0;
	}

	return nValue / 20;
}

//--新职业开始
void ShiZiJunProfession::OnEvent_Damage(Player &rMe, int32 nDamage) const
{
	if(0 >= nDamage)
	{
		return;
	}

	/*~~~~~~~~~~~~~~*/
	int32	nRage = 2;
	/*~~~~~~~~~~~~~~*/

	rMe.RageIncrement(nRage, rMe.GetLogicCount(), NULL);
}

/*
=======================================================================================================================
=======================================================================================================================
*/
int32 ShiZiJunProfession::TransferValueToRage(int32 nValue) const
{
	if(0 >= nValue)
	{
		return 0;
	}

	return nValue / 20;
}

/*
=======================================================================================================================
--
=======================================================================================================================
*/
void ShiZiJunProfession::OnEvent_DamageTarget(Player &rMe, int32 nDamage) const
{
	if(0 >= nDamage)
	{
		return;
	}

	/*~~~~~~~~~~~~~~*/
	int32	nRage = 5;
	/*~~~~~~~~~~~~~~*/

	rMe.RageIncrement(nRage, rMe.GetLogicCount(), NULL);
}

/*
=======================================================================================================================
=======================================================================================================================
*/
int32 ShengHuoShiProfession::TransferValueToRage(int32 nValue) const
{
	if(0 >= nValue)
	{
		return 0;
	}

	return nValue / 20;
}

/*
=======================================================================================================================
=======================================================================================================================
*/
void CiKeProfession::OnEvent_DepleteStrikePoints(Player &rMe, int32 nStrikePoint) const
{
	if(0 >= nStrikePoint)
	{
		return;
	}

	/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
	int32	nRage = TransferValueToRage(nStrikePoint);
	/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/

	rMe.RefixRageRegeneration(nRage);
	rMe.RageIncrement(nRage, rMe.GetLogicCount(), NULL);
}

/*
=======================================================================================================================
=======================================================================================================================
*/
int32 CiKeProfession::TransferValueToRage(int32 nValue) const
{
	if(0 >= nValue)
	{
		return 0;
	}

	return nValue * 10;
}

/*
=======================================================================================================================
=======================================================================================================================
*/
void YinXiuShiProfession::OnEvent_HealTarget(Player &rMe, int32 nHealHp) const
{
}

/*
=======================================================================================================================
=======================================================================================================================
*/
int32 YinXiuShiProfession::TransferValueToRage(int32 nValue) const
{
	if(0 >= nValue)
	{
		return 0;
	}

	return nValue / 20;
}
