/*$T MapServer/Server/Obj/GatherBoxManager.h GC 1.140 10/10/07 10:07:31 */


/*$6
 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 */


#ifndef _ITEMBOX_MANAGER_H_
#define _ITEMBOX_MANAGER_H_
#include "TypeDefine.h"

class	GameMap;
class	ItemBox;
struct SItemBoxContaner;
class GatherBoxManager
{
/*
 -----------------------------------------------------------------------------------------------------------------------
 -----------------------------------------------------------------------------------------------------------------------
 */
public:
	GatherBoxManager();
	~	GatherBoxManager();

/*
 -----------------------------------------------------------------------------------------------------------------------
 -----------------------------------------------------------------------------------------------------------------------
 */
public:
	void		Init();

	void		Clear();

	virtual BOOL	HeartBeat(uint32 uTime = 0);

	BOOL		Add(ItemBox *pItemBox);

	BOOL		Remove(ObjID_t ObjID);

	ItemBox		*GenItemBox();

	void		RecycleItemBox(ObjID_t ObjID);

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */

	void SetMap(GameMap*pMap)
	{
		KCheck(pMap);
		m_pMap = pMap;
	};

	/*
	 ===============================================================================================================
	 ===============================================================================================================
	 */

	GameMap *GetMap()
	{
		return m_pMap;
	};

	BOOL	Resize(uint32 iSize);

	ItemBox *GetItemBox(ObjID_t ObjID);

	BOOL	RemoveAllItemBox(void);

/*
 -----------------------------------------------------------------------------------------------------------------------
 -----------------------------------------------------------------------------------------------------------------------
 */
public:
	ItemBox *CreateMonsterDropItembox(GLPos *pPos);

	ItemBox *CreateGatherPointItemBox(int32 IBType, int32 iCycleTime = -1);

/*
 -----------------------------------------------------------------------------------------------------------------------
 -----------------------------------------------------------------------------------------------------------------------
 */
private:
	CTinyTimer	m_LogicTimer;

/*
 -----------------------------------------------------------------------------------------------------------------------
 -----------------------------------------------------------------------------------------------------------------------
 */
private:
	ObjID_t *m_pItemBoxObjID;

	uint32	m_TotalSize;

	uint32	m_Count;

	GameMap*m_pMap;
};
#endif
