/*$T Common/Enum.h GC 1.140 10/10/07 10:06:30 */


/*$6
 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 */


#ifndef __ENUM_H__
#define __ENUM_H__

#include "Define.h"

enum eITEM_OPT_ERR
{
	ITEMOE_SUCCESS			= 0,
	ITEMOE_UNKNOW			= -1,
	ITEMOE_DESTOPERATOR_HASITEM	= -2,
	ITEMOE_SOUROPERATOR_LOCK	= -3,
	ITEMOE_DESTOPERATOR_LOCK	= -4,
	ITEMOE_DESTOPERATOR_FULL	= -5,
	ITEMOE_SOUROPERATOR_EMPTY	= -6,
	ITEMOE_DESTOPERATOR_EMPTY	= -7,
	ITEMOE_CREATEITEM_FAIL		= -8,
	ITEMOE_CREATEGUID_FAIL		= -9,
	ITEMOE_DIFF_ITEM_DATA		= -10,
	ITEMOE_DESTOPERATOR_FAIL	= -11,
	ITEMOE_DESTOPUSE_FAIL		= -12,
	ITEMOE_SOUROPUSE_FAIL		= -13,
	ITEMOE_DESTOPERATOR_INVALID	= -14,
	ITEMOE_SOUROPERATOR_INVALID	= -15,
};

enum ITEM_CHANGE_TYPE
{ 
	ITEM_CHANGE_ADDITEM = 0,
	ITEM_CHANGE_ERASEITEM, 
	ITEM_CHANGE_NUM, 
};

enum BAGPOS_TYPE 
{ 
	BAG_BASE = -1, 
	BAG_EXTRA1, 
	BAG_EXTRA2, 
	BAG_EXTRA3,
	BAG_EXTRA4,
	BAG_NUM, 
};

enum ITEM_DISTRIB_MODE 
{ 
	ITEM_FREE_DISTRIB = 0, 
	ITEM_TEAMLEADER_DISTRIB = 1,
	ITEM_INTURNS_DISTRIB = 2, 
	ITEM_DISTRIB_NUM, 
};

enum eDIE_RESULT_CODE
{
	DIE_RESULT_CODE_INVALID = -1,
	ORIGIN_LOSSLESS_RELIVE,
	ORIGIN_DAMAGE_RELIVE,
	CITY_POS_RELIVE,
	DIE_RESULT_CODE_NUMBERS
};

enum COUNTRY_ATTRIBUTE
{
	COUATTRIBUTE_LOULAN	= 0,
	COUATTRIBUTE_LAIYIN,
	COUATTRIBUTE_KUNLUN,
	COUATTRIBUTE_DUNHUANG,
	COUATTRIBUTE_NUMBER,
};

enum SUB_TRAIN_MODE
{
	SUBTRAIN_MODE1		= 0,
	SUBTRAIN_MODE1POINT5	= 1,
	SUBTRAIN_MODE2		= 2,
	SUBTRAIN_MODE3		= 3,
};

enum PROFESSION_TYPE
{
	PROFESSION_UNKNOW	= -1,
	PROFESSION_WUSHI	= 0,
	PROFESSION_JIANXIA	= 1,
	PROFESSION_QISHE	= 2,
	PROFESSION_HUOQIANG	= 3,
	PROFESSION_XIANZHI	= 4,
	PROFESSION_SAMAN	= 5,
	PROFESSION_SHIZIJUN	= 6,
	PROFESSION_SHENGHUOSHI = 7,
	PROFESSION_CIKE 	= 8,
	PROFESSION_JINWEIJUN = 9,
	PROFESSION_YINXIUSHI = 10,
	PROFESSION_LAMA 	= 11,
	PROFESSION_NUMBER,
	PROFESSION_NONE		= 99,
};
enum COMMON_S 
{ 
	COMMON_S1 = 0, 
	COMMON_S2, 
	COMMON_S3, 
	COMMON_S4, 
	COMMON_S5, 
	COMMON_S_NUMBER, 
};

enum eRELATION 
{ 
	RELATION_INVALID = -1, 
	RELATION_ENEMY, 
	RELATION_FRIEND, 
	RELATION_NUMBERS 
};

enum eCOUNTRYCOLLEAGE
{
	COUNTRY_PLAYER_PK_HUNZHAN   = -2 , //剔除狂暴模式
	COUNTRY_COLLEAGUE_NOT_VALID = -1 , //其他参数错误
	COUNTRY_NOT_COLLEAGUE, //没有结盟
	COUNTRY_HAS_COLLEAGUE, //已经结盟
};

enum eNPC_BHV_ATTR
{
	NPC_AI_TYPE_INVALID	= -1,
	NPC_AI_TYPE_SCANNPC	= 0,
	NPC_AI_TYPE_NOTSCANNPC	= 1,
	NPC_AI_TYPE_CANNOTATTACK= 2,
	NPC_AI_TYPE_CANATTACK = 3,
};

enum ITEM_POS_TYPE 
{ 
	ENUM_BAG = 0, 
	ENUM_EQUIP_POINT, 
	INVALID_ITEM_POS_TYPE, 
};

enum PROPERTYINFO_TYPE
{
	AINFOTYPE_BASE_HP		= 0,
	AINFOTYPE_BASE_CON,
	AINFOTYPE_LEVEL_CON,
	AINFOTYPE_CON_HP,
	AINFOTYPE_LEVEL_HP,
	AINFOTYPE_BASE_HPRESTORE,
	AINFOTYPE_LEVEL_HPRESTORE,
	AINFOTYPE_BASE_MP,
	AINFOTYPE_INT_RAGE,
	AINFOTYPE_LEVEL_MP,
	AINFOTYPE_BASE_MPRESTORE,
	AINFOTYPE_LEVEL_MPRESTORE,
	AINFOTYPE_BASE_RAGE,
	AINFOTYPE_LEVEL_RAGE,
	AINFOTYPE_BASE_RAGERESTORE,
	AINFOTYPE_LEVEL_RAGERESTORE,
	AINFOTYPE_BASE_STRENGTH,
	AINFOTYPE_LEVEL_STRENGTH,
	AINFOTYPE_BASE_NEARATTACK,
	AINFOTYPE_STR_NEARATTACK,
	AINFOTYPE_DEX_NEARATTACK,
	AINFOTYPE_INT_NEARATTACK,
	AINFOTYPE_LEVEL_NEARATTACK,
	AINFOTYPE_BASE_DEX,
	AINFOTYPE_LEVEL_DEX,
	AINFOTYPE_BASE_FARATTACK,
	AINFOTYPE_STR_FARATTACK,
	AINFOTYPE_DEX_FARATTACK,
	AINFOTYPE_INT_FARATTACK,
	AINFOTYPE_LEVEL_FARATTACK,
	AINFOTYPE_BASE_NEARDEFENCE_P,
	AINFOTYPE_LEVEL_NEARDEFENCE_P,
	AINFOTYPE_BASE_FARDEFENCE_P,
	AINFOTYPE_LEVEL_FARDEFENCE_P,
	AINFOTYPE_BASE_TOUGHNESS,
	AINFOTYPE_LEVEL_TOUGHNESS,
	AINFOTYPE_BASE_INT,
	AINFOTYPE_LEVEL_INT,
	AINFOTYPE_BASE_ATTACK_M,
	AINFOTYPE_STR_ATTACK_M,
	AINFOTYPE_DEX_ATTACK_M,
	AINFOTYPE_INT_ATTACK_M,
	AINFOTYPE_LEVEL_ATTACK_M,
	AINFOTYPE_BASE_DEFENCE_M,
	AINFOTYPE_LEVEL_DEFENCE_M,
	AINFOTYPE_BASE_HIT,
	AINFOTYPE_STR_HIT,
	AINFOTYPE_LEVEL_HIT,
	AINFOTYPE_BASE_MISS,
	AINFOTYPE_DEX_MISS,
	AINFOTYPE_LEVEL_MISS,
	AINFOTYPE_BASE_CRITRATE,
	AINFOTYPE_INT_CRITRATE,
	AINFOTYPE_LEVEL_CRITRATE,
	AINFOTYPE_ATTACK_FLUCTUATION,
	AINFOTYPE_NUMBER,
};

enum eATTACK_ERROR
{
	AERROR_NOTLIVE			= -1,
	AERROR_NOTSCENE			= -2,
	AERROR_OUTRANGE			= -3,
	AERROR_INVALID			= -4,
	AERROR_HIT			= -5,
	AERROR_IAMDEAD			= -6,
	AERROR_BREAK			= -7,
	AERROR_CANNOTATTACK		= -8,
};

enum eSPECIAL_ABILITY_NUMBER 
{ 
	EAN_GEM_COMPOUNDED = MAX_CHAR_ABILITY_NUM + 1,
	EAN_GEM_EMBEDDED,
};

enum 
{ 
	COOLDOWN_LIST_SIZE = 255, 
};

enum 
{ 
	COMMONCOOLDOWN_TIME = 1000, 
};

enum eSPELL_DEPLETE_LOGIC
{
	DEPLETE_INVALID			= -1,
	DEPLETE_MANA			= 0,
	DEPLETE_RAGE,
	DEPLETE_STRIKE_POINT,
	DEPLETE_ITEM_STD,
};
enum eEFFECT_STATUS
{
	ESTATUS_COLD			= 0,
	ESTATUS_FIRE			= 1,
	ESTATUS_LIGHT			= 2,
	ESTATUS_POISON			= 3,
	ESTATUS_NUMBER,
};

enum SPELL_PROPERTY 
{ 
	SATTRIBUTE_ATTACK_P = 0, 
	SATTRIBUTE_RATE_ATTACK_P = 1, 
	SATTRIBUTE_NUMBER, 
};

enum eMONSTER_BHV_PRAM
{
	BHVPARAM_SCANTIME			= 0,
	BHVPARAM_RANDMOVETIME		= 1,
	BHVPARAM_CANNOTATTACK		= 2,
	BHVPARAM_RETURN				= 3,
	BHVPARAM_SCANENEMYDIST		= 4,
	BHVPARAM_SCANTEAMMATEDIST	= 5,
	BHVPARAM_RESETTARGET_DIST	= 6,
	BHVPARAM_RET_ORI_STATE		= 7, //是否可以回到原始状态，比如回血，清除buff
	BHVPARAM_STRIKEBACK			= 8,
	BHVPARAM_NUMBER,
};

enum ENUM_UPDATE_CHARPLAYER_ATT
{
	UPDATE_CHARPLAYER_ATT_JOB		= 0,
	UPDATE_CHARPLAYER_ATT_COUNTRY,
	UPDATE_CHARPLAYER_ATT_DATA_ID,
	UPDATE_CHARPLAYER_ATT_NAME,
	UPDATE_CHARPLAYER_ATT_COUNTRYTITLE,
	UPDATE_CHARPLAYER_ATT_GUILDTITLE,
	UPDATE_CHARPLAYER_ATT_NORMALTITLE,
	UPDATE_CHARPLAYER_ATT_LEVEL,
	UPDATE_CHARPLAYER_ATT_HP_PERCENT,
	UPDATE_CHARPLAYER_ATT_RAGE,
	UPDATE_CHARPLAYER_ATT_MAX_RAGE,
	UPDATE_CHARPLAYER_ATT_STEALTH_LEVEL,
	UPDATE_CHARPLAYER_ATT_SIT,
	UPDATE_CHARPLAYER_ATT_MOVE_SPEED,
	UPDATE_CHARPLAYER_ATT_ATTACK_SPEED,
	UPDATE_CHARPLAYER_ATT_CAMP_ID,
	UPDATE_CHARPLAYER_ATT_PORTRAIT_ID,
	UPDATE_CHARPLAYER_ATT_MODEL_ID,
	UPDATE_CHARPLAYER_ATT_MOUNT_ID,
	UPDATE_CHARPLAYER_ATT_PLAYER_DATA,
	UPDATE_CHARPLAYER_IS_IN_STALL,
	UPDATE_CHARPLAYER_STALL_NAME,
	UPDATE_CHARPLAYER_BUS_STATE,
	UPDATE_CHARPLAYER_BUSID,
	UPDATE_CHARPLAYER_GUILD,
	UPDATE_CHARPLAYER_GUILDPOSITION,
	UPDATE_CHARPLAYER_TARGETID,
	UPDATE_CHARPLAYER_PK_VALUE,
	UPDATE_CHARPLAYER_TEAM_ID,
	UPDATE_CHARPLAYER_BYGENERATION,
	UPDATE_CHARPLAYER_HIDE_NAME,
	UPDATE_CHARPLAYER_SCALE,
	UPDATE_CHARPLAYER_WORLDID,
	//需要天赋特效时打开
	UPDATE_CHARPLAYER_INHERENCE_EXP,
	UPDATE_CHARPLAYER_INHERENCE_LEVEL,
	UPDATE_CHARPLAYER_ATT_NUMBERS
};

enum ENUM_UPDATE_CHARMONSTER_ATT
{
	UPDATE_CHARMONSTER_ATT_DATA_ID		= 0,
	UPDATE_CHARMONSTER_ATT_NAME,
	UPDATE_CHARMONSTER_ATT_COUNTRYTITLE,
	UPDATE_CHARMONSTER_ATT_GUILDTITLE,
	UPDATE_CHARMONSTER_ATT_NORMALTITLE,
	UPDATE_CHARMONSTER_ATT_LEVEL,
	UPDATE_CHARMONSTER_ATT_HP_PERCENT,
	UPDATE_CHARMONSTER_ATT_STEALTH_LEVEL,
	UPDATE_CHARMONSTER_ATT_SIT,
	UPDATE_CHARMONSTER_ATT_MOVE_SPEED,
	UPDATE_CHARMONSTER_ATT_ATTACK_SPEED,
	UPDATE_CHARMONSTER_ATT_CAMP_ID,
	UPDATE_CHARMONSTER_ATT_PORTRAIT_ID,
	UPDATE_CHARMONSTER_ATT_MODEL_ID,
	UPDATE_CHARMONSTER_ATT_MOUNT_ID,
	UPDATE_CHARMONSTER_ATT_AITYPE,
	UPDATE_CHARMONSTER_OCCUPANT,
	UPDATE_CHARMONSTER_OWNER,
	UPDATE_CHARMONSTER_TARGETID,
	UPDATE_CHARMONSTER_DIR,
	UPDATE_CHARMONSTER_CTRL_STATE,
	UPDATE_CHARMONSTER_SCALE,
	UPDATE_CHARMONSTER_ATT_NUMBERS
};

enum ENUM_UPDATE_CHARBUS_ATT
{
	UPDATE_CHARBUS_ATT_DATA_ID		= 0,
	UPDATE_CHARBUS_ATT_LEVEL,
	UPDATE_CHARBUS_ATT_NAME,
	UPDATE_CHARBUS_ATT_COUNTRYTITLE,
	UPDATE_CHARBUS_ATT_GUILDTITLE,
	UPDATE_CHARBUS_ATT_NORMALTITLE,
	UPDATE_CHARBUS_ATT_HP_PERCENT,
	UPDATE_CHARBUS_ATT_MOVE_SPEED,
	UPDATE_CHARBUS_ATT_ATTACK_SPEED,
	UPDATE_CHARBUS_ATT_CAMP_ID,
	UPDATE_CHARBUS_ATT_PORTRAIT_ID,
	UPDATE_CHARBUS_ATT_MODEL_ID,
	UPDATE_CHARBUS_ATT_AITYPE,
	UPDATE_CHARBUS_BUS_TYPE,
	UPDATE_CHARBUS_OCCUPANT,
	UPDATE_CHARBUS_OWNER,
	UPDATE_CHARBUS_OWNERGUID,
	UPDATE_CHARBUS_OWNER_TEAM,
	UPDATE_CHARBUS_BUS_GUILD,
	UPDATE_CHARBUS_TARGETID,
	UPDATE_CHARBUS_BUSID,
	UPDATE_CHARBUS_BUSPOS,
	UPDATE_CHARBUS_MEMBER1,
	UPDATE_CHARBUS_MEMBER2,
	UPDATE_CHARBUS_MEMBER3,
	UPDATE_CHARBUS_MEMBER4,
	UPDATE_CHARBUS_MEMBER5,
	UPDATE_CHARBUS_MEMBER6,
	UPDATE_CHARBUS_MEMBER7,
	UPDATE_CHARBUS_MEMBER8,
	UPDATE_CHARBUS_SCALE,
	UPDATE_CHARBUS_ATT_NUMBERS
};

enum eDETAIL_PROPERTY
{
	DETAIL_ATTRIB_LEVEL			= 0,
	DETAIL_ATTRIB_HP,
	DETAIL_ATTRIB_MP,
	DETAIL_ATTRIB_EXP,
	DETAIL_ATTRIB_SILLER,
	DETAIL_ATTRIB_BINDSILLER,
	DETAIL_ATTRIB_GOLD,
	DETAIL_ATTRIB_BINDGOLD,
	DETAIL_ATTRIB_SILLERMODE,
	DETAIL_ATTRIB_GOLDMODE,
	DETAIL_ATTRIB_STR,
	DETAIL_ATTRIB_CON,
	DETAIL_ATTRIB_INT,
	DETAIL_ATTRIB_DEX,
	DETAIL_ATTRIB_POINT_REMAIN,
	DETAIL_ATTRIB_SKILLPOINT_REMAIN,
	DETAIL_ATTRIB_S_SKILLPOINT,
	DETAIL_ATTRIB_ATT_NEAR,
	DETAIL_ATTRIB_ATT_FAR,
	DETAIL_ATTRIB_DEF_NEAR,
	DETAIL_ATTRIB_DEF_FAR,
	DETAIL_ATTRIB_ATT_MAGIC,
	DETAIL_ATTRIB_DEF_MAGIC,
	DETAIL_ATTRIB_MAXHP,
	DETAIL_ATTRIB_MAXMP,
	DETAIL_ATTRIB_HP_RESPEED,
	DETAIL_ATTRIB_MP_RESPEED,
	DETAIL_ATTRIB_TOUGHNESS,
	DETAIL_ATTRIB_HIT,
	DETAIL_ATTRIB_MISS,
	DETAIL_ATTRIB_CRITRATE,
	DETAIL_ATTRIB_MAXRAGE,
	DETAIL_ATTRIB_RAGE,
	DETAIL_ATTRIB_RAGE_RESPEED,
	DETAIL_ATTRIB_CRITICALHURT,
	DETAIL_ATTRIB_STRIKE_POINT,
	DETAIL_ATTRIB_MOVESPEED,
	DETAIL_ATTRIB_ATTACKSPEED,
	DETAIL_ATTRIB_ATTACKCOLD,
	DETAIL_ATTRIB_DEFENCECOLD,
	DETAIL_ATTRIB_ATTACKFIRE,
	DETAIL_ATTRIB_DEFENCEFIRE,
	DETAIL_ATTRIB_ATTACKLIGHT,
	DETAIL_ATTRIB_DEFENCELIGHT,
	DETAIL_ATTRIB_ATTACKPOISON,
	DETAIL_ATTRIB_DEFENCEPOISON,
	DETAIL_ATTRIB_NEARATT_REDUCE,
	DETAIL_ATTRIB_FARATT_REDUCE,
	DETAIL_ATTRIB_MAGICATT_REDUCE,
	DETAIL_ATTRIB_DREAD_RESIST,
	DETAIL_ATTRIB_COMA_RESIST,
	DETAIL_ATTRIB_HUSH_RESIST,
	DETAIL_ATTRIB_UNARM_RESIST,
	DETAIL_ATTRIB_ATTACKSPEED_RESIST,
	DETAIL_ATTRIB_SKILLSPEED_RESIST,
	DETAIL_ATTRIB_MOVEREDUCE_RESIST,
	DETAIL_ATTRIB_COUNTRY,
	DETAIL_ATTRIB_PROFESSION,
	DETAIL_ATTRIB_GUILD,
	DETAIL_ATTRIB_GUILD_POINT,
	DETAIL_ATTRIB_PK_VALUE,
	DETAIL_ATTRIB_HONOR,
	DETAIL_ATTRIB_FAMILY,
	DETAIL_ATTRIB_GUILD_OFFICIAL,
	DETAIL_ATTRIB_CAMP,
	DETAIL_ATTRIB_DUEL,
	DETAIL_ATTRIB_DATAID,
	DETAIL_ATTRIB_PORTRAITID,
	DETAIL_ATTRIB_FACEMODEL,
	DETAIL_ATTRIB_MODELID,
	DETAIL_ATTRIB_MOUNTID,
	DETAIL_ATTRIB_CURRENT_PET_GUID,
	DETAIL_ATTRIB_LIMIT_MOVE,
	DETAIL_ATTRIB_CAN_ACTION1,
	DETAIL_ATTRIB_CAN_ACTION2,
	DETAIL_ATTRIB_VIGOR,
	DETAIL_ATTRIB_MAX_VIGOR,
	DETAIL_ATTRIB_VIGOR_REGENERATE,
	DETAIL_ATTRIB_ENERGY,
	DETAIL_ATTRIB_MAX_ENERGY,
	DETAIL_ATTRIB_GOODBADVALUE,
	DETAIL_ATTRIB_TEAMID,
	DETAIL_ATTRIB_WENCAI,
	DETAIL_ATTRIB_RONGYU,
	DETAIL_ATTRIB_SHENGWANG,
	DETAIL_ATTRIB_TERRAN,
	DETAIL_ATTRIB_HOTVALUE,
	DETAIL_ATTRIB_GUILD_NAME,
	DETAIL_ATTRIB_FAMILY_NAME,
	DETAIL_ATTRIB_CUR_INHERENCE_EXP,
	DETAIL_ATTRIB_CUR_INHERENCE_LEVEL,
	DETAIL_CHAR_ATT_PLAYER_DATA,
	DETAIL_ATTRIB_KILL_COUNT_TODAY,
	DETAIL_CHAR_ATT_TIRED_TIME,
	DETAIL_ATTRIB_BATTLEHONOUR,
	DETAIL_ATTRIB_PVP2V2_MARK,
	DETAIL_ATTRIB_PVP2V2_LEVEL,
	DETAIL_ATTRIB_PVP2V2_MARK_WEEKTOTAL,
	DETAIL_ATTRIB_BANKPETVALIDCT,
	DETAIL_ATTRIB_GUILD_MERIT,
    DETAIL_ATTRIB_FEAST_SCORE,
	DETAIL_ATTRIB_MOVEMOVE,
	DETAIL_ATTRIB_NUMBERS
};

typedef enum eDMG_TYPE
{
	DAMAGE_TYPE_NEAR,
	DAMAGE_TYPE_FAR,
	DAMAGE_TYPE_M,
	DAMAGE_TYPE_COLD,
	DAMAGE_TYPE_FIRE,
	DAMAGE_TYPE_LIGHT,
	DAMAGE_TYPE_POISON,
	DAMAGE_TYPE_NUMBER,
} DamageType_T;

enum ePLAYER_ATT
{
	CHAR_ATT_INVALID			= -1,
	CHAR_ATT_STR,
	CHAR_ATT_CON,
	CHAR_ATT_INT,
	CHAR_ATT_DEX,
	CHAR_ATT_HP,
	CHAR_ATT_MP,
	CHAR_ATT_MAX_HP,
	CHAR_ATT_MAX_MP,
	CHAR_ATT_RESTORE_HP,
	CHAR_ATT_RESTORE_MP,
	CHAR_ATT_HIT,
	CHAR_ATT_MISS,
	CHAR_ATT_CRIT_RATE,
	CHAR_ATT_SPEED,
	CHAR_ATT_ATTACK_SPEED,
	CHAR_ATT_ATTACK_NEAR,
	CHAR_ATT_DEFENCE_NEAR,
	CHAR_ATT_ATTACK_FAR,
	CHAR_ATT_DEFENCE_FAR,
	CHAR_ATT_ATTACK_MAGIC,
	CHAR_ATT_DEFENCE_MAGIC,
	CHAR_ATT_ATTACK_COLD,
	CHAR_ATT_DEFENCE_COLD,
	CHAR_ATT_ATTACK_FIRE,
	CHAR_ATT_DEFENCE_FIRE,
	CHAR_ATT_ATTACK_LIGHT,
	CHAR_ATT_DEFENCE_LIGHT,
	CHAR_ATT_ATTACK_POISON,
	CHAR_ATT_DEFENCE_POISON,
	CHAR_ATT_ANGER,
	CHAR_ATT_SKILL_POINT,
	CHAR_ATT_NUMBERS
};

enum eTEAM_ERROR_CODE
{
	TEAM_ERROR_INVITEDESTHASTEAM		= 0,
	TEAM_ERROR_INVITEREFUSE,
	TEAM_ERROR_INVITETEAMFULL,
	TEAM_ERROR_INVITELEADERREFUSE,
	TEAM_ERROR_DISMISSNOTLEADER,
	TEAM_ERROR_KICKNOTLEADER,
	TEAM_ERROR_APPLYSOURHASTEAM,
	TEAM_ERROR_APPLYDESTHASNOTTEAM,
	TEAM_ERROR_APPLYLEADERREFUSE,
	TEAM_ERROR_APPLYTEAMFULL,
	TEAM_ERROR_APPLYLEADERGUIDERROR,
	TEAM_ERROR_APPOINTSOURNOTEAM,
	TEAM_ERROR_APPOINTDESTNOTEAM,
	TEAM_ERROR_APPOINTNOTSAMETEAM,
	TEAM_ERROR_APPOINTSOURNOLEADER,
	TEAM_ERROR_APPLYLEADERCANTANSWER,
	TEAM_ERROR_INVITERNOTINTEAM,
	TEAM_ERROR_APPLYWHENINTEAM,
	TEAM_ERROR_TEAMFULL,
	TEAM_ERROR_REFUSEINVITESETTING,
	TEAM_ERROR_TARGETNOTONLINE,
	TEAM_ERROR_LEAVETEAM,
	TEAM_ERROR_TARGETNOTONECOUNTRY,
	TEAM_ERROR_HUNZHANSCENE,
	TEAM_ERROR_DISTRIBNOLEADER,
	TEAM_ERROR_COPYSCENCE,
	TEAM_ERROR_INVITNOUSER,
	TEAM_ERROR_ENOUNCENOTLEADER,
	TEAM_ERROR_NOTARGETTEAM,
	TEAM_ERROR_LEADER_OFFLINE,
	TEAM_SUCCESS,
	TEAM_UNKNOW,
	TEAM_ERROR_NUMBER,
};

enum eTEAM_RESULT_CODE
{
	TEAM_RESULT_MEMBERENTERTEAM		= 0,
	TEAM_RESULT_MEMBERLEAVETEAM,
	TEAM_RESULT_LEADERLEAVETEAM,
	TEAM_RESULT_TEAMDISMISS,
	TEAM_RESULT_TEAMKICK,
	TEAM_RESULT_LEVAVE,
	TEAM_RESULT_TEAMAPPOINT,
	TEAM_RESULT_TEAMREFRESH,
	TEAM_RESULT_STARTCHANGESCENE,
	TEAM_RESULT_ENTERSCENE,
	TEAM_RESULT_REFRESHSERVERINFO,
	TEAM_RESULT_MEMBEROFFLINE,
	TEAM_RESULT_BUILD,
	TEAM_RESULT_NUMBER,
};

enum eNOTIFY_TEAM_INFO 
{ 
	NOTIFY_USERCHANGESCENE = 0, 
	NOTIFY_USERENTERSCENE, 
};

enum BUS_ERROR
{
	BUS_ERROR_APPLY_LEADER_REFUSE,
	BUS_ERROR_APPLY_WHENIN_BUS,
	BUS_ERROR_BUS_FULL,
	BUS_ERROR_INVITE_REFUSE,
	BUS_ERROR_SCENE_ERROR,
	BUS_ERROR_NUMBER,
};

enum BUS_RESULT
{
	BUS_RESULT_MEMBER_ENTER_BUS		= 0,	//乘员进入BUS
	BUS_RESULT_MEMBER_LEAVE_BUS,			//乘员离开BUS
	BUS_RESULT_LEADER_LEAVE_BUS,			//队长离开BUS
	BUS_RESULT_DISMISS_BUS,					//解散BUS
	BUS_RESULT_CASHBOX_TO_BUS,				//镖车变身成BUS
	BUS_RESULT_BUS_TO_CASHBOX,				//BUS变身成镖车
	BUS_RESULT_MEMBER_OFFLINE,				//乘员离线
	BUS_RESULT_BUS_OWNER_CREATE,			//主人创建BUS
	BUS_RESULT_BUS_NOTIFY_OWNER_DEL,		//通知主人删除BUS
	BUS_RESULT_BUS_INVALID,					//无效的BUS
	BUS_RESULT_DELETE_SYSTEM_BUS,			//删除系统BUS
	BUS_RESULT_TEAM_ID,						//同步BUS队组ID
	BUS_RESUT_CAN_MOVE,						//BUS可移动
	BUS_RESUT_NOT_MOVE,						//BUS不可移动
	BUS_RESULT_NUMBER,
};

enum ENUM_SYSTEM_CHAR_SHOW_POS
{
	CHAT_MAIN_WINDOW			= 0,
	CHAT_LEFTDOWN,
	CHAT_RIGHTDOWN,
	CHAT_PLUMB_SCROLL,
	CHAT_PLANE_SCROLL,
	CHAT_MAIN_RIGHTDOWN,
	CHAT_MIDDLE_BOTTOM_SCROLL,
	CHAT_MIDDLE_BOTTOM_TEXT,
	CHAT_MIDDLE_ANIM,
	CHAR_SHOW_POS_NUM
};

enum ENUM_MSG_TYPE 
{ 
	CHAT_MSG_TYPE = 0, 
	TIPS_MSG_TYPE, 
	INVALID_MSG_TYPE, 
};

enum eCHAT_TYPE
{
	CHAT_TYPE_INVALID			= -1,
	CHAT_TYPE_NEAR				= 0,
	CHAT_TYPE_TEAM,
	CHAT_TYPE_WORLD,
	CHAT_TYPE_USER,
	CHAT_TYPE_SYSTEM,
	CHAT_TYPE_JIAZU,
	CHAT_TYPE_GUILD,
	CHAT_TYPE_COUNTRY,
	CHAT_TYPE_SELF,
	CHAT_TYPE_DMA_FORCE,
	CHAT_TYPE_DMA_REQUEST,
	CHAT_TYPE_DMA_AGREE,
	CHAT_TYPE_DMA_REFUSE,
	CHAT_TYPE_DMA_CANCEL,
	CHAR_TYPE_XIAOLABA,
	CHAT_TYPE_DIALOG,
	CHAT_TYPE_MONITOR_NEAR,
	CHAT_TYPE_ROSE,
	CHAT_TYPE_NUMBER,
};

enum eCHAT_NEED_TYPE
{
	CHAT_NEED_NONE				= -1,
	CHAT_NEED_SILLER			= 0,
	CHAT_NEED_BINDSILLER		= 1,
	CHAT_NEED_GOLD				= 2,
	CHAT_NEED_BINDGOLD			= 3,
	CHAT_NEED_ITEM				= 4,
	CHAT_NEED_CALL_SCRIPT		= 5,
	CHAT_NEED_NUMBER,
};

enum eCHANNEL_ERROR
{
	CHANNEL_ERROR_HASCHANNEL		= 0,
	CHANNEL_ERROR_CHANNELFULL,
	CHANNEL_ERROR_NOCHANNEL,
	CHANNEL_ERROR_CHANNELMEMBERFULL,
	CHANNEL_ERROR_MEMBEREXIST,
	CHANNEL_ERROR_NOTINCHANNEL,
	CHANNEL_ERROR_NUMBER,
};

enum eCHANNEL_RESULT
{
	CHANNEL_RESULT_CREATE			= 0,
	CHANNEL_RESULT_ADDMEMBER,
	CHANNEL_RESULT_DISMISS,
	CHANNEL_RESULT_KICKMEMBER,
	CHANNEL_RESULT_NUMBER,
};

enum eTEAM_MEMBER_ATT
{
	TEAM_MEMBER_ATT_INVALID			= -1,
	TEAM_MEMBER_ATT_FAMILY,
	TEAM_MEMBER_ATT_LEVEL,
	TEAM_MEMBER_ATT_POSITION,
	TEAM_MEMBER_ATT_HP,
	TEAM_MEMBER_ATT_MAX_HP,
	TEAM_MEMBER_ATT_MP,
	TEAM_MEMBER_ATT_MAX_MP,
	TEAM_MEMBER_ATT_ANGER,
	TEAM_MEMBER_ATT_MAX_ANGER,
	TEAM_MEMBER_ATT_WEAPON,
	TEAM_MEMBER_ASSIHAND,
	TEAM_MEMBER_ATT_CAP,
	TEAM_MEMBER_ATT_SCAPULAR,
	TEAM_MEMBER_ATT_ARMOR,
	TEAM_MEMBER_ATT_CUFF,
	TEAM_MEMBER_ATT_BOOT,
	TEAM_MEMBER_ATT_SUIT,
	TEAM_MEMBER_ATT_GEM,
	TEAM_MEMBER_ATT_SOUL,
	TEAM_MEMBER_ATT_BUFF,
	TEAM_MEMBER_ATT_DEADLINK,
	TEAM_MEMBER_ATT_DEAD,
	TEAM_MEMBER_ATT_FACEMESH,
	TEAM_MEMBER_ATT_HAIRMESH,
	TEAM_MEMBER_ATT_HAIRCOLOR,
	TEAM_MEMBER_ATT_PORTRAIT,
	TEAM_MEMBER_ATT_EQUIPSET,
	TEAM_MEMBER_ATT_EQUIPLEVEL,
	TEAM_MEMBER_ATT_INHERENCELEVEL,
	TEAM_MEMBER_ATT_NUMBERS
};

enum eSHM_TYPE
{
	ST_INVAILD					= -1,
	ST_HUMAN_MK					= 1,
	ST_GUILD_MK					= 2,
	ST_MAIL_MK					= 3,
	ST_SCENEVAR_MK				= 4,
	ST_TOPLIST_MK				= 5,
	ST_HUMANEXT_MK				= 6,
	ST_ITEMSERIAL_MK			= 7,
	ST_COUNTRY_MK				= 8,
	ST_SHOP_MK					= 9,
	ST_BANK_SUM					= 10,
	ST_MASTER_CANDIDATE_SUM		= 11,
	ST_PRENTICE_CANDIDATE_SUM	= 12,
	ST_STOCK_SUM				= 13,
	ST_STOCK_ACC_SUM			= 14,
	ST_STOCK_RECORD_SUM			= 15,
	ST_DYNAMIC_SHOP_SUM			= 16,
};

enum eSHM_USE_STATUS
{
	SUS_NEVER_USE				= 0,
	SUS_SERVER_USED				= 1,
	SUS_SERVER_HAVE_CLEANED		= 2,
	SUS_WORLD_USED				= 3,
	SUS_WORLD_HAVE_CLEANED		= 4,
};

enum ePLAYER_DATA_RETURN
{
	UDR_NOTFINDUSERDATA			= 0,
	UDR_USERDATA,
	UDR_USERDATALIVING,
	UDR_USERSERVERCRASH,
	UDR_KEYERROR,
	UDR_USERDATA_RECONNECT,
};

enum eCOMBAT_EVENT
{
	EVENT_ON_DAMAGE				= 0,
	EVENT_ON_HIT_BY_SKILL,
	EVENT_ON_HIT_TARGET,
	EVENT_ON_BE_CRITICAL_HIT,
	EVENT_ON_CRITICAL_HIT_TARGET,
	EVENT_ON_HEAL_TARGET,
	EVENT_ON_BE_HEAL,
	EVENT_ON_DEAD,
	NUMBER_OF_EVENTS
};

enum ePK_VALUE_RANGE
{
	PK_VALUE_RANGE_1			= 1,
	PK_VALUE_RANGE_20			= 20,
	PK_VALUE_RANGE_40			= 40,
	PK_VALUE_RANGE_60			= 60,
	PK_VALUE_RANGE_80			= 80,
	PK_VALUE_RANGE_MAX			= 1000,
};

enum eTEAM_FOLLOW_RESULT_CODE
{
	TF_RESULT_REFUSE_FOLLOW			= 0,
	TF_RESULT_ENTER_FOLLOW,
	TF_RESULT_STOP_FOLLOW,
	TF_RESULT_FOLLOW_FLAG,
};

enum eTEAM_FOLLOW_ERROR_CODE
{
	TF_ERROR_TOO_FAR				= 0,
	TF_ERROR_IN_TEAM_FOLLOW,
	TF_ERROR_STALL_OPEN,
	TF_ERROR_NOT_IN_FOLLOW_MODE,
	TF_ERROR_INBUS,
};

enum eSERVERS_TYPE
{
	SERVER_GAME						= 0,
	SERVER_LOGIN					= 1,
	SERVER_SHAREMEN					= 2,
	SERVER_WORLD					= 3,
	SERVER_BILLING					= 4,
	SERVER_NUMBER,
};

enum eRELATIONSHIP_GROUP
{
	RELATION_GROUP_FRIEND_ALL		= 0,
	RELATION_GROUP_F1,
	RELATION_GROUP_F2,
	RELATION_GROUP_F3,
	RELATION_GROUP_F4,
	RELATION_GROUP_F5,
	RELATION_GROUP_BLACK,
	RELATION_GROUP_ENEMY,
	RELATION_GROUP_NUMBER,
	RELATION_GROUP_TEMPFRIEND,
	RELATION_GROUP_COUPLE,
	RELATION_GROUP_GUILD,
	RELATION_GROUP_MASTERANDPRENTICE,
};

enum eRELATIONSHIP_TYPE
{
	RELATION_TYPE_STRANGER			= 0,
	RELATION_TYPE_FRIEND			= 0x00000001,
	RELATION_TYPE_TEMP_FRIEND		= 0x00000010,
	RELATION_TYPE_MARRY				= 0x00000100,
	RELATION_TYPE_BLACKNAME			= 0x00001000,
	RELATION_TYPE_ENEMY				= 0x00010000,
	RELATION_TYPE_MASTER			= 0x00100000,
	RELATION_TYPE_PRENTICE			= 0x01000000,
	RELATION_TYPE_SAME_MASTER		= 0x10000000,
};

enum eSPELL_CLASS_BY_PLAYER_TYPE
{
	A_SKILL_FOR_PLAYER				= 0,
	A_SKILL_FOR_MONSTER				= 1,
	A_SKILL_FOR_PET					= 2,
	A_SKILL_FOR_ITEM				= 3,
};

enum eCONSTANT_VALUE 
{ 
	DEFAULT_ATTACK_FLUCTUATION		= 8, 
};

enum eCMD_TYPE
{
	COMMAND_TYPE_NONE				= 0,
	COMMAND_LEVEL_1,
	COMMAND_TYPE_MODIFYPROFESSION,
	COMMAND_TYPE_MODIFYTALENT,
	COMMAND_TYPE_LEVELUPALLTALENT,
	COMMAND_TYPE_CHAT,
	COMMAND_TYPE_ENABLEGOD,
	COMMAND_TYPE_DISABLEGOD,
	COMMAND_TYPE_DEBUG_RELOADCONFIG,
	COMMAND_TYPE_TEAM_INVITE,
	COMMAND_TYPE_TEAM_RETINVITE,
	COMMAND_TYPE_TEAM_LEADERRETINVITE,
	COMMAND_TYPE_TEAM_APPLY,
	COMMAND_TYPE_TEAM_RETAPPLY,
	COMMAND_TYPE_TEAM_LEAVE,
	COMMAND_TYPE_TEAM_KICK,
	COMMAND_TYPE_TEAM_DISMISS,
	COMMAND_TYPE_TEAM_APPOINT,
	COMMAND_TYPE_DEBUG_SHUTDOWN,
	COMMAND_TYPE_ABILITY_DETAIL,
	COMMAND_TYPE_USE_ABILITY,
	COMMAND_TYPE_COMBOUND_GEM,
	COMMAND_TYPE_USE_GEM,
	COMMAND_TYPE_CHANNEL_CREATE,
	COMMAND_TYPE_CHANNEL_INVITE,
	COMMAND_TYPE_CHANNEL_DISMISS,
	COMMAND_TYPE_CHANNEL_KICK,
	COMMAND_TYPE_CREATE_OBJ_HORSE,
	COMMAND_TYPE_CREATE_ITEM_HORSE,
	COMMAND_TYPE_HORSE_SET_HAPPINESS,
	COMMAND_TYPE_HORSE_SET_LEVEL,
	COMMAND_TYPE_HORSE_SET_EXP,
	COMMAND_TYPE_HORSE_SET_ZIZHI,
	COMMAND_TYPE_HORSE_SET_BASEATTR,
	COMMAND_TYPE_HORSE_SET_POINT,
	COMMAND_TYPE_HORSE_SET_QIANNENG,
	COMMAND_TYPE_HORSE_GET_GROWRATE,
	COMMAND_TYPE_HORSE_SET_SKILL,
	COMMAND_TYPE_CREATESCENE,
	COMMAND_TYPE_CLOSESCENE,
	COMMAND_TYPE_SET_SCENE_TYPE,
	COMMAND_TYPE_SET_PK_VALUE,
	COMMAND_TYPE_SET_HONOR,
	COMMAND_TYPE_SET_MODEL_ID,
	COMMAND_TYPE_SET_EQUIP_DUR,
	COMMAND_TYPE_SETDAMAGE,
	COMMAND_TYPE_SETAITYPE,
	COMMAND_TYPE_MODIFYMONEY,
	COMMAND_TYPE_SETGAMEOPEN,
	COMMAND_TYPE_CREATETITLE,
	COMMAND_TYPE_MAKETEAMFOLLOW,
	COMMAND_TYPE_SENDMAIL,
	COMMAND_TYPE_RECVMAIL,
	COMMAND_TYPE_CREATEGUILD,
	COMMAND_TYPE_JOINGUILD,
	COMMAND_TYPE_GUILDRECRUIT,
	COMMAND_TYPE_GUILDEXPEL,
	COMMAND_TYPE_LEAVEGUILD,
	COMMAND_TYPE_GUILDDISMISS,
	COMMAND_TYPE_ASKGUILDLIST,
	COMMAND_TYPE_SETMOVEMODE,
	COMMAND_TYPE_ASKRELATIONLIST,
	COMMAND_TYPE_ADDFRIEND,
	COMMAND_TYPE_SETFRIENDPOINT,
	COMMAND_TYPE_ADDBLACKNAME,
	COMMAND_TYPE_DELFRIEND,
	COMMAND_TYPE_DELBLACK,
	COMMAND_TYPE_TRANSITION,
	COMMAND_TYPE_SETCAMPID,
	COMMAND_TYPE_SAVE,
	COMMAND_TYPE_ABILITYUP,
	COMMAND_TYPE_KILLPLAYER,
	COMMAND_TYPE_RELIVEPLAYER,
	COMMAND_TYPE_ADDEXP,
	COMMAND_TYPE_LOADMONSTER,
	COMMAND_TYPE_SETHAIRCOLOR,
	COMMAND_TYPE_SETHAIRMODEL,
	COMMAND_TYPE_CREATEGUARD,
	COMMAND_TYPE_CREATETRAP,
	COMMAND_TYPE_USEITEM,
	COMMAND_TYPE_RECIPECOMMAND,
	COMMAND_TYPE_SEND_IMPACT_TO_UNIT,
	COMMAND_TYPE_RELOAD_COMBAT_TABLES,
	COMMAND_TYPE_USE_SKILL,
	COMMAND_TYPE_SAVEPACKETINFO,
	COMMAND_TYPE_SETVIGOR,
	COMMAND_TYPE_SETENERGY,
	COMMAND_TYPE_ADD_SKILL,
	COMMAND_TYPE_REMOVE_SKILL,
	COMMAND_TYPE_SETABILITYEXP,
	COMMAND_TYPE_SETGOODBAD,
	COMMAND_TYPE_SETCURDUR,
	COMMAND_TYPE_FORBIDCHAT,
	COMMAND_TYPE_ENJAIL,
	COMMAND_TYPE_COLLECT,
	COMMAND_TYPE_APPLYKING,
	COMMAND_TYPE_APPLY_COUNTRY_LEADER,
	COMMAND_TYPE_DONATE,
	COMMAND_TYPE_RELOADAITEMPLATE,
	COMMAND_TYPE_GETTHREATLIST,
	COMMAND_TYPE_SETGUILDEXP,
	COMMAND_TYPE_GETSCENEINFO,
	COMMAND_TYPE_SET_INHERENCE_EXP,
	COMMAND_TYPE_SET_INHERENCE_LEVEL,
	COMMAND_TYPE_CANCLEKING,
	COMMAND_TYPE_CANCLE_COUNTRY_LEADER, //撤销青龙，朱雀帮
	COMMAND_TYPE_START_GUILDBATTLE,
	COMMAND_TYPE_STOP_GUILDBATTLE,
	COMMAND_TYPE_PACKET_COUNT_ACTIVE,
	COMMAND_TYPE_SAVE_PACKET_LOG,
	COMMAND_TYPE_SETHOTVALUE,
	COMMAND_TYPE_RECOVER,
	COMMAND_TYPE_SHOPACTIVE,
	COMMAND_TYPE_SKILL_RELIVE,
	COMMAND_TYPE_GUILDLEVELUP,
	COMMAND_TYPE_MARRY,
	COMMAND_TYPE_DIVORCE,
	COMMAND_TYPE_NEIZHENGID,
	COMMAND_TYPE_CREATEEQUIPTOBODY,
	COMMAND_TYPE_ADD_COUNTRY_RESOURCE,
	COMMAND_TYPE_SET_COUNTRY_FREEPARAM,
	COMMAND_TYPE_ADD_COUNTRY_STRENGTH,
	COMMAND_TYPE_CREATEITEM,
	COMMAND_TYPE_TUNING,
	COMMAND_TYPE_RESTOREITEM,
	COMMAND_TYPE_RESTOREPET,
	COMMAND_TYPE_INCREQUIREPLAYERCOUNT,
	COMMAND_TYPE_SETTIREDTIME,
	COMMAND_TYPE_QUERYINCMONEY,
	COMMAND_TYPE_SETGuildFreeParam,
	COMMAND_TYPE_SET_WORLDSHOP_BUYCALL,
	COMMAND_TYPE_SET_MIN_BUY_BACK_PRICE,
	COMMAND_TYPE_SET_MAX_BUY_BACK_PRICE,
	COMMAND_TYPE_SET_MAX_BUY_BACK_COUNT,
	COMMAND_TYPE_SET_MIN_BUY_BACK_TIME,
	COMMAND_TYPE_SET_MAX_BUY_BACK_TIME,
	COMMAND_TYPE_WORLDCUP_ADDGUILD,
	COMMAND_TYPE_WORLDCUP_DELGUILD,
	COMMAND_TYPE_SETKINGBATTLE,
	COMMAND_TYPE_CLEARALLLAIRD,
	COMMAND_TYPE_APPLYLAIRD,
	COMMAND_LEVEL_2,
	COMMAND_TYPE_GETOBJINFO,
	COMMAND_TYPE_WHO,
	COMMAND_TYPE_ALLWHO,
	COMMAND_TYPE_CATCHPLAYER,
	COMMAND_TYPE_PLAYERINFO,
	COMMAND_TYPE_GOTOPLAYER,
	COMMAND_TYPE_RESETPLAYER,
	COMMAND_TYPE_KILLOBJ,
	COMMAND_TYPE_CREATEMONSTER,
	COMMAND_TYPE_DELETEMONSTER,
	COMMAND_TYPE_MAPPLAYER,
	COMMAND_TYPE_MODIFYNOTICE,
	COMMAND_TYPE_FINGERGUID,
	COMMAND_TYPE_FINGERNAME,
	COMMAND_TYPE_ADVANCEDFINGER,
	COMMAND_LEVEL_3,
	COMMAND_TYPE_TELEPORT,
	COMMAND_TYPE_RELIVE,
	COMMAND_TYPE_IAMGOD,
	COMMAND_TYPE_IAMDOG,
	COMMAND_TYPE_SYSCHAT,
	COMMAND_TYPE_GOTO,
	COMMAND_TYPE_FULLRECOVER,
	COMMAND_TYPE_LEVELUP,
	COMMAND_TYPE_LEVELDOWN,
	COMMAND_TYPE_FORBIDCHAT_GM,
	COMMAND_TYPE_SETCOUNTRY,
	COMMAND_TYPE_DISAPPEAR,
	COMMAND_TYPE_APPEAR,
	COMMAND_TYPE_GETIMPACTINFO,
	COMMAND_TYPE_SETJIN2YIN,
	COMMAND_TYPE_GOLDSTALL,
	COMMAND_TYPE_SETBATTLETOGGLE,
	COMMAND_TYPE_RELOADSCRIPT,
	COMMAND_TYPE_SETPVP2V2LEVEL,
	COMMAND_TYPE_ADDPVP2V2MARK,
	COMMAND_TYPE_SETKILLCOUNT,
	COMMAND_TYPE_CALL_SCRIPT_FUNCTION,
	COMMAND_TYPE_RECYCLESCRIPT,
	COMMAND_TYPE_ADDWALLOWONLINETIME,
	COMMAND_TYPE_SETEXPLOIT,				//功勋
	COMMAND_TYPE_ENABLE_KINGBATTLEPRISE,	//国王争霸赛奖励
	COMMAND_TYPE_SETGUILDSHIMING,			//设置帮会使命值
	COMMAND_TYPE_GUILD_LEVELDOWN,			//帮会降级
	COMMAND_TYPE_ADD_GUILD_MERIT,			//增加帮会功德值
	COMMAND_TYPE_ADD_GUILD_MONEY,			//增加帮会金钱
    COMMAND_TYPE_TOGGLE_WORLDCUP,           // 世界杯开关
	COMMAND_TYPE_WATCH_NET_FLUX,			//监视网络流量
	COMMAND_TYPE_PRINT_ATTR,				//查看属性
	COMMAND_TYPE_SET_TOPLISTVALUE,			//设置排行榜值
	COMMAND_TYPE_CMLOG,						//压缩LOG开关
	COMMAND_TYPE_NETDEBUG,					//网络调试开关
	COMMAND_TYPE_NUMBER,
};

enum GM_COMMAND_RIGHT
{
	GM_COMMAND_RIGHT_LEVEL1			= 1,
	GM_COMMAND_RIGHT_LEVEL2			= 2,
	GM_COMMAND_RIGHT_LEVEL3			= 3,
};

enum ePET_SPELL_INDEX
{
	PET_SKILL_INDEX_INVALID			= -1,
	PET_SKILL_INDEX_CONTROL_BY_PLAYER,
	PET_SKILL_INDEX_CONTROL_BY_AI0,
	PET_SKILL_INDEX_CONTROL_BY_AI1,
	PET_SKILL_INDEX_CONTROL_BY_AI2,
	PET_SKILL_INDEX_CONTROL_BY_AI3,
	PET_SKILL_INDEX_PROFESSION,
	PET_SKILL_INDEX_NUMBERS
};

enum PET_SKILL_OPERATEMODE
{
	PET_SKILL_OPERATE_INVALID		= -1,
	PET_SKILL_OPERATE_NEEDOWNER		= 0,
	PET_SKILL_OPERATE_AISTRATEGY	= 1,
	PET_SKILL_OPERATE_INCEACEATTR	= 2,
	PET_SKILL_OPERATE_NUMBERS,
};

enum eMAIL_TYPE
{
	MAIL_TYPE_NORMAL			= 0,
	MAIL_TYPE_NORMAL2			= 1,
	MAIL_TYPE_SCRIPT			= 2,
	MAIL_TYPE_SYSTEM			= 3,
};

enum 
{ 
	MAIL_ATTR_GUILD = 1, 
	MAIL_ATTR_MONEY,
	MAIL_ATTR_MONEY_STOCK_ACC,
};

enum REQUEST_TYPE 
{ 
	ASK_TYPE_LOGIN = 0, 
	ASK_TYPE_MAIL_USER, 
	ASK_TYPE_MAIL_SYSTEM, 
	ASK_TYPE_NUM, 
};

enum eGAME_SETTING_FLAG
{
	GSF_CANNOT_ADD_FRIEND			= 0,
	GSF_CANNOT_RECV_MAIL			= 1,
	GSF_CANNOT_RECV_STRANGER_MAIL	= 2,
	GSF_REFUSE_TEAM_INVITE			= 3,
	GSF_REFUSE_TRADE				= 4,
	GSF_CLOSE_FLICKER_TIP			= 5,
	GSF_CLOSE_POPUP					= 6,
	GSF_CLOSE_EQUIP_COMPARE			= 7,
	GSF_LOCKED_SHORTCUT				= 8,
	GSF_OPERATION_KEY_MOVE			= 9,
	GSF_SHOW_EXT_SHORTCUT			= 10,
	GSF_NEWPLAYER_TIP				= 11,
	GSF_HYPERLINK_SET				= 12,
    GSF_BOSSKEY                     = 13,       // 2010/12/02 10:01 Add by ql 老板键开关
	GSF_NUM,
};

enum OTHER_SETTING_FLAG
{
	SETTING_SHOWSUIT			= 0,
	SETTING_CHATNEAR,
	SETTING_CHATTEAM,
	SETTING_CHATGUILD,
	SETTING_CHATWORLD,
	SETTING_CHATJIAZU,
	SETTING_CHATCOUNTRY,
};

enum eSETTINGS_TYPE
{
	SETTING_TYPE_NONE			= 0,
	SETTING_TYPE_GAME,
	SETTING_TYPE_K0,
	SETTING_TYPE_K1,
	SETTING_TYPE_K2,
	SETTING_TYPE_K3,
	SETTING_TYPE_K4,
	SETTING_TYPE_K5,
	SETTING_TYPE_K6,
	SETTING_TYPE_K7,
	SETTING_TYPE_K8,
	SETTING_TYPE_K9,
	SETTING_TYPE_K10,
	SETTING_TYPE_K11,
	SETTING_TYPE_K12,
	SETTING_TYPE_K13,
	SETTING_TYPE_K14,
	SETTING_TYPE_K15,
	SETTING_TYPE_K16,
	SETTING_TYPE_K17,
	SETTING_TYPE_RK0,
	SETTING_TYPE_RK1,
	SETTING_TYPE_RK2,
	SETTING_TYPE_RK3,
	SETTING_TYPE_RK4,
	SETTING_TYPE_RK5,
	SETTING_TYPE_RK6,
	SETTING_TYPE_RK7,
	SETTING_TYPE_RK8,
	SETTING_TYPE_RK9,
	SETTING_TYPE_RK10,
	SETTING_TYPE_RK11,
	SETTING_TYPE_RK12,
	SETTING_TYPE_RK13,
	SETTING_TYPE_RK14,
	SETTING_TYPE_RK15,
	SETTING_TYPE_RK16,
	SETTING_TYPE_RK17,
	SETTING_TYPE_EK0,
	SETTING_TYPE_EK1,
	SETTING_TYPE_EK2,
	SETTING_TYPE_EK3,
	SETTING_TYPE_EK4,
	SETTING_TYPE_EK5,
	SETTING_TYPE_EK6,
	SETTING_TYPE_EK7,
	SETTING_TYPE_EK8,
	SETTING_TYPE_EK9,
	SETTING_TYPE_EK10,
	SETTING_TYPE_EK11,
	SETTING_TYPE_EK12,
	SETTING_TYPE_EK13,
	SETTING_TYPE_EK14,
	SETTING_TYPE_EK15,
	SETTING_TYPE_EK16,
	SETTING_TYPE_EK17,
	SETTING_TYPE_EK18,
	SETTING_TYPE_EK19,
	SETTING_TYPE_EK20,
	SETTING_TYPE_EK21,
	SETTING_TYPE_EK22,
	SETTING_TYPE_EK23,
	SETTING_TYPE_ERK0,
	SETTING_TYPE_ERK1,
	SETTING_TYPE_ERK2,
	SETTING_TYPE_ERK3,
	SETTING_TYPE_ERK4,
	SETTING_TYPE_ERK5,
	SETTING_TYPE_NUMBER,
};

enum eSEX 
{ 
	SEX_INVALID = -1, 
	SEX_FEMALE, 
	SEX_MALE, 
	SEX_NUMBERS 
};

enum eHUMAN_DIE_TYPE
{
	HUMAN_DIE_TYPE_INVALID			= -1,
	HUMAN_DIE_TYPE_INTERCHANGE,
	HUMAN_DIE_TYPE_MONSTER_KILL,
	HUMAN_DIE_TYPE_PLAYER_KILL,
	HUMAN_DIE_TYPE_NUMBERS
};

enum eQUEST_EVENT
{
	TASK_EVENT_KILLOBJ			= 0,
	TASK_EVENT_ENTERAREA		= 1,
	TASK_EVENT_ITEMCHANGED		= 2,
	TASK_EVENT_PETCHANGED		= 3,
};

enum eCMD_MODE
{
	CMD_MODE_CLEARALL			= 1,
	CMD_MODE_LOADDUMP			= 2,
	CMD_MODE_RECOVER			= 3,
};

enum GLTime
{
	WT_IND_1				= 0,
	WT_IND_2,
	WT_IND_3,
	WT_IND_4,
	WT_IND_5,
	WT_IND_6,
	WT_IND_7,
	WT_IND_8,
	WT_IND_9,
	WT_IND_10,
	WT_IND_11,
	WT_IND_12
};

enum eNPC_SHOP_TYPE
{
	SHOP_All				= 1,
	SHOP_DEFENCE			= 2,
	SHOP_ADORN				= 3,
	SHOP_WEAPON				= 4,
	SHOP_FOOD				= 5,
	SHOP_MATERIAL			= 6,
	SHOP_COMITEM			= 7,
};

typedef enum eSYSTEM_USE_SPELL_ID
{
	MELEE_ATTACK			= 0,
	CAPTURE_PET				= 1,
	CALL_UP_PET				= 2,
	SYSTEM_RESERVED_3		= 3,
	SYSTEM_RESERVED_4		= 4,
	SYSTEM_RESERVED_5		= 5,
	SYSTEM_RESERVED_6		= 6,
	SYSTEM_RESERVED_7		= 7,
	SHADOW_GUARD			= 8,
} SystemUseSkillID_T;

typedef enum eSYSTEM_USE_EFFECT_ID
{
	IMP_DAMAGES_OF_ATTACKS		= 0,
	IMP_DAMAGES_OF_RATE			= 61,
	IMP_NOTYPE_DAMAGE,
} SystemUseImpactID_T;


#define ACCEPTDISTANCEERROR_FOR_HUMAN	6 
#define ACCEPTDISTANCEERROR_FOR_NPC		1


enum eCURRENCY_UNIT
{
	CU_INVALID				= -1,
	CU_SILLER				= 0,
	CU_BINDSILLER,
	CU_GOLD,
	CU_BINDGOLD,
	CU_CREDIT,
	CU_HONOR,
	CU_GP,
	CU_COUNTRYCREDIT,
	CU_ITEM,
	CU_GOODBAD,
	CU_PVP2V2MARK,
	CU_GUILDMERIT,
    CU_FEASTSCOR,
	CU_GUILDACTIVITY,
	CU_BATTLEHONOUR,
};

enum SILLER_MODE 
{ 
	SILLER_CARD = 0, 
	SILLER_CASH, 
	SILLER_INVALID, 
};

enum GOLD_MODE 
{ 
	GOLD_CARD = 0, 
	GOLD_CASH, 
	GOLD_INVALID, 
};

enum MONEY_MODE
{
	MONEY_SILLERCARD			= 0,
	MONEY_GOLDCARD				= 0,
	MONEY_SILLERCASH			= 1,
	MONEY_GOLDCASH				= 32,
};

enum DEFAULT_CHAR_DATA
{
	CHAR_ENTERSCENCE			= 0,
	CHAR_BORNX,
	CHAR_BORNY,
	CHAR_CAMP,
	CHAR_INILEVEL,
	CHAR_INIEXP,
	CHAR_INIHP,
	CHAR_INIRAGE,
	CHAR_INISTR,
	CHAR_INICON,
	CHAR_INIINT,
	CHAR_INIDEX,
	CHAR_INISPELL1,
	CHAR_INISPELL2,
	CHAR_INISPELL3,
	CHAR_INISPELL4,
	CHAR_INISPELL5,
	CHAR_INISKILL1,
	CHAR_INISKILL2,
	CHAR_INISKILL3,
	CHAR_INISKILL4,
	CHAR_INISKILL5,
	CHAR_INIMONEY,
	CHAR_ININUM,
};

enum QUESTLIST_REFRESH_DATA 
{ 
	QUESTLIST_REFRESH_DATA_BEGIN = 0, 
	QUESTLIST_REFRESH_DATA_NUM = 256, 
};

enum QUESTLIST_REFRESH_PARAM 
{ 
	QUESTLIST_REFRESH_PARAM_BEGIN = 0, 
	QUESTLIST_REFRESH_PARAM_NUM = 160, 
};

enum QUESTLIST_REFRESH_HAVEDONE 
{ 
	QUESTLIST_REFRESH_HAVEDONE_BEGIN = 0, 
	QUESTLIST_REFRESH_HAVEDONE_NUM = MAX_CHAR_QUEST_FLAG_LEN, 
};

enum MENTAL_GAME_STATUS
{
	METAIL_GAME_INACTIVE			= -1,
	METAIL_GAME_STARTING,
	METAIL_GAME_STARTED,
	METAIL_GAME_THINK,
	METAIL_GAME_FINISH,
};

enum MENTAL_GAME_ITEM
{
	MENTAL_GAME_ITEM_INVALID = -1,
	MENTAL_GAME_ITEM_0,

	MENTAL_GAME_ITEM_COUNT,
};

enum MONSTER_TYPE 
{ 
	MT_MONSTER_GUARDER = 0, 
	MT_MONSTER, 
};

enum PARTY_MESSAGE_TYPE
{
	PARTY_MESSAGE_INVALID			= -1,
	PARTY_MENTAL_GAME_TYPE,
	GUILD_CONVOY_ASK_GUILDCONVOY_TYPE,
	GUILD_CONVOY_ASK_GUILDCONVOY_QUEST_TYPE,
	GUILD_ASK_COUNTRY_DESTROY_ISSUE_TYPE,
	GUILD_CONVOKE_TYPE,
	PVP2V2_BATTLE_TYPE,
	COUNTRY_BATTLE_LITE_TYPE,
	COUNTRY_BATTLE_LITE_KINGISSUE_TYPE,
	PVP6V6_BATTLE_TYPE,
	ZHUQUE_BATTLE_TYPE,
	QINGLONG_BATTLE_TYPE,
	LAIRD_BATTLE_TYPE,
	KING_ZHAOJI_TYPE,
	INFORM_LAIRD_INVITE_PLAYERAID_TYPE,
	MPVP2V2_BATTLE_TYPE,
	MPVP6V6_BATTLE_TYPE,
	PARTY_MESSAGE_TYPECOUNT,
};

enum GUILD_BATTLE_STATUS
{
	GUILD_BATTLE_INACTIVE			= -1,
	GUILD_BATTLE_READY,
	GUILD_BATTLE_SIGNUP,
	GUILD_BATTLE_SIGNUP_FINISH,
	GUILD_BATTLE_BATTLE,
	GUILD_BATTLE_BATTLE_FINISH,
};

enum ENUM_MOVE_MODE 
{ 
	MOVE_MODE_HOBBLE = 0, 
	MOVE_MODE_WALK, 
	MOVE_MODE_RUN, 
	MOVE_MODE_SPRINT, 
};

enum ePLAYER_ACTION_OPTYPE
{
	AOT_EMPTY = 0,
	AOT_SKILL,
	AOT_SKILL_LIFEABILITY,
	AOT_ITEM,
	AOT_PET_SKILL,
	AOT_EQUIP,
	AOT_CHATACT,
	AOT_CHATMOOD,
	AOT_MOUSECMD_REPARE,
	AOT_MOUSECMD_IDENTIFY,
	AOT_MOUSECMD_ADDFRIEND,
	AOT_MOUSECMD_CANCELFRIEND,
	AOT_CHANGE_SUIT,
	AOT_MOUSECMD_EXCHANGE,
	AOT_CHARIOT,
	AOT_MOUSECMD_MOODANIM,
	AOT_MOUSECMD_SPLIT,
	AOT_WORLD_SHOP_ITEM,
	AOT_MOUSECMD_LOCKITEM,
	AOT_MOUSECMD_UNLOCKITEM,
	AOT_AUTO_MOVE,
	AOT_GIFT,
	AOT_CHARIOT_SKILLLEARN,

	AOT_NUM,
};

enum RELEATION_MARRY
{
	MARRYRELEATION_NEW			= 0,
	MARRYRELEATION_ZHI,
	MARRYRELEATION_BU,
	MARRYRELEATION_PI,
	MARRYRELEATION_SI,
	MARRYRELEATION_MU,
	MARRYRELEATION_TIE,
	MARRYRELEATION_TONG,
	MARRYRELEATION_DIAN,
	MARRYRELEATION_TAO,
	MARRYRELEATION_XI,
	MARRYRELEATION_GANG,
	MARRYRELEATION_YAMA,
	MARRYRELEATION_HUABIAN,
	MARRYRELEATION_XIANGYA,
	MARRYRELEATION_SHUIJING,
	MARRYRELEATION_CI,
	MARRYRELEATION_YIN,
	MARRYRELEATION_ZHENZHU,
	MARRYRELEATION_YU,
	MARRYRELEATION_REDGEW,
	MARRYRELEATION_BLUEGEW,
	MARRYRELEATION_GOLD,
	MARRYRELEATION_ZHUAN,
	MARRYRELEATION_NUMS,
};

enum RELEATION_FRIEND
{
	FRIENDRELEATION_PINGSHUI		= 0,
	FRIENDRELEATION_ZHITONG,
	FRIENDRELEATION_XIANGZHI,
	FRIENDRELEATION_GANDAN,
	FRIENDRELEATION_JINLAN,
	FRIENDRELEATION_SHOUZU,
	FRIENDRELEATION_DAOHUO,
	FRIENDRELEATION_MONI,
	FRIENDRELEATION_HUANNAN,
	FRIENDRELEATION_WENJING,
	FRIENDRELEATION_NUMS,
};

enum ITEMPARAM_TYPE 
{ 
	ITEMPARAM_NONE = 0, 
	ITEMPARAM_CONTAINER, 
	ITEMPARAM_TIME, 
	ITEMPARAM_NUM, 
};

enum eWorldManagerObjListIDType
{
	eWorldMgrObjListID_EnemyListObj		= 0,
	eWorldMgrObjListID_QuestNPCObj,
	eWorldMgrObjListID_QuestNoCompleteNpcObj,
	eWorldMgrObjListID_QuestCompleteNpcObj,
	eWorldMgrObjListID_ExpNpcListObj,
	eWorldMgrObjListID_FriendListObj,
	eWorldMgrObjListID_PKKillListObj,
	eWorldMgrObjListID_FamilyListObj,
	eWorldMgrObjListID_GuildListObj,
	eWorldMgrObjListID_SubjectListObj,
	eWorldMgrObjListID_NonSubjectListObj,
	eWorldMgrObjListID_StartingPointListObj,
	eWorldMgrObjListID_ActiveListObj,
	eWorldMgrObjListID_FlickerListObj,
	eWorldMgrObjListID_PetListObj,
	eWorldMgrObjListID_BusListObj,
	eWorldMgrObjListID_BattlefieldListObj,
	eWorldMgrObjListID_CircleQuestNPCObj,
	eWorldMgrObjListID_TransQuestNPCObj,

	eWorldMgrObjListID_MaxNums,
};

enum WORDMANAGER_EXTOBJ_INDEX 
{ 
	WORDMANAGER_BUSOBJ_INDEX = 11, 
	WORDMANAGER_FINGHTSCENE_OBJ_INDEX = 21 
};

enum WORDMANAGER_FINGHTSCENE_OBJ_TYPE
{
	WORDMANAGER_FINGHTSCENE_OBJ_TYPE_NONE	= 0,
	WORDMANAGER_FINGHTSCENE_OBJ_TYPE_FIRST,
	WORDMANAGER_FINGHTSCENE_OBJ_TYPE_SECOND
};

enum AWARD_TYPE 
{ 
	AWARD_TYPE_NORMAL = 0,				//普通礼包
	AWARD_TYPE_CD_KEY_CARD,				//需要CD_KEY才能兑换
};

enum GOLD_SPEND_TYPE
{ 
	GOLD_SPEND_TYPE_SHOP_BUY = 0, 
	GOLD_SPEND_TYPE_LOSS_RELIVE, 
	GOLD_SPEND_TYPE_DAMAGE_RELIVE, 
};

enum CHECK_SUPER_PW_TYPE 
{ 
	CHECK_SUPER_PW_TYPE_DEL_CHAR = 0, 
	CHECK_SUPER_PW_TYPE_CLEAR_PW, 
};

enum CHANGE_NAME_TYPE 
{ 
	CHANGE_CHAR_NAME = 0,
	CHANGE_GUILD_NAME, 
};

enum CHANGE_SCENE_REASON
{
	CS_GM_COMMAND_GOTO,
	CS_GM_COMMAND_TELEPORT,
	CS_ACCEPT_CALLOF,
	CS_IMPACT_009,
	CS_WEDDING_POS_FROM_OTHER,
	CS_TEAMMEMBER_CALL_UP,
	CS_TELPORT_POS,
	CS_TRANSITEM_USE,					//使用传送符 
};

enum LOGIN_ENCRYPT_MODE 
{ 
	LOGIN_ENCRYPT_MODE_BASE, 
	LOGIN_ENCRYPT_MODE_RAND, 
	LOGIN_ENCRYPT_MODE_TIME, 
	LOGIN_ENCRYPT_MODE_IP, 
};

enum eCheatActType
{
	eCheatAct_Unknow			= 0,	/* 未知操作 */
	eCheatAct_LoginACC,					/* 登陆时账号验证码错误 */
	eCheatAct_CharMoveAuthen,			/* 角色移动时验证码错误 */
	eCheatAct_TargetLockAuthen,			/* 锁定目标时验证码错误 */
	eCheatAct_HearbeatAuthen,			/* 心跳时的验证码错误 */
	eCheatAct_MaxClient,				/* 客户端超过允许的多开数量 */
	eCheatAct_Debugging,				/* 客户端被调试 */
	eCheatAct_OfflinePlugin,			/* 脱机外挂 */
	eCheatAct_EncryptError,				/* 加密错误(结果与Encrypt.tab不符) */
	eCheatAct_EncryptTimeout,			/* 加密超时 */
	eCheatAct_LoginAnswerError,			/* 登陆时答题错误 */
	eCheatAct_VariableMsgId,			/* 动态消息ID */
	eCheatAct_MessageCount,				/* 玩家消息计数 */
	eCheatAct_Punch,					/* 客户端打卡 */
	eCheatAct_NUM,
};


enum ePLAYER_STATUS_DEFINE
{
	PS_SERVER_EMPTY				= 100,
	PS_SERVER_CONNECT,
	PS_SERVER_WAITING_FORMAP_DATA,
	PS_SERVER_WAITING_FORMAP_DATA_INCOMING,
	PS_SERVER_WAITING_FOR_ENTER,
	PS_SERVER_READY_TO_ENTER,
	PS_SERVER_WAITTING_FOR_ENVREQUEST,
	PS_SERVER_NORMAL,
	PS_SERVER_WAITING_FOR_CHANGESCENE,
	PS_SERVER_WAITING_FOR_CHANGESCENE_SCENE,
	PS_SERVER_ANOTHER_GUID_ENTER,
	PS_SERVER_ENTER_RECYCLE,
	PS_SERVER_LEAVE_RECYCLE,
	PS_CLIENT_LOAD				= 200,
	PS_CLIENT_CONNECT,
	PS_LOGIN_EMPTY				= 300,
	PS_LOGIN_CONNECT,
	PS_LOGIN_WAIT_AUTH,
	PS_LOGIN_AUTHED,
	PS_LOGIN_WAIT_PROCESS_TURN,
	PS_LOGIN_PROCESS_TURN,
	PS_LOGIN_NORMAL,
	PS_LOGIN_SERVER_READY,
	PS_BILLING_CONNECT			= 400,
	PS_WORLD_CONNECT			= 500,
	PS_WORLD_NORMAL,
};


//战场类型枚举
enum BattleSceneType
{
	BATTLE_SCENETYPE_NONE					= 0,
	BATTLE_SCENETYPE_GUILDBATTLE			= 1,
	BATTLE_SCENETYPE_KINGBATTLE				= 2,
	BATTLE_SCENETYPE_GUILDCONTEND			= 3,
	BATTLE_SCENETYPE_COUNTRYBATTLELITE		= 6,
	BATTLE_SCENETYPE_PVP_2VS2				= 7,
	BATTLE_SCENETYPE_PVP_6VS6				= 8,
	BATTLE_SCENETYPE_ZHUQUE					= 9,
	BATTLE_SCENETYPE_QINGLONG				= 10,
	BATTLE_SCENETYPE_LAIRD					= 11,
};


//传场景状态
enum CHANGE_SCENE_STATE 
{
	CST_NO_CHANGE, 
	CST_OBJ_PROTECTED, 
	CST_SCENE_CHANGEING, 
};

//脚本操作码
enum SCRIPT_OPCODE
{
	MAIL_REPUDIATE							= 1,
	MAIL_BETRAYMASTER						= 2,
	MAIL_EXPELPRENTICE						= 3,
	MAIL_UPDATE_ATTR						= 4,
	MAIL_UNSWEAR							= 5,
	MAIL_PRENTICE_EXP						= 6,
	MAIL_LEAVE_GUILD						= 7,
	MAIL_GIVE_MONEY							= 8,
	MAIL_GIVE_ITEM							= 9,
};

//玩家运行期数据
enum HUMAN_RUNTIME_DATA
{
	RT_MENTALGAME_INDEX_OFFSET				= 0,
	RT_EVENT_REQUEST_NPCID					= 36,
	RT_EVENT_REQUEST_QUEST_SCRIPT_ID		= 37,
	RT_QUEST_DENGMI_NPC_FLAG				= 39,
	RT_QUEST_DENGMI_CUR_DENGMI				= 40,
};

//官职
enum COUNTRY_SPECIAL_GUILD_DATA
{
	COUNTRY_GUILD_INVAILD					= -2,  //非国家帮
	COUNTRY_GUILD_KING						= -1,  //国王帮
	COUNTRY_GUILD_QINGLONG					= 0,   //青龙帮
	COUNTRY_GUILD_ZHUQUE					= 1,   //朱雀帮
	COUNTRY_GUILD_COUNT						= 2 , 
};


//玩法ID
enum GAME_ID_INFO 
{ 
	GAME_ID_XINBING_SUCHENG					= 1023, // 新兵速成
    GAME_ID_DELATE_KING                     = 1031, // 弹劾国王
    GAME_ID_WEAK_COUNTRY                    = 1021, // 弱国任务
    GAME_ID_COUNTRYBATTLELITE               = 1026, // 屠城战
};
//玩法开放等级
enum GAME_OPEN_LEVEL
{
    GAME_OPEN_NEWPRIVATE                    = 65,   // 新兵速成玩法开放等级，就是全服出现第一个达到此等级的玩家后开放此玩法（Todo：33893）
    GAME_OPEN_DELATE_KING                   = 70,   // 弹劾国王玩法开放等级，就是全服出现第一个达到此等级的玩家后开放此玩法（Todo：33895）
    GAME_OPEN_WORLDCUP                      = 70,   // 帮会世界杯玩法开放等级，就是全服出现第一个达到此等级的玩家后开放此玩法（Todo：33897）
    GAME_OPEN_COUNTRYBATTLE                 = 70,   // 屠城战玩法开放等级，就是全服出现第一个达到此等级的玩家后开放此玩法（Todo：33895）
    GAME_OPEN_WEAKCOUNTRY                   = 70,   // 弱国任务玩法开放等级，就是全服出现第一个达到此等级的玩家后开放此玩法（Todo：34416）
};


enum SHOP_ACTIVE_TYPE 
{ 
	SHOP_ACTIVE_GUILD						= 0, 
};

enum 
{ 
	QUESTTIME_LIST_SIZE						= MAX_CHAR_QUEST_NUM, 
};




enum eUSE_ITEM_RESULT
{
	USEITEM_SUCCESS							= 0,
	USEITEM_CANNT_USE						= 1,
	USEITEM_LEVEL_FAIL						= 2,
	USEITEM_TYPE_FAIL						= 3,
	USEITEM_TARGET_TYPE_FAIL				= 4,
	USEITEM_SKILL_FAIL						= 5,
	USEITEM_IDENT_TYPE_FAIL					= 6,
	USEITEM_IDENT_TARGET_TYPE_FAIL			= 7,
	USEITEM_IDENT_LEVEL_FAIL				= 8,
	USEITEM_NONEED_FAIL						= 9,
	USEITEM_INVALID
};

enum eREMOVE_GEM_RESULT
{
	REMOVEGEM_SUCCESS,
	REMOVEGEM_NO_ITEM,
	REMOVEGEM_ERROR_GEMINDEX,
	REMOVEGEM_NO_GEM,
	REMOVEGEM_INVALID_EQUIP,
	REMOVEGEM_TOO_LARGE_GEMINDEX,
	REMOVEGEM_UNKNOW_ERROR,
	REMOVEGEM_BAG_FULL
};

enum EQUIPSUIT_RESULT 
{ 
	EQUIPSUIT_SUCCESS = 1, 
	EQUIPSUIT_JOB_FAIL, 
	EQUIPSUIT_LEVEL, 
	EQUIPSUIT_EQUIP_FAIL, 
};

enum EQUIPSPECIALREPAIR_RESULT
{
	EQUIPSPECIALREPAIR_SUCCESS		= 1,
	EQUIPSPECIALREPAIR_NOREAPIR,
	EQUIPSPECIALREPAIR_ITEM,
	EQUIPSPECIALREPAIR_BAG_INVALID,
	EQUIPSPECIALREPAIR_FAIL,
};

enum SWITCHITEM_RESULT
{
	SWITCHITEM_SUCCESS			= 0,
	SWITCHITEM_EXTRBAG_EXCHANGE_FAIL,
	SWITCHITEM_SOURCEEXTRBAG_NOALIVE,
	SWITCHITEM_SOURCEEXTRBAG_ITEM_FAIL,
	SWITCHITEM_DESTEXTRBAG_TIME_FAIL,
	SWITCHITEM_DESTCEEXTRBAG_NOALIVE,
	SWITCHITEM_EXTRBAG_FULL,
	SWITCHITEM_BAG_FULL,
	SWITCHITEM_FAIL,
	SWITCHITEM_SOURCEEXTRBAG_DESTITEM_FAIL,
};

enum SUBTRAIN_RESULT
{
	SUBTRAIN_MODEERROR_OPEN_BEGINFAIL	= 1,
	SUBTRAIN_MODEERROR_CLOSE_TIMEFAIL,
	SUBTRAIN_MODEERROR_CLOSE_STOPFAI,
	SUBTRAIN_MODEERROR_OPEN_GETEXPFAIL,
	SUBTRAIN_MODEERROR_OPEN_CLEANFAIL,
	SUBTRAIN_MODEERROR_MONEY_GETEXPFAIL,
	SUBTRAIN_MODEERROR_OPEN_ASKMODEFAIL,
};

enum eUSE_EQUIP_RESULTCODE
{
	USEEQUIP_SUCCESS			= 1,
	USEEQUIP_LEVEL_FAIL,
	USEEQUIP_TYPE_FAIL,
	USEEQUIP_IDENT_FAIL,
	USEEQUIP_JOB_FAIL,
	USEEQUIP_BAGINDEX_FAIL,
	USEEQUIP_CURDUR_ZERO,
	USEEQUIP_TERM_OVER_TIME,
};

enum UseExtraBagResultCode
{
	USEEXTRABAG_SUCCESS			= 1,
	USEEXTRABAG_TYPE_FAIL,
	USEEXTRABAG_SOURCE_TIMEFAIL,
	USEEXTRABAG_DEST_TIMEFAIL,
	USEEXTRABAG_TIMEFAIL,
};

enum UnExtraBagResultCode 
{ 
	UNEXTRABAG_SUCCESS = 1, 
	UNEXTRABAG_BAG_FULL, 
	UNEXTRABAG_HAS_ITEM, 
};

enum eLEVELUP_RESULT_CODE 
{ 
	LEVELUP_SUCCESS, 
	LEVELUP_NO_EXP, 
	LEVELUP_DEAD,
	LEVELUP_MAXLEVEL, 
};

enum PROPERTY_RESUlT 
{ 
	ATTR_RESUlT_SUCCESS, 
	ATTR_RESULT_NOT_ENOUGH_REMAIN_POINT, 
	ATTR_RESULT_NO_SUCH_ATTR, 
	ATTR_RESUlT_NO_POINT,
};

enum ePICK_RESULT_CODE 
{ 
	PICK_SUCCESS, 
	PICK_BAG_FULL, 
	PICK_INVALID_OWNER, 
	PICK_INVALID_ITEM, 
	PICK_TOO_FAR, 
	PICK_DEAD, 
	PICK_CLOSED_BOX, 
	PICK_LEVEL_LIMIT 
};

enum eRATTR_RESULT_CODE 
{ 
	RATTR_SUCCESS, 
	RATTR_NO_POINT, 
	RATTR_NO_LEVEL 
};

enum eUNEQUIP_RESULTCODE
{
	UNEQUIP_SUCCESS				= 1,
	UNEQUIP_BAG_FULL,
	UNEQUIP_BAGPOS_INVALID,
	UNEQUIP_BAG_INVALIDTIME,
	UNEQUIP_HAS_ITEM,
};

enum eDISCARD_ITEM_RESULT 
{ 
	DISCARDITEM_SUCCESS, 
	DISCARDITEM_FAIL 
};

enum eLOGIN_CONNECT_RESULT_CODE 
{ 
	LOGINCR_SUCCESS, 
	LOGINCR_FULL, 
	LOGINCR_STOP_SERVICE,
};

enum eLOGIN_RESULT_CODE
{
	LOGINR_SUCCESS,
	LOGINR_AUTH_FAIL,
	LOGINR_VERSION_FAIL,
	LOGINR_STOP_SERVICE,
	LOGINR_OTHER_ONLINE,
	LOGINR_ACCOUNT_LOCK,
	LOGINR_PHONE_LOCK,
	LOGINR_PW_CARD_SUCCESS,
	LOGINR_PW_CARD_FAIL,
	LOGINR_ACCOUNT_LOCK_FOR_PWC_LIMIT,
	LOGINR_LAWLESS_ACCOUNT,
	LOGIN_ACCOUNT_DISABLE,
	LOGINR_ACCOUNT_KICK_BYSELF = 12,		//账号异常离线状态，请20秒后重试
	LOGINR_ACCOUNT_KICK_BYOTHERS = 13,		//账号异常离线状态，请20秒后重试
	LOGINR_IP_ACCOUNT_LIMIT = 14,			//单IP每天成功登陆账号数达到阀值(1000)
	LOGINR_ACCOUNT_LOGINCOUNT_LIMIT = 15,	//单账号每天成功登陆次数达到阀值(100)
	LOGINR_NONAGE_FAIL,						//防尘迷失败
	LOGINR_ACCOUNT_LOCK_PASSPOD_LIMIT,	// 因为动态密保输入错误次数过多， 相关账户被暂时封停
};

// 消息返回结果 
enum PASSPOD_RESULT
{
	PASSPOD_SUCCESS				= 0, //验证成功
	PASSPOD_USED				= 1, //这个动态密码已经使用过
	PASSPOD_FAILED				= 2, //验证失败
	PASSPOD_TOKEN_EXPIRED		= 3, //令牌已经过期了
	PASSPOD_TOKEN_DISABLED		= 4, //令牌已经禁用了
	PASSPOD_TOKEN_SYNC_REQUIRED = 5, //令牌需要校准了
	PASSPOD_NOT_FOUND			= 6, //没找到这个用户，或没找到这个绑定关系
	PASSPOD_ERROR				= 7, //服务器内部错误
	PASSPOD_CHECKTIMES_LIMIT	= 8, //验证错误次数太多
};

enum LOGIN_CHARSTATERESULT 
{ 
	LOGINCSR_SUCCESS, 
};

enum ASKCHANGENAME_RESULT
{
	ASKCHANGENAME_NULL			= 0,
	ASKCHANGENAME_CHANGE_CHAR_NAME_SUCCESS,
	ASKCHANGENAME_CHANGE_GUILD_NAME_SUCCESS,
	ASKCHANGENAME_CHANGE_CHAR_NAME_FAIL,
	ASKCHANGENAME_CHANGE_GUILD_NAME_FAIL,
	ASKCHANGENAME_SERVER_BUSY,
	ASKCHANGENAME_MAX
};

enum REQUEST_PLAYERLIST_RESULT 
{ 
	ASKCHARLIST_SUCCESS, 
	ASKCHARLIST_OP_FAILS,
	ASKCHARLIST_SERVER_BUSY, 
	ASKCHARLIST_OP_TIMES, 
};

enum REQUEST_CREATEPLAYER_RESULT
{
	ASKCREATECHAR_SUCCESS,
	ASKCREATECHAR_SERVER_BUSY,
	ASKCREATECHAR_OP_TIMES,
	ASKCREATECHAR_FULL,
	ASKCREATECHAR_SAME_NAME,
	ASKCREATECHAR_OP_ERROR,
	ASKCREATECHAR_INTERNAL_ERROR,
	ASKCREATECHAR_NOTALLOW_MERGEDB,
	ASKCREATECHAR_NOTALLOW_UPDATEDB,
	ASKCREATECHAR_NOTALLOW_SERVER_PREVENT,
};

enum REQUEST_DELETEPLAYER_RESULT
{
	ASKDELETECHAR_SUCCESS,
	ASKDELETECHAR_SERVER_BUSY,
	ASKDELETECHAR_OP_TIMES,
	ASKDELETECHARR_EMPTY,
	ASKDELETECHAR_OP_ERROR,
	ASKDELETECHAR_NOT_OWNER,
	ASKDELETECHAR_ONLINE,
	ASKDELETECHAR_SAVING,
	ASKDELETECHAR_INTERNAL_ERROR,
	ASKDELETECHAR_USERONLINE,
	ASKDELETECHAR_LEVEL_FLOW,
	ASKDELETECHAR_BUSY,
};

enum REQUEST_PLAYERLOGIN_RESULT
{
	ASKCHARLOGIN_SUCCESS,
	ASKCHARLIST_WORLD_FULL,
	ASKCHARLOGIN_SERVER_BUSY,
	ASKCHARLOGIN_LOADDB_ERROR,
	ASKCHARLOGIN_OP_TIMES,
	ASKCHARLOGIN_NOT_OWNER,
	ASKCHARLOGIN_SERVER_STOP,
	ASKCHARLOGIN_INVALID_SCENE,
	ASKCHARLOGIN_CHARLIVING,
	ASKCHARLOGIN_KICKED,
	ASKCHARLOGIN_SERVER_STOPEX, //rj 2010-8-31 增加新的服务停用通知类型
};

enum eCLIENT_TURN_STATUS 
{ 
	CTS_TURN, 
	CTS_NORMAL, 
};

enum ASKCHARDATA_RESULT 
{ 
	ASKCHARDATA_SUCCESS, 
	ASKCHARDATA_STILL_ALIVE, 
	ASKCHARDATA_SERVER_BUSY, 
	ASKCHARDATA_LOADDB_ERROR, 
};

enum CHANGE_MONEY_RESULT
{
	CHANGE_MONEY_SUCCESS		= 0,
	CHANGE_MONEY_LOW,
	CHANGE_MONEY_LOCK,
	CHANGE_MONEY_FAIL,
	CHANGE_MONEY_NULL			= 50,
	CHANGE_MONEY_MAX,
	CHANGE_MONEY_FULL,
	CHANGE_MONEY_MIN,
};

enum AWARD_RESULT 
{ 
	AWARD_RESULT_FAIL = 0, 
	AWARD_RESULT_SUCCESS, 
	AWARD_RESULT_LOCK, 
};

enum SUPER_PW_RESULT 
{ 
	SUPER_PW_FAIL = 0, 
	SUPER_PW_SUCCESS, 
};

enum EQUIP_WANFA_RESULT
{
	EQUIP_WANFA_SUCC			= 1,
	EQUIP_WANFA_FAIL,
	EQUIP_WANFA_ITEM_ISLOCK,
	EQUIP_WANFA_NEEDITEM_NOTENOUGH,
	EQUIP_WANFA_OTHERITEM_NOTENOUGH,
	EQUIP_WANFA_NOT_GEM,
	EQUIP_WANFA_MONEY_NOT_ENOUGH,
	EQUIP_WANFA_OUT_OF_SPACE,
	EQUIP_WANFA_TYPE_INV,
	EQUIP_WANFA_NO_GUILD,
	EQUIP_WANFA_PROTECTED,
	EQUIP_WANFA_FAIL_NORMAL,   //有概率的失败

	//打孔相关
	EQUIP_WANFA_ADDHOLE_SUCCESS,
	EQUIP_WANFA_ADDHOLE_EQUIP_FAIL,
	EQUIP_WANFA_ADDHOLE_ITEM_FAIL,
	EQUIP_WANFA_ADDHOLE_FULL_FAIL,
	EQUIP_WANFA_ADDHOLE_MONEY_FAIL,
	EQUIP_WANFA_ADDHOLE_FAIL,

	//镶嵌
	EQUIP_WANFA_USEGEM_SUCCESS,
	EQUIP_WANFA_USEGEM_EQUIP_FAIL,
	EQUIP_WANFA_USEGEM_CANNT_USE,
	EQUIP_WANFA_USEGEM_GEMREQ_FAIL,
	EQUIP_WANFA_USEGEM_GEM_FAIL,
	EQUIP_WANFA_USEGEM_MONEY_FAIL,
	EQUIP_WANFA_USEGEM_FAIL,

	//打星
	EQUIP_WANFA_LEVEUP_SUCCESS	,
	EQUIP_WANFA_LEVEUP_EQUIP_FAIL,
	EQUIP_WANFA_LEVEUP_COMMONEQUIP,
	EQUIP_WANFA_LEVEUP_FAIL_SUCCESS,
	EQUIP_WANFA_LEVEUP_ITEMTYPE_FAIL,
	EQUIP_WANFA_LEVEUP_ITEMNUM_FAIL,
	EQUIP_WANFA_LEVEUP_FULL_FAIL,
	EQUIP_WANFA_LEVEUP_MONEY_FAIL,
	EQUIP_WANFA_LEVEUP_BAG_INVALID,
	EQUIP_WANFA_LEVEUP_HUMANLEVEL_FAIL,
	EQUIP_WANFA_LEVEUP_FAIL,

	//绑定、铭刻
	EQUIP_WANFA_BIND_SUCCESS,
	EQUIP_WANFA_BIND_EQUIP_FAIL,
	EQUIP_WANFA_BIND_ITEM_FAIL,
	EQUIP_WANFA_BIND_FULL_FAIL,
	EQUIP_WANFA_BIND_MONEY_FAIL,
	EQUIP_WANFA_BIND_FAIL,

	//麻将铭刻（装备增加麻将）
	EQUIP_WANFA_CHANGEPAITTYPE_SUCCESS,
	EQUIP_WANFA_CHANGEPAITTYPE_EQUIP_FAIL,
	EQUIP_WANFA_CHANGEPAITTYPE_ITEM_FAIL,
	EQUIP_WANFA_CHANGEPAITTYPE_MONEY_FAIL,
	EQUIP_WANFA_CHANGEPAITTYPE_FAIL,

	//装备换牌
	EQUIP_WANFA_EXCHANGEPAITTYPE_SUCCESS,
	EQUIP_WANFA_EXCHANGEPAITTYPE_EQUIP_FAIL,
	EQUIP_WANFA_EXCHANGEPAITTYPE_EQUIPPAI_FAIL,
	EQUIP_WANFA_EXCHANGEPAITTYPE_EQUIPBIND_FAIL,
	EQUIP_WANFA_EXCHANGEPAITTYPE_ITEM_FAIL,
	EQUIP_WANFA_EXCHANGEPAITTYPE_BAG_INVALID,
	EQUIP_WANFA_EXCHANGEPAITTYPE_MONEY_FAIL,
	EQUIP_WANFA_EXCHANGEPAITTYPE_FAIL,

	//装备改造
	EQUIP_WANFA_REMOULD_SUCCESS,
	EQUIP_WANFA_REMOULD_EQUIP_FAIL,
	EQUIP_WANFA_REMOULD_TYPE_FAIL,
	EQUIP_WANFA_REMOULD_MAX_FAIL,
	EQUIP_WANFA_REMOULD_MATERIAL_FAIL,
	EQUIP_WANFA_REMOULD_MATERIAL_LEVEL,
	EQUIP_WANFA_REMOULD_MATERIAL_COUNT,
	EQUIP_WANFA_REMOULD_MONEY_FAIL,
	EQUIP_WANFA_REMOULD_FAIL,

	//装备分解
	EQUIP_WANFA_DECOMPOUND_SUCCESS,
	EQUIP_WANFA_DECOMPOUND_EQUIP_FAIL,
	EQUIP_WANFA_DECOMPOUND_BAG_FAIL,
	EQUIP_WANFA_DECOMPOUND_TYPE_FAIL,
	EQUIP_WANFA_DECOMPOUND_FAIL,

	//装备打造
	EQUIP_WANFA_CREATE_SUCCESS,
	EQUIP_WANFA_CREATE_ITEM_FAIL,
	EQUIP_WANFA_CREATE_MATERIAL_FAIL,
	EQUIP_WANFA_CREATE_MATERIAL_LEVEL,
	EQUIP_WANFA_CREATE_MATERIAL_COUNT,
	EQUIP_WANFA_CREATE_BAG_FULL,
	EQUIP_WANFA_CREATE_MONEY_FAIL,
	EQUIP_WANFA_CREATE_FAIL,

	//装备转化
	EQUIP_WANFA_SWITCH_SUCCESS,
	EQUIP_WANFA_SWITCH_ITEM_FAIL,
	EQUIP_WANFA_SWITCH_MATERIAL_FAIL,
	EQUIP_WANFA_SWITCH_LEVEL_FAIL,
	EQUIP_WANFA_SWITCH_MONEY_FAIL,
	EQUIP_WANFA_SWITCH_FAIL,

	//更换形象
	CHANGE_APPEARACE_SUCCESS,
	CHANGE_APPEARACE_ITEM_FAILED,
	CHANGE_APPEARACE_FAILED,

	// 多彩宝石回收
	EQUIP_WANFA_ITEMRECALL_SUCC,
	EQUIP_WANFA_ITEMRECALL_FAIL,
	EQUIP_WANFA_ITEMRECALL_ISLOCK,
	EQUIP_WANFA_ITEMRECALL_PROTECTED,
	EQUIP_WANFA_ITEMRECALL_NO_GUILD,

	//护身符补色
	EQUIP_WANFA_BLUESYN_SUCC,
	EQUIP_WANFA_BLUESYN_FAIL,
	EQUIP_WANFA_BLUESYN_MATERIAL_FAIL,
	EQUIP_WANFA_BLUESYN_ITEMTYPE_FAIL,
	EQUIP_WANFA_BLUESYN_MEDICLEVEL_FAIL,
	EQUIP_WANFA_BLUESYN_EQUIPPOINT_FAIL,
	EQUIP_WANFA_BLUESYN_ATTRTYPE_FAIL,
	EQUIP_WANFA_BLUESYN_ATTRVALUE_FAIL,
	EQUIP_WANFA_BLUESYN_SUBBALL_DEL_FAIL,
	EQUIP_WANFA_BLUESYN_MATERIAL_DEL_FAIL,

	//橙装蓝属性打造
	EQUIP_WANFA_NEW_EQUIP_PRODUCE_SUCC,
	EQUIP_WANFA_NEW_EQUIP_PRODUCE_FAIL,
	EQUIP_WANFA_NEW_EQUIP_PRODUCE_EQUIP_FAIL,
	EQUIP_WANFA_NEW_EQUIP_PRODUCE_ATLAS_FAIL,
	EQUIP_WANFA_NEW_EQUIP_PRODUCE_ADDITIVE_FAIL,
	EQUIP_WANFA_NEW_EQUIP_PRODUCE_EQUIP_COLOR_FAIL,

	//星座铭刻
	EQUIP_WANFA_CONST_BIND_SUCC,
	EQUIP_WANFA_CONST_BIND_FAIL,
	EQUIP_WANFA_CONST_BIND_EQUIP_FAIL,
	EQUIP_WANFA_CONST_BIND_ITEM_FAIL,

	//荣誉铭刻
	EQUIP_WANFA_HONOR_BIND_SUCC,
	EQUIP_WANFA_HONOR_BIND_FAIL_SUCC,
	EQUIP_WANFA_HONOR_BIND_FAIL,
	EQUIP_WANFA_HONOR_BIND_EQUIP_FAIL,
	EQUIP_WANFA_HONOR_BIND_ITEM_FAIL,
	EQUIP_WANFA_HONOR_BIND_FULL_FAIL,

};

enum LOGIN_ENCODE_RESULT 
{ 
	LOGIN_ENCODE_ANSWER_ERR, 
	LOGIN_ENCODE_ERR, 
	LOGIN_ENCODE_OVERTIME, 
	LOGIN_ENCODE_SUCCESS, 
	LOGIN_ENCODE_MAX_ANSWER_ERR
};

//特殊物品使用类型
enum eITEM_SPECIAL_USETYPE
{ 
	ITEM_SPECIAL_ALL = -1,		//适应所有
	ITEM_SPECIAL_TIANFU_MIXTURE,// 平衡书合成特殊道具
};

#endif
