/*$T Common/Utilities/SplitStringBase.cpp GC 1.140 10/10/07 10:06:57 */


/*$6
 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 */


#include "stdafx.h"
#include "SplitStringBase.h"

/*
 =======================================================================================================================
 =======================================================================================================================
 */

SplitStringBase::SplitStringBase(void)
{
	Reset();
}

/*
 =======================================================================================================================
 =======================================================================================================================
 */
SplitStringBase::~SplitStringBase(void)
{
}

/*
 =======================================================================================================================
 =======================================================================================================================
 */
const SplitStringBase *SplitStringBase::GetChild()
{
	return m_pChild;
}

/*
 =======================================================================================================================
 =======================================================================================================================
 */
void SplitStringBase::Reset()
{
	/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
	__GUARD__	m_pChild = NULL;
	/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/

	m_iLevelOneLineCount = 0;

	memset((void *) m_SplitChar, 0, sizeof(m_SplitChar));

	memset((void *) m_strSplitLevelOne, 0, sizeof(m_strSplitLevelOne));

	__UNGUARD__
}

/*
 =======================================================================================================================
 =======================================================================================================================
 */
void SplitStringBase::Init(char cSplit, SplitStringBase *pChild)
{
	Reset();
	m_SplitChar[0] = cSplit;
	m_pChild = pChild;
}

/*
 =======================================================================================================================
 =======================================================================================================================
 */
int32 SplitStringBase::GetResultLineCount()
{
	return m_iLevelOneLineCount;
}

/*
 =======================================================================================================================
 =======================================================================================================================
 */
const char *SplitStringBase::GetResultLine(int32 iLine)
{
	__GUARD__ if(iLine >= m_iLevelOneLineCount)
	{
		return NULL;
	}

	return m_strSplitLevelOne[iLine];

	__UNGUARD__ return NULL;
}

/*
 =======================================================================================================================
 =======================================================================================================================
 */
BOOL SplitStringBase::DoSubSplit()
{
	__GUARD__ if(m_pChild != NULL)
	{
		for(int32 i = 0; i < m_iLevelOneLineCount; ++i)
		{
			m_pChild->DoSplit(m_strSplitLevelOne[i]);
		}
	}

	return TRUE;
	__UNGUARD__ return FALSE;
}
