// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client_message.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_client_5fmessage_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_client_5fmessage_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021012 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_bases.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_client_5fmessage_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_client_5fmessage_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_client_5fmessage_2eproto;
namespace clientmessage {
class MsgCharMove;
struct MsgCharMoveDefaultTypeInternal;
extern MsgCharMoveDefaultTypeInternal _MsgCharMove_default_instance_;
class MsgEventRequest;
struct MsgEventRequestDefaultTypeInternal;
extern MsgEventRequestDefaultTypeInternal _MsgEventRequest_default_instance_;
class MsgLogin;
struct MsgLoginDefaultTypeInternal;
extern MsgLoginDefaultTypeInternal _MsgLogin_default_instance_;
class MsgManipulatePet;
struct MsgManipulatePetDefaultTypeInternal;
extern MsgManipulatePetDefaultTypeInternal _MsgManipulatePet_default_instance_;
class MsgPickItem;
struct MsgPickItemDefaultTypeInternal;
extern MsgPickItemDefaultTypeInternal _MsgPickItem_default_instance_;
class MsgQueryEvent;
struct MsgQueryEventDefaultTypeInternal;
extern MsgQueryEventDefaultTypeInternal _MsgQueryEvent_default_instance_;
class MsgQueryQuest;
struct MsgQueryQuestDefaultTypeInternal;
extern MsgQueryQuestDefaultTypeInternal _MsgQueryQuest_default_instance_;
class MsgQuestAbandon;
struct MsgQuestAbandonDefaultTypeInternal;
extern MsgQuestAbandonDefaultTypeInternal _MsgQuestAbandon_default_instance_;
class MsgQuestAccept;
struct MsgQuestAcceptDefaultTypeInternal;
extern MsgQuestAcceptDefaultTypeInternal _MsgQuestAccept_default_instance_;
class MsgQuestContinue;
struct MsgQuestContinueDefaultTypeInternal;
extern MsgQuestContinueDefaultTypeInternal _MsgQuestContinue_default_instance_;
class MsgQuestRefuse;
struct MsgQuestRefuseDefaultTypeInternal;
extern MsgQuestRefuseDefaultTypeInternal _MsgQuestRefuse_default_instance_;
class MsgQuestSubmit;
struct MsgQuestSubmitDefaultTypeInternal;
extern MsgQuestSubmitDefaultTypeInternal _MsgQuestSubmit_default_instance_;
class MsgRequestBaseAttrib;
struct MsgRequestBaseAttribDefaultTypeInternal;
extern MsgRequestBaseAttribDefaultTypeInternal _MsgRequestBaseAttrib_default_instance_;
class MsgSwapItem;
struct MsgSwapItemDefaultTypeInternal;
extern MsgSwapItemDefaultTypeInternal _MsgSwapItem_default_instance_;
class MsgTakeDownEquip;
struct MsgTakeDownEquipDefaultTypeInternal;
extern MsgTakeDownEquipDefaultTypeInternal _MsgTakeDownEquip_default_instance_;
class MsgTick;
struct MsgTickDefaultTypeInternal;
extern MsgTickDefaultTypeInternal _MsgTick_default_instance_;
class MsgUseAbility;
struct MsgUseAbilityDefaultTypeInternal;
extern MsgUseAbilityDefaultTypeInternal _MsgUseAbility_default_instance_;
class MsgUseEquip;
struct MsgUseEquipDefaultTypeInternal;
extern MsgUseEquipDefaultTypeInternal _MsgUseEquip_default_instance_;
class MsgUseSkill;
struct MsgUseSkillDefaultTypeInternal;
extern MsgUseSkillDefaultTypeInternal _MsgUseSkill_default_instance_;
}  // namespace clientmessage
PROTOBUF_NAMESPACE_OPEN
template<> ::clientmessage::MsgCharMove* Arena::CreateMaybeMessage<::clientmessage::MsgCharMove>(Arena*);
template<> ::clientmessage::MsgEventRequest* Arena::CreateMaybeMessage<::clientmessage::MsgEventRequest>(Arena*);
template<> ::clientmessage::MsgLogin* Arena::CreateMaybeMessage<::clientmessage::MsgLogin>(Arena*);
template<> ::clientmessage::MsgManipulatePet* Arena::CreateMaybeMessage<::clientmessage::MsgManipulatePet>(Arena*);
template<> ::clientmessage::MsgPickItem* Arena::CreateMaybeMessage<::clientmessage::MsgPickItem>(Arena*);
template<> ::clientmessage::MsgQueryEvent* Arena::CreateMaybeMessage<::clientmessage::MsgQueryEvent>(Arena*);
template<> ::clientmessage::MsgQueryQuest* Arena::CreateMaybeMessage<::clientmessage::MsgQueryQuest>(Arena*);
template<> ::clientmessage::MsgQuestAbandon* Arena::CreateMaybeMessage<::clientmessage::MsgQuestAbandon>(Arena*);
template<> ::clientmessage::MsgQuestAccept* Arena::CreateMaybeMessage<::clientmessage::MsgQuestAccept>(Arena*);
template<> ::clientmessage::MsgQuestContinue* Arena::CreateMaybeMessage<::clientmessage::MsgQuestContinue>(Arena*);
template<> ::clientmessage::MsgQuestRefuse* Arena::CreateMaybeMessage<::clientmessage::MsgQuestRefuse>(Arena*);
template<> ::clientmessage::MsgQuestSubmit* Arena::CreateMaybeMessage<::clientmessage::MsgQuestSubmit>(Arena*);
template<> ::clientmessage::MsgRequestBaseAttrib* Arena::CreateMaybeMessage<::clientmessage::MsgRequestBaseAttrib>(Arena*);
template<> ::clientmessage::MsgSwapItem* Arena::CreateMaybeMessage<::clientmessage::MsgSwapItem>(Arena*);
template<> ::clientmessage::MsgTakeDownEquip* Arena::CreateMaybeMessage<::clientmessage::MsgTakeDownEquip>(Arena*);
template<> ::clientmessage::MsgTick* Arena::CreateMaybeMessage<::clientmessage::MsgTick>(Arena*);
template<> ::clientmessage::MsgUseAbility* Arena::CreateMaybeMessage<::clientmessage::MsgUseAbility>(Arena*);
template<> ::clientmessage::MsgUseEquip* Arena::CreateMaybeMessage<::clientmessage::MsgUseEquip>(Arena*);
template<> ::clientmessage::MsgUseSkill* Arena::CreateMaybeMessage<::clientmessage::MsgUseSkill>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace clientmessage {

enum MessageID : int {
  CS_MSG_NONE = 0,
  CS_LOGIN = 1000,
  CS_QUERY_EVENT = 1100,
  CS_QUERY_QUEST = 1101,
  CS_USE_SKILL = 1102,
  CS_CHAR_MOVE = 1103,
  CS_TICK = 1104,
  CS_PICK_ITEM = 1105,
  CS_SWAP_ITEM = 1106,
  CS_UNEQUIP = 1107,
  CS_USE_EQUIP = 1108,
  CS_EVENT_REQUEST = 1109,
  CS_QUEST_ACCEPT = 1110,
  CS_QUEST_REFUSE = 1111,
  CS_QUEST_CONTINUE = 1112,
  CS_QUEST_ABANDON = 1113,
  CS_QUEST_SUBMIT = 1114,
  CS_REQUEST_BASEATTR = 1115,
  CS_MANIPULATE_PET = 1116,
  CS_USE_ABILITY = 1117,
  MessageID_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::min(),
  MessageID_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::max()
};
bool MessageID_IsValid(int value);
constexpr MessageID MessageID_MIN = CS_MSG_NONE;
constexpr MessageID MessageID_MAX = CS_USE_ABILITY;
constexpr int MessageID_ARRAYSIZE = MessageID_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MessageID_descriptor();
template<typename T>
inline const std::string& MessageID_Name(T enum_t_value) {
  static_assert(::std::is_same<T, MessageID>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function MessageID_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    MessageID_descriptor(), enum_t_value);
}
inline bool MessageID_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, MessageID* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<MessageID>(
    MessageID_descriptor(), name, value);
}
// ===================================================================

class MsgLogin final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:clientmessage.MsgLogin) */ {
 public:
  inline MsgLogin() : MsgLogin(nullptr) {}
  ~MsgLogin() override;
  explicit PROTOBUF_CONSTEXPR MsgLogin(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgLogin(const MsgLogin& from);
  MsgLogin(MsgLogin&& from) noexcept
    : MsgLogin() {
    *this = ::std::move(from);
  }

  inline MsgLogin& operator=(const MsgLogin& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgLogin& operator=(MsgLogin&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgLogin& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgLogin* internal_default_instance() {
    return reinterpret_cast<const MsgLogin*>(
               &_MsgLogin_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(MsgLogin& a, MsgLogin& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgLogin* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgLogin* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgLogin* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgLogin>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MsgLogin& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MsgLogin& from) {
    MsgLogin::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgLogin* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "clientmessage.MsgLogin";
  }
  protected:
  explicit MsgLogin(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUsernameFieldNumber = 1,
    kPasswdFieldNumber = 2,
  };
  // string username = 1;
  void clear_username();
  const std::string& username() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_username(ArgT0&& arg0, ArgT... args);
  std::string* mutable_username();
  PROTOBUF_NODISCARD std::string* release_username();
  void set_allocated_username(std::string* username);
  private:
  const std::string& _internal_username() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_username(const std::string& value);
  std::string* _internal_mutable_username();
  public:

  // string passwd = 2;
  void clear_passwd();
  const std::string& passwd() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_passwd(ArgT0&& arg0, ArgT... args);
  std::string* mutable_passwd();
  PROTOBUF_NODISCARD std::string* release_passwd();
  void set_allocated_passwd(std::string* passwd);
  private:
  const std::string& _internal_passwd() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_passwd(const std::string& value);
  std::string* _internal_mutable_passwd();
  public:

  // @@protoc_insertion_point(class_scope:clientmessage.MsgLogin)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr username_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr passwd_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_client_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class MsgQueryEvent final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:clientmessage.MsgQueryEvent) */ {
 public:
  inline MsgQueryEvent() : MsgQueryEvent(nullptr) {}
  ~MsgQueryEvent() override;
  explicit PROTOBUF_CONSTEXPR MsgQueryEvent(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgQueryEvent(const MsgQueryEvent& from);
  MsgQueryEvent(MsgQueryEvent&& from) noexcept
    : MsgQueryEvent() {
    *this = ::std::move(from);
  }

  inline MsgQueryEvent& operator=(const MsgQueryEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgQueryEvent& operator=(MsgQueryEvent&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgQueryEvent& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgQueryEvent* internal_default_instance() {
    return reinterpret_cast<const MsgQueryEvent*>(
               &_MsgQueryEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(MsgQueryEvent& a, MsgQueryEvent& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgQueryEvent* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgQueryEvent* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgQueryEvent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgQueryEvent>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MsgQueryEvent& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MsgQueryEvent& from) {
    MsgQueryEvent::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgQueryEvent* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "clientmessage.MsgQueryEvent";
  }
  protected:
  explicit MsgQueryEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerIdFieldNumber = 1,
    kMapIdFieldNumber = 2,
    kObjectIdFieldNumber = 3,
  };
  // int32 player_id = 1;
  void clear_player_id();
  int32_t player_id() const;
  void set_player_id(int32_t value);
  private:
  int32_t _internal_player_id() const;
  void _internal_set_player_id(int32_t value);
  public:

  // int32 map_id = 2;
  void clear_map_id();
  int32_t map_id() const;
  void set_map_id(int32_t value);
  private:
  int32_t _internal_map_id() const;
  void _internal_set_map_id(int32_t value);
  public:

  // int32 object_id = 3;
  void clear_object_id();
  int32_t object_id() const;
  void set_object_id(int32_t value);
  private:
  int32_t _internal_object_id() const;
  void _internal_set_object_id(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:clientmessage.MsgQueryEvent)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int32_t player_id_;
    int32_t map_id_;
    int32_t object_id_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_client_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class MsgQueryQuest final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:clientmessage.MsgQueryQuest) */ {
 public:
  inline MsgQueryQuest() : MsgQueryQuest(nullptr) {}
  explicit PROTOBUF_CONSTEXPR MsgQueryQuest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgQueryQuest(const MsgQueryQuest& from);
  MsgQueryQuest(MsgQueryQuest&& from) noexcept
    : MsgQueryQuest() {
    *this = ::std::move(from);
  }

  inline MsgQueryQuest& operator=(const MsgQueryQuest& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgQueryQuest& operator=(MsgQueryQuest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgQueryQuest& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgQueryQuest* internal_default_instance() {
    return reinterpret_cast<const MsgQueryQuest*>(
               &_MsgQueryQuest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(MsgQueryQuest& a, MsgQueryQuest& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgQueryQuest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgQueryQuest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgQueryQuest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgQueryQuest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgQueryQuest& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgQueryQuest& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "clientmessage.MsgQueryQuest";
  }
  protected:
  explicit MsgQueryQuest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:clientmessage.MsgQueryQuest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_client_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class MsgCharMove final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:clientmessage.MsgCharMove) */ {
 public:
  inline MsgCharMove() : MsgCharMove(nullptr) {}
  ~MsgCharMove() override;
  explicit PROTOBUF_CONSTEXPR MsgCharMove(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgCharMove(const MsgCharMove& from);
  MsgCharMove(MsgCharMove&& from) noexcept
    : MsgCharMove() {
    *this = ::std::move(from);
  }

  inline MsgCharMove& operator=(const MsgCharMove& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgCharMove& operator=(MsgCharMove&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgCharMove& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgCharMove* internal_default_instance() {
    return reinterpret_cast<const MsgCharMove*>(
               &_MsgCharMove_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(MsgCharMove& a, MsgCharMove& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgCharMove* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgCharMove* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgCharMove* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgCharMove>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MsgCharMove& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MsgCharMove& from) {
    MsgCharMove::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgCharMove* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "clientmessage.MsgCharMove";
  }
  protected:
  explicit MsgCharMove(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObjectIdFieldNumber = 1,
    kMapIdFieldNumber = 2,
    kHandleIdFieldNumber = 3,
    kStopLogicCountFieldNumber = 4,
    kTargetXFieldNumber = 5,
    kTargetYFieldNumber = 6,
    kWorldXFieldNumber = 7,
    kWorldYFieldNumber = 8,
  };
  // int32 object_id = 1;
  void clear_object_id();
  int32_t object_id() const;
  void set_object_id(int32_t value);
  private:
  int32_t _internal_object_id() const;
  void _internal_set_object_id(int32_t value);
  public:

  // int32 map_id = 2;
  void clear_map_id();
  int32_t map_id() const;
  void set_map_id(int32_t value);
  private:
  int32_t _internal_map_id() const;
  void _internal_set_map_id(int32_t value);
  public:

  // int32 handle_id = 3;
  void clear_handle_id();
  int32_t handle_id() const;
  void set_handle_id(int32_t value);
  private:
  int32_t _internal_handle_id() const;
  void _internal_set_handle_id(int32_t value);
  public:

  // int32 stop_logic_count = 4;
  void clear_stop_logic_count();
  int32_t stop_logic_count() const;
  void set_stop_logic_count(int32_t value);
  private:
  int32_t _internal_stop_logic_count() const;
  void _internal_set_stop_logic_count(int32_t value);
  public:

  // float target_x = 5;
  void clear_target_x();
  float target_x() const;
  void set_target_x(float value);
  private:
  float _internal_target_x() const;
  void _internal_set_target_x(float value);
  public:

  // float target_y = 6;
  void clear_target_y();
  float target_y() const;
  void set_target_y(float value);
  private:
  float _internal_target_y() const;
  void _internal_set_target_y(float value);
  public:

  // float world_x = 7;
  void clear_world_x();
  float world_x() const;
  void set_world_x(float value);
  private:
  float _internal_world_x() const;
  void _internal_set_world_x(float value);
  public:

  // float world_y = 8;
  void clear_world_y();
  float world_y() const;
  void set_world_y(float value);
  private:
  float _internal_world_y() const;
  void _internal_set_world_y(float value);
  public:

  // @@protoc_insertion_point(class_scope:clientmessage.MsgCharMove)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int32_t object_id_;
    int32_t map_id_;
    int32_t handle_id_;
    int32_t stop_logic_count_;
    float target_x_;
    float target_y_;
    float world_x_;
    float world_y_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_client_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class MsgUseSkill final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:clientmessage.MsgUseSkill) */ {
 public:
  inline MsgUseSkill() : MsgUseSkill(nullptr) {}
  ~MsgUseSkill() override;
  explicit PROTOBUF_CONSTEXPR MsgUseSkill(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgUseSkill(const MsgUseSkill& from);
  MsgUseSkill(MsgUseSkill&& from) noexcept
    : MsgUseSkill() {
    *this = ::std::move(from);
  }

  inline MsgUseSkill& operator=(const MsgUseSkill& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgUseSkill& operator=(MsgUseSkill&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgUseSkill& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgUseSkill* internal_default_instance() {
    return reinterpret_cast<const MsgUseSkill*>(
               &_MsgUseSkill_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(MsgUseSkill& a, MsgUseSkill& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgUseSkill* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgUseSkill* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgUseSkill* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgUseSkill>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MsgUseSkill& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MsgUseSkill& from) {
    MsgUseSkill::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgUseSkill* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "clientmessage.MsgUseSkill";
  }
  protected:
  explicit MsgUseSkill(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerIdFieldNumber = 1,
    kSkillIdFieldNumber = 2,
    kTargetIdFieldNumber = 3,
    kMapIdFieldNumber = 4,
    kTargetXFieldNumber = 5,
    kTargetYFieldNumber = 6,
    kDirFieldNumber = 7,
    kGuidFieldNumber = 8,
    kHurtDelayTimeFieldNumber = 9,
  };
  // int32 player_id = 1;
  void clear_player_id();
  int32_t player_id() const;
  void set_player_id(int32_t value);
  private:
  int32_t _internal_player_id() const;
  void _internal_set_player_id(int32_t value);
  public:

  // int32 skill_id = 2;
  void clear_skill_id();
  int32_t skill_id() const;
  void set_skill_id(int32_t value);
  private:
  int32_t _internal_skill_id() const;
  void _internal_set_skill_id(int32_t value);
  public:

  // int32 target_id = 3;
  void clear_target_id();
  int32_t target_id() const;
  void set_target_id(int32_t value);
  private:
  int32_t _internal_target_id() const;
  void _internal_set_target_id(int32_t value);
  public:

  // int32 map_id = 4;
  void clear_map_id();
  int32_t map_id() const;
  void set_map_id(int32_t value);
  private:
  int32_t _internal_map_id() const;
  void _internal_set_map_id(int32_t value);
  public:

  // float target_x = 5;
  void clear_target_x();
  float target_x() const;
  void set_target_x(float value);
  private:
  float _internal_target_x() const;
  void _internal_set_target_x(float value);
  public:

  // float target_y = 6;
  void clear_target_y();
  float target_y() const;
  void set_target_y(float value);
  private:
  float _internal_target_y() const;
  void _internal_set_target_y(float value);
  public:

  // float dir = 7;
  void clear_dir();
  float dir() const;
  void set_dir(float value);
  private:
  float _internal_dir() const;
  void _internal_set_dir(float value);
  public:

  // uint32 guid = 8;
  void clear_guid();
  uint32_t guid() const;
  void set_guid(uint32_t value);
  private:
  uint32_t _internal_guid() const;
  void _internal_set_guid(uint32_t value);
  public:

  // int32 hurt_delay_time = 9;
  void clear_hurt_delay_time();
  int32_t hurt_delay_time() const;
  void set_hurt_delay_time(int32_t value);
  private:
  int32_t _internal_hurt_delay_time() const;
  void _internal_set_hurt_delay_time(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:clientmessage.MsgUseSkill)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int32_t player_id_;
    int32_t skill_id_;
    int32_t target_id_;
    int32_t map_id_;
    float target_x_;
    float target_y_;
    float dir_;
    uint32_t guid_;
    int32_t hurt_delay_time_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_client_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class MsgEventRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:clientmessage.MsgEventRequest) */ {
 public:
  inline MsgEventRequest() : MsgEventRequest(nullptr) {}
  ~MsgEventRequest() override;
  explicit PROTOBUF_CONSTEXPR MsgEventRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgEventRequest(const MsgEventRequest& from);
  MsgEventRequest(MsgEventRequest&& from) noexcept
    : MsgEventRequest() {
    *this = ::std::move(from);
  }

  inline MsgEventRequest& operator=(const MsgEventRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgEventRequest& operator=(MsgEventRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgEventRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgEventRequest* internal_default_instance() {
    return reinterpret_cast<const MsgEventRequest*>(
               &_MsgEventRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(MsgEventRequest& a, MsgEventRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgEventRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgEventRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgEventRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgEventRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MsgEventRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MsgEventRequest& from) {
    MsgEventRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgEventRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "clientmessage.MsgEventRequest";
  }
  protected:
  explicit MsgEventRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerIdFieldNumber = 1,
    kMapIdFieldNumber = 2,
    kTargetIdFieldNumber = 3,
    kExIndexFieldNumber = 4,
    kMidScriptFieldNumber = 5,
  };
  // int32 player_id = 1;
  void clear_player_id();
  int32_t player_id() const;
  void set_player_id(int32_t value);
  private:
  int32_t _internal_player_id() const;
  void _internal_set_player_id(int32_t value);
  public:

  // int32 map_id = 2;
  void clear_map_id();
  int32_t map_id() const;
  void set_map_id(int32_t value);
  private:
  int32_t _internal_map_id() const;
  void _internal_set_map_id(int32_t value);
  public:

  // int32 target_id = 3;
  void clear_target_id();
  int32_t target_id() const;
  void set_target_id(int32_t value);
  private:
  int32_t _internal_target_id() const;
  void _internal_set_target_id(int32_t value);
  public:

  // int32 ex_index = 4;
  void clear_ex_index();
  int32_t ex_index() const;
  void set_ex_index(int32_t value);
  private:
  int32_t _internal_ex_index() const;
  void _internal_set_ex_index(int32_t value);
  public:

  // int32 mid_script = 5;
  void clear_mid_script();
  int32_t mid_script() const;
  void set_mid_script(int32_t value);
  private:
  int32_t _internal_mid_script() const;
  void _internal_set_mid_script(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:clientmessage.MsgEventRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int32_t player_id_;
    int32_t map_id_;
    int32_t target_id_;
    int32_t ex_index_;
    int32_t mid_script_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_client_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class MsgManipulatePet final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:clientmessage.MsgManipulatePet) */ {
 public:
  inline MsgManipulatePet() : MsgManipulatePet(nullptr) {}
  ~MsgManipulatePet() override;
  explicit PROTOBUF_CONSTEXPR MsgManipulatePet(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgManipulatePet(const MsgManipulatePet& from);
  MsgManipulatePet(MsgManipulatePet&& from) noexcept
    : MsgManipulatePet() {
    *this = ::std::move(from);
  }

  inline MsgManipulatePet& operator=(const MsgManipulatePet& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgManipulatePet& operator=(MsgManipulatePet&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgManipulatePet& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgManipulatePet* internal_default_instance() {
    return reinterpret_cast<const MsgManipulatePet*>(
               &_MsgManipulatePet_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(MsgManipulatePet& a, MsgManipulatePet& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgManipulatePet* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgManipulatePet* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgManipulatePet* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgManipulatePet>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MsgManipulatePet& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MsgManipulatePet& from) {
    MsgManipulatePet::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgManipulatePet* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "clientmessage.MsgManipulatePet";
  }
  protected:
  explicit MsgManipulatePet(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerIdFieldNumber = 1,
    kMapIdFieldNumber = 2,
    kHighSectionHorseFieldNumber = 3,
    kLowSectionHorseFieldNumber = 4,
    kManipulateTypeFieldNumber = 5,
  };
  // int32 player_id = 1;
  void clear_player_id();
  int32_t player_id() const;
  void set_player_id(int32_t value);
  private:
  int32_t _internal_player_id() const;
  void _internal_set_player_id(int32_t value);
  public:

  // int32 map_id = 2;
  void clear_map_id();
  int32_t map_id() const;
  void set_map_id(int32_t value);
  private:
  int32_t _internal_map_id() const;
  void _internal_set_map_id(int32_t value);
  public:

  // uint32 high_section_horse = 3;
  void clear_high_section_horse();
  uint32_t high_section_horse() const;
  void set_high_section_horse(uint32_t value);
  private:
  uint32_t _internal_high_section_horse() const;
  void _internal_set_high_section_horse(uint32_t value);
  public:

  // uint32 low_section_horse = 4;
  void clear_low_section_horse();
  uint32_t low_section_horse() const;
  void set_low_section_horse(uint32_t value);
  private:
  uint32_t _internal_low_section_horse() const;
  void _internal_set_low_section_horse(uint32_t value);
  public:

  // int32 manipulate_type = 5;
  void clear_manipulate_type();
  int32_t manipulate_type() const;
  void set_manipulate_type(int32_t value);
  private:
  int32_t _internal_manipulate_type() const;
  void _internal_set_manipulate_type(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:clientmessage.MsgManipulatePet)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int32_t player_id_;
    int32_t map_id_;
    uint32_t high_section_horse_;
    uint32_t low_section_horse_;
    int32_t manipulate_type_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_client_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class MsgPickItem final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:clientmessage.MsgPickItem) */ {
 public:
  inline MsgPickItem() : MsgPickItem(nullptr) {}
  ~MsgPickItem() override;
  explicit PROTOBUF_CONSTEXPR MsgPickItem(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgPickItem(const MsgPickItem& from);
  MsgPickItem(MsgPickItem&& from) noexcept
    : MsgPickItem() {
    *this = ::std::move(from);
  }

  inline MsgPickItem& operator=(const MsgPickItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgPickItem& operator=(MsgPickItem&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgPickItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgPickItem* internal_default_instance() {
    return reinterpret_cast<const MsgPickItem*>(
               &_MsgPickItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(MsgPickItem& a, MsgPickItem& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgPickItem* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgPickItem* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgPickItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgPickItem>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MsgPickItem& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MsgPickItem& from) {
    MsgPickItem::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgPickItem* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "clientmessage.MsgPickItem";
  }
  protected:
  explicit MsgPickItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObjectIdFieldNumber = 1,
    kMapIdFieldNumber = 2,
    kPlayerIdFieldNumber = 3,
  };
  // int32 object_id = 1;
  void clear_object_id();
  int32_t object_id() const;
  void set_object_id(int32_t value);
  private:
  int32_t _internal_object_id() const;
  void _internal_set_object_id(int32_t value);
  public:

  // int32 map_id = 2;
  void clear_map_id();
  int32_t map_id() const;
  void set_map_id(int32_t value);
  private:
  int32_t _internal_map_id() const;
  void _internal_set_map_id(int32_t value);
  public:

  // int32 player_id = 3;
  void clear_player_id();
  int32_t player_id() const;
  void set_player_id(int32_t value);
  private:
  int32_t _internal_player_id() const;
  void _internal_set_player_id(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:clientmessage.MsgPickItem)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int32_t object_id_;
    int32_t map_id_;
    int32_t player_id_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_client_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class MsgRequestBaseAttrib final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:clientmessage.MsgRequestBaseAttrib) */ {
 public:
  inline MsgRequestBaseAttrib() : MsgRequestBaseAttrib(nullptr) {}
  ~MsgRequestBaseAttrib() override;
  explicit PROTOBUF_CONSTEXPR MsgRequestBaseAttrib(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgRequestBaseAttrib(const MsgRequestBaseAttrib& from);
  MsgRequestBaseAttrib(MsgRequestBaseAttrib&& from) noexcept
    : MsgRequestBaseAttrib() {
    *this = ::std::move(from);
  }

  inline MsgRequestBaseAttrib& operator=(const MsgRequestBaseAttrib& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgRequestBaseAttrib& operator=(MsgRequestBaseAttrib&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgRequestBaseAttrib& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgRequestBaseAttrib* internal_default_instance() {
    return reinterpret_cast<const MsgRequestBaseAttrib*>(
               &_MsgRequestBaseAttrib_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(MsgRequestBaseAttrib& a, MsgRequestBaseAttrib& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgRequestBaseAttrib* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgRequestBaseAttrib* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgRequestBaseAttrib* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgRequestBaseAttrib>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MsgRequestBaseAttrib& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MsgRequestBaseAttrib& from) {
    MsgRequestBaseAttrib::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgRequestBaseAttrib* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "clientmessage.MsgRequestBaseAttrib";
  }
  protected:
  explicit MsgRequestBaseAttrib(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTargetIdFieldNumber = 1,
    kPlayerIdFieldNumber = 2,
    kMapIdFieldNumber = 3,
  };
  // int32 target_id = 1;
  void clear_target_id();
  int32_t target_id() const;
  void set_target_id(int32_t value);
  private:
  int32_t _internal_target_id() const;
  void _internal_set_target_id(int32_t value);
  public:

  // int32 player_id = 2;
  void clear_player_id();
  int32_t player_id() const;
  void set_player_id(int32_t value);
  private:
  int32_t _internal_player_id() const;
  void _internal_set_player_id(int32_t value);
  public:

  // int32 map_id = 3;
  void clear_map_id();
  int32_t map_id() const;
  void set_map_id(int32_t value);
  private:
  int32_t _internal_map_id() const;
  void _internal_set_map_id(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:clientmessage.MsgRequestBaseAttrib)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int32_t target_id_;
    int32_t player_id_;
    int32_t map_id_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_client_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class MsgQuestAbandon final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:clientmessage.MsgQuestAbandon) */ {
 public:
  inline MsgQuestAbandon() : MsgQuestAbandon(nullptr) {}
  ~MsgQuestAbandon() override;
  explicit PROTOBUF_CONSTEXPR MsgQuestAbandon(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgQuestAbandon(const MsgQuestAbandon& from);
  MsgQuestAbandon(MsgQuestAbandon&& from) noexcept
    : MsgQuestAbandon() {
    *this = ::std::move(from);
  }

  inline MsgQuestAbandon& operator=(const MsgQuestAbandon& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgQuestAbandon& operator=(MsgQuestAbandon&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgQuestAbandon& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgQuestAbandon* internal_default_instance() {
    return reinterpret_cast<const MsgQuestAbandon*>(
               &_MsgQuestAbandon_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(MsgQuestAbandon& a, MsgQuestAbandon& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgQuestAbandon* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgQuestAbandon* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgQuestAbandon* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgQuestAbandon>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MsgQuestAbandon& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MsgQuestAbandon& from) {
    MsgQuestAbandon::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgQuestAbandon* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "clientmessage.MsgQuestAbandon";
  }
  protected:
  explicit MsgQuestAbandon(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerIdFieldNumber = 1,
    kMapIdFieldNumber = 2,
    kTargetIdFieldNumber = 3,
    kScriptIdFieldNumber = 4,
  };
  // int32 player_id = 1;
  void clear_player_id();
  int32_t player_id() const;
  void set_player_id(int32_t value);
  private:
  int32_t _internal_player_id() const;
  void _internal_set_player_id(int32_t value);
  public:

  // int32 map_id = 2;
  void clear_map_id();
  int32_t map_id() const;
  void set_map_id(int32_t value);
  private:
  int32_t _internal_map_id() const;
  void _internal_set_map_id(int32_t value);
  public:

  // int32 target_id = 3;
  void clear_target_id();
  int32_t target_id() const;
  void set_target_id(int32_t value);
  private:
  int32_t _internal_target_id() const;
  void _internal_set_target_id(int32_t value);
  public:

  // int32 script_id = 4;
  void clear_script_id();
  int32_t script_id() const;
  void set_script_id(int32_t value);
  private:
  int32_t _internal_script_id() const;
  void _internal_set_script_id(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:clientmessage.MsgQuestAbandon)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int32_t player_id_;
    int32_t map_id_;
    int32_t target_id_;
    int32_t script_id_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_client_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class MsgQuestAccept final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:clientmessage.MsgQuestAccept) */ {
 public:
  inline MsgQuestAccept() : MsgQuestAccept(nullptr) {}
  ~MsgQuestAccept() override;
  explicit PROTOBUF_CONSTEXPR MsgQuestAccept(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgQuestAccept(const MsgQuestAccept& from);
  MsgQuestAccept(MsgQuestAccept&& from) noexcept
    : MsgQuestAccept() {
    *this = ::std::move(from);
  }

  inline MsgQuestAccept& operator=(const MsgQuestAccept& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgQuestAccept& operator=(MsgQuestAccept&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgQuestAccept& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgQuestAccept* internal_default_instance() {
    return reinterpret_cast<const MsgQuestAccept*>(
               &_MsgQuestAccept_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(MsgQuestAccept& a, MsgQuestAccept& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgQuestAccept* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgQuestAccept* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgQuestAccept* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgQuestAccept>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MsgQuestAccept& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MsgQuestAccept& from) {
    MsgQuestAccept::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgQuestAccept* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "clientmessage.MsgQuestAccept";
  }
  protected:
  explicit MsgQuestAccept(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerIdFieldNumber = 1,
    kMapIdFieldNumber = 2,
    kTargetIdFieldNumber = 3,
    kScriptIdFieldNumber = 4,
  };
  // int32 player_id = 1;
  void clear_player_id();
  int32_t player_id() const;
  void set_player_id(int32_t value);
  private:
  int32_t _internal_player_id() const;
  void _internal_set_player_id(int32_t value);
  public:

  // int32 map_id = 2;
  void clear_map_id();
  int32_t map_id() const;
  void set_map_id(int32_t value);
  private:
  int32_t _internal_map_id() const;
  void _internal_set_map_id(int32_t value);
  public:

  // int32 target_id = 3;
  void clear_target_id();
  int32_t target_id() const;
  void set_target_id(int32_t value);
  private:
  int32_t _internal_target_id() const;
  void _internal_set_target_id(int32_t value);
  public:

  // int32 script_id = 4;
  void clear_script_id();
  int32_t script_id() const;
  void set_script_id(int32_t value);
  private:
  int32_t _internal_script_id() const;
  void _internal_set_script_id(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:clientmessage.MsgQuestAccept)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int32_t player_id_;
    int32_t map_id_;
    int32_t target_id_;
    int32_t script_id_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_client_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class MsgQuestContinue final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:clientmessage.MsgQuestContinue) */ {
 public:
  inline MsgQuestContinue() : MsgQuestContinue(nullptr) {}
  ~MsgQuestContinue() override;
  explicit PROTOBUF_CONSTEXPR MsgQuestContinue(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgQuestContinue(const MsgQuestContinue& from);
  MsgQuestContinue(MsgQuestContinue&& from) noexcept
    : MsgQuestContinue() {
    *this = ::std::move(from);
  }

  inline MsgQuestContinue& operator=(const MsgQuestContinue& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgQuestContinue& operator=(MsgQuestContinue&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgQuestContinue& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgQuestContinue* internal_default_instance() {
    return reinterpret_cast<const MsgQuestContinue*>(
               &_MsgQuestContinue_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(MsgQuestContinue& a, MsgQuestContinue& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgQuestContinue* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgQuestContinue* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgQuestContinue* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgQuestContinue>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MsgQuestContinue& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MsgQuestContinue& from) {
    MsgQuestContinue::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgQuestContinue* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "clientmessage.MsgQuestContinue";
  }
  protected:
  explicit MsgQuestContinue(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerIdFieldNumber = 1,
    kMapIdFieldNumber = 2,
    kTargetIdFieldNumber = 3,
    kScriptIdFieldNumber = 4,
  };
  // int32 player_id = 1;
  void clear_player_id();
  int32_t player_id() const;
  void set_player_id(int32_t value);
  private:
  int32_t _internal_player_id() const;
  void _internal_set_player_id(int32_t value);
  public:

  // int32 map_id = 2;
  void clear_map_id();
  int32_t map_id() const;
  void set_map_id(int32_t value);
  private:
  int32_t _internal_map_id() const;
  void _internal_set_map_id(int32_t value);
  public:

  // int32 target_id = 3;
  void clear_target_id();
  int32_t target_id() const;
  void set_target_id(int32_t value);
  private:
  int32_t _internal_target_id() const;
  void _internal_set_target_id(int32_t value);
  public:

  // int32 script_id = 4;
  void clear_script_id();
  int32_t script_id() const;
  void set_script_id(int32_t value);
  private:
  int32_t _internal_script_id() const;
  void _internal_set_script_id(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:clientmessage.MsgQuestContinue)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int32_t player_id_;
    int32_t map_id_;
    int32_t target_id_;
    int32_t script_id_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_client_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class MsgQuestRefuse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:clientmessage.MsgQuestRefuse) */ {
 public:
  inline MsgQuestRefuse() : MsgQuestRefuse(nullptr) {}
  ~MsgQuestRefuse() override;
  explicit PROTOBUF_CONSTEXPR MsgQuestRefuse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgQuestRefuse(const MsgQuestRefuse& from);
  MsgQuestRefuse(MsgQuestRefuse&& from) noexcept
    : MsgQuestRefuse() {
    *this = ::std::move(from);
  }

  inline MsgQuestRefuse& operator=(const MsgQuestRefuse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgQuestRefuse& operator=(MsgQuestRefuse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgQuestRefuse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgQuestRefuse* internal_default_instance() {
    return reinterpret_cast<const MsgQuestRefuse*>(
               &_MsgQuestRefuse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(MsgQuestRefuse& a, MsgQuestRefuse& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgQuestRefuse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgQuestRefuse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgQuestRefuse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgQuestRefuse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MsgQuestRefuse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MsgQuestRefuse& from) {
    MsgQuestRefuse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgQuestRefuse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "clientmessage.MsgQuestRefuse";
  }
  protected:
  explicit MsgQuestRefuse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerIdFieldNumber = 1,
    kMapIdFieldNumber = 2,
    kTargetIdFieldNumber = 3,
    kScriptIdFieldNumber = 4,
  };
  // int32 player_id = 1;
  void clear_player_id();
  int32_t player_id() const;
  void set_player_id(int32_t value);
  private:
  int32_t _internal_player_id() const;
  void _internal_set_player_id(int32_t value);
  public:

  // int32 map_id = 2;
  void clear_map_id();
  int32_t map_id() const;
  void set_map_id(int32_t value);
  private:
  int32_t _internal_map_id() const;
  void _internal_set_map_id(int32_t value);
  public:

  // int32 target_id = 3;
  void clear_target_id();
  int32_t target_id() const;
  void set_target_id(int32_t value);
  private:
  int32_t _internal_target_id() const;
  void _internal_set_target_id(int32_t value);
  public:

  // int32 script_id = 4;
  void clear_script_id();
  int32_t script_id() const;
  void set_script_id(int32_t value);
  private:
  int32_t _internal_script_id() const;
  void _internal_set_script_id(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:clientmessage.MsgQuestRefuse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int32_t player_id_;
    int32_t map_id_;
    int32_t target_id_;
    int32_t script_id_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_client_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class MsgQuestSubmit final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:clientmessage.MsgQuestSubmit) */ {
 public:
  inline MsgQuestSubmit() : MsgQuestSubmit(nullptr) {}
  ~MsgQuestSubmit() override;
  explicit PROTOBUF_CONSTEXPR MsgQuestSubmit(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgQuestSubmit(const MsgQuestSubmit& from);
  MsgQuestSubmit(MsgQuestSubmit&& from) noexcept
    : MsgQuestSubmit() {
    *this = ::std::move(from);
  }

  inline MsgQuestSubmit& operator=(const MsgQuestSubmit& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgQuestSubmit& operator=(MsgQuestSubmit&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgQuestSubmit& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgQuestSubmit* internal_default_instance() {
    return reinterpret_cast<const MsgQuestSubmit*>(
               &_MsgQuestSubmit_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(MsgQuestSubmit& a, MsgQuestSubmit& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgQuestSubmit* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgQuestSubmit* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgQuestSubmit* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgQuestSubmit>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MsgQuestSubmit& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MsgQuestSubmit& from) {
    MsgQuestSubmit::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgQuestSubmit* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "clientmessage.MsgQuestSubmit";
  }
  protected:
  explicit MsgQuestSubmit(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerIdFieldNumber = 1,
    kMapIdFieldNumber = 2,
    kTargetIdFieldNumber = 3,
    kScriptIdFieldNumber = 4,
    kRadioIdFieldNumber = 5,
  };
  // int32 player_id = 1;
  void clear_player_id();
  int32_t player_id() const;
  void set_player_id(int32_t value);
  private:
  int32_t _internal_player_id() const;
  void _internal_set_player_id(int32_t value);
  public:

  // int32 map_id = 2;
  void clear_map_id();
  int32_t map_id() const;
  void set_map_id(int32_t value);
  private:
  int32_t _internal_map_id() const;
  void _internal_set_map_id(int32_t value);
  public:

  // int32 target_id = 3;
  void clear_target_id();
  int32_t target_id() const;
  void set_target_id(int32_t value);
  private:
  int32_t _internal_target_id() const;
  void _internal_set_target_id(int32_t value);
  public:

  // int32 script_id = 4;
  void clear_script_id();
  int32_t script_id() const;
  void set_script_id(int32_t value);
  private:
  int32_t _internal_script_id() const;
  void _internal_set_script_id(int32_t value);
  public:

  // int32 radio_id = 5;
  void clear_radio_id();
  int32_t radio_id() const;
  void set_radio_id(int32_t value);
  private:
  int32_t _internal_radio_id() const;
  void _internal_set_radio_id(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:clientmessage.MsgQuestSubmit)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int32_t player_id_;
    int32_t map_id_;
    int32_t target_id_;
    int32_t script_id_;
    int32_t radio_id_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_client_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class MsgSwapItem final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:clientmessage.MsgSwapItem) */ {
 public:
  inline MsgSwapItem() : MsgSwapItem(nullptr) {}
  ~MsgSwapItem() override;
  explicit PROTOBUF_CONSTEXPR MsgSwapItem(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgSwapItem(const MsgSwapItem& from);
  MsgSwapItem(MsgSwapItem&& from) noexcept
    : MsgSwapItem() {
    *this = ::std::move(from);
  }

  inline MsgSwapItem& operator=(const MsgSwapItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgSwapItem& operator=(MsgSwapItem&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgSwapItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgSwapItem* internal_default_instance() {
    return reinterpret_cast<const MsgSwapItem*>(
               &_MsgSwapItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(MsgSwapItem& a, MsgSwapItem& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgSwapItem* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgSwapItem* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgSwapItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgSwapItem>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MsgSwapItem& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MsgSwapItem& from) {
    MsgSwapItem::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgSwapItem* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "clientmessage.MsgSwapItem";
  }
  protected:
  explicit MsgSwapItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerIdFieldNumber = 1,
    kMapIdFieldNumber = 2,
    kObjectIdFieldNumber = 3,
    kSourcePosFieldNumber = 4,
    kDestPosFieldNumber = 5,
  };
  // int32 player_id = 1;
  void clear_player_id();
  int32_t player_id() const;
  void set_player_id(int32_t value);
  private:
  int32_t _internal_player_id() const;
  void _internal_set_player_id(int32_t value);
  public:

  // int32 map_id = 2;
  void clear_map_id();
  int32_t map_id() const;
  void set_map_id(int32_t value);
  private:
  int32_t _internal_map_id() const;
  void _internal_set_map_id(int32_t value);
  public:

  // int32 object_id = 3;
  void clear_object_id();
  int32_t object_id() const;
  void set_object_id(int32_t value);
  private:
  int32_t _internal_object_id() const;
  void _internal_set_object_id(int32_t value);
  public:

  // int32 source_pos = 4;
  void clear_source_pos();
  int32_t source_pos() const;
  void set_source_pos(int32_t value);
  private:
  int32_t _internal_source_pos() const;
  void _internal_set_source_pos(int32_t value);
  public:

  // int32 dest_pos = 5;
  void clear_dest_pos();
  int32_t dest_pos() const;
  void set_dest_pos(int32_t value);
  private:
  int32_t _internal_dest_pos() const;
  void _internal_set_dest_pos(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:clientmessage.MsgSwapItem)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int32_t player_id_;
    int32_t map_id_;
    int32_t object_id_;
    int32_t source_pos_;
    int32_t dest_pos_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_client_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class MsgTick final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:clientmessage.MsgTick) */ {
 public:
  inline MsgTick() : MsgTick(nullptr) {}
  ~MsgTick() override;
  explicit PROTOBUF_CONSTEXPR MsgTick(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgTick(const MsgTick& from);
  MsgTick(MsgTick&& from) noexcept
    : MsgTick() {
    *this = ::std::move(from);
  }

  inline MsgTick& operator=(const MsgTick& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgTick& operator=(MsgTick&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgTick& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgTick* internal_default_instance() {
    return reinterpret_cast<const MsgTick*>(
               &_MsgTick_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(MsgTick& a, MsgTick& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgTick* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgTick* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgTick* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgTick>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MsgTick& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MsgTick& from) {
    MsgTick::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgTick* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "clientmessage.MsgTick";
  }
  protected:
  explicit MsgTick(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObjectIdFieldNumber = 1,
    kMapIdFieldNumber = 2,
    kPositionXFieldNumber = 3,
    kPositionZFieldNumber = 4,
    kPlayerIdFieldNumber = 5,
    kPlayerPosXFieldNumber = 6,
    kPlayerPosYFieldNumber = 7,
  };
  // int32 object_id = 1;
  void clear_object_id();
  int32_t object_id() const;
  void set_object_id(int32_t value);
  private:
  int32_t _internal_object_id() const;
  void _internal_set_object_id(int32_t value);
  public:

  // int32 map_id = 2;
  void clear_map_id();
  int32_t map_id() const;
  void set_map_id(int32_t value);
  private:
  int32_t _internal_map_id() const;
  void _internal_set_map_id(int32_t value);
  public:

  // float position_x = 3;
  void clear_position_x();
  float position_x() const;
  void set_position_x(float value);
  private:
  float _internal_position_x() const;
  void _internal_set_position_x(float value);
  public:

  // float position_z = 4;
  void clear_position_z();
  float position_z() const;
  void set_position_z(float value);
  private:
  float _internal_position_z() const;
  void _internal_set_position_z(float value);
  public:

  // int32 player_id = 5;
  void clear_player_id();
  int32_t player_id() const;
  void set_player_id(int32_t value);
  private:
  int32_t _internal_player_id() const;
  void _internal_set_player_id(int32_t value);
  public:

  // float player_pos_x = 6;
  void clear_player_pos_x();
  float player_pos_x() const;
  void set_player_pos_x(float value);
  private:
  float _internal_player_pos_x() const;
  void _internal_set_player_pos_x(float value);
  public:

  // float player_pos_y = 7;
  void clear_player_pos_y();
  float player_pos_y() const;
  void set_player_pos_y(float value);
  private:
  float _internal_player_pos_y() const;
  void _internal_set_player_pos_y(float value);
  public:

  // @@protoc_insertion_point(class_scope:clientmessage.MsgTick)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int32_t object_id_;
    int32_t map_id_;
    float position_x_;
    float position_z_;
    int32_t player_id_;
    float player_pos_x_;
    float player_pos_y_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_client_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class MsgTakeDownEquip final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:clientmessage.MsgTakeDownEquip) */ {
 public:
  inline MsgTakeDownEquip() : MsgTakeDownEquip(nullptr) {}
  ~MsgTakeDownEquip() override;
  explicit PROTOBUF_CONSTEXPR MsgTakeDownEquip(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgTakeDownEquip(const MsgTakeDownEquip& from);
  MsgTakeDownEquip(MsgTakeDownEquip&& from) noexcept
    : MsgTakeDownEquip() {
    *this = ::std::move(from);
  }

  inline MsgTakeDownEquip& operator=(const MsgTakeDownEquip& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgTakeDownEquip& operator=(MsgTakeDownEquip&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgTakeDownEquip& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgTakeDownEquip* internal_default_instance() {
    return reinterpret_cast<const MsgTakeDownEquip*>(
               &_MsgTakeDownEquip_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(MsgTakeDownEquip& a, MsgTakeDownEquip& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgTakeDownEquip* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgTakeDownEquip* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgTakeDownEquip* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgTakeDownEquip>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MsgTakeDownEquip& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MsgTakeDownEquip& from) {
    MsgTakeDownEquip::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgTakeDownEquip* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "clientmessage.MsgTakeDownEquip";
  }
  protected:
  explicit MsgTakeDownEquip(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerIdFieldNumber = 1,
    kMapIdFieldNumber = 2,
    kEquipPointFieldNumber = 3,
    kBagIndexFieldNumber = 4,
  };
  // int32 player_id = 1;
  void clear_player_id();
  int32_t player_id() const;
  void set_player_id(int32_t value);
  private:
  int32_t _internal_player_id() const;
  void _internal_set_player_id(int32_t value);
  public:

  // int32 map_id = 2;
  void clear_map_id();
  int32_t map_id() const;
  void set_map_id(int32_t value);
  private:
  int32_t _internal_map_id() const;
  void _internal_set_map_id(int32_t value);
  public:

  // int32 equip_point = 3;
  void clear_equip_point();
  int32_t equip_point() const;
  void set_equip_point(int32_t value);
  private:
  int32_t _internal_equip_point() const;
  void _internal_set_equip_point(int32_t value);
  public:

  // int32 bag_index = 4;
  void clear_bag_index();
  int32_t bag_index() const;
  void set_bag_index(int32_t value);
  private:
  int32_t _internal_bag_index() const;
  void _internal_set_bag_index(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:clientmessage.MsgTakeDownEquip)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int32_t player_id_;
    int32_t map_id_;
    int32_t equip_point_;
    int32_t bag_index_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_client_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class MsgUseAbility final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:clientmessage.MsgUseAbility) */ {
 public:
  inline MsgUseAbility() : MsgUseAbility(nullptr) {}
  ~MsgUseAbility() override;
  explicit PROTOBUF_CONSTEXPR MsgUseAbility(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgUseAbility(const MsgUseAbility& from);
  MsgUseAbility(MsgUseAbility&& from) noexcept
    : MsgUseAbility() {
    *this = ::std::move(from);
  }

  inline MsgUseAbility& operator=(const MsgUseAbility& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgUseAbility& operator=(MsgUseAbility&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgUseAbility& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgUseAbility* internal_default_instance() {
    return reinterpret_cast<const MsgUseAbility*>(
               &_MsgUseAbility_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(MsgUseAbility& a, MsgUseAbility& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgUseAbility* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgUseAbility* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgUseAbility* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgUseAbility>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MsgUseAbility& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MsgUseAbility& from) {
    MsgUseAbility::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgUseAbility* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "clientmessage.MsgUseAbility";
  }
  protected:
  explicit MsgUseAbility(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerIdFieldNumber = 1,
    kMapIdFieldNumber = 2,
    kAbilityIdFieldNumber = 3,
    kObjectGuidFieldNumber = 4,
    kPrescriptionIdFieldNumber = 5,
  };
  // int32 player_id = 1;
  void clear_player_id();
  int32_t player_id() const;
  void set_player_id(int32_t value);
  private:
  int32_t _internal_player_id() const;
  void _internal_set_player_id(int32_t value);
  public:

  // int32 map_id = 2;
  void clear_map_id();
  int32_t map_id() const;
  void set_map_id(int32_t value);
  private:
  int32_t _internal_map_id() const;
  void _internal_set_map_id(int32_t value);
  public:

  // int32 ability_id = 3;
  void clear_ability_id();
  int32_t ability_id() const;
  void set_ability_id(int32_t value);
  private:
  int32_t _internal_ability_id() const;
  void _internal_set_ability_id(int32_t value);
  public:

  // int32 object_guid = 4;
  void clear_object_guid();
  int32_t object_guid() const;
  void set_object_guid(int32_t value);
  private:
  int32_t _internal_object_guid() const;
  void _internal_set_object_guid(int32_t value);
  public:

  // int32 prescription_id = 5;
  void clear_prescription_id();
  int32_t prescription_id() const;
  void set_prescription_id(int32_t value);
  private:
  int32_t _internal_prescription_id() const;
  void _internal_set_prescription_id(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:clientmessage.MsgUseAbility)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int32_t player_id_;
    int32_t map_id_;
    int32_t ability_id_;
    int32_t object_guid_;
    int32_t prescription_id_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_client_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class MsgUseEquip final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:clientmessage.MsgUseEquip) */ {
 public:
  inline MsgUseEquip() : MsgUseEquip(nullptr) {}
  ~MsgUseEquip() override;
  explicit PROTOBUF_CONSTEXPR MsgUseEquip(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgUseEquip(const MsgUseEquip& from);
  MsgUseEquip(MsgUseEquip&& from) noexcept
    : MsgUseEquip() {
    *this = ::std::move(from);
  }

  inline MsgUseEquip& operator=(const MsgUseEquip& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgUseEquip& operator=(MsgUseEquip&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgUseEquip& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgUseEquip* internal_default_instance() {
    return reinterpret_cast<const MsgUseEquip*>(
               &_MsgUseEquip_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(MsgUseEquip& a, MsgUseEquip& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgUseEquip* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgUseEquip* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgUseEquip* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgUseEquip>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MsgUseEquip& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MsgUseEquip& from) {
    MsgUseEquip::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgUseEquip* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "clientmessage.MsgUseEquip";
  }
  protected:
  explicit MsgUseEquip(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerIdFieldNumber = 1,
    kMapIdFieldNumber = 2,
    kEquipPointFieldNumber = 3,
    kBagIndexFieldNumber = 4,
  };
  // int32 player_id = 1;
  void clear_player_id();
  int32_t player_id() const;
  void set_player_id(int32_t value);
  private:
  int32_t _internal_player_id() const;
  void _internal_set_player_id(int32_t value);
  public:

  // int32 map_id = 2;
  void clear_map_id();
  int32_t map_id() const;
  void set_map_id(int32_t value);
  private:
  int32_t _internal_map_id() const;
  void _internal_set_map_id(int32_t value);
  public:

  // int32 equip_point = 3;
  void clear_equip_point();
  int32_t equip_point() const;
  void set_equip_point(int32_t value);
  private:
  int32_t _internal_equip_point() const;
  void _internal_set_equip_point(int32_t value);
  public:

  // int32 bag_index = 4;
  void clear_bag_index();
  int32_t bag_index() const;
  void set_bag_index(int32_t value);
  private:
  int32_t _internal_bag_index() const;
  void _internal_set_bag_index(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:clientmessage.MsgUseEquip)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int32_t player_id_;
    int32_t map_id_;
    int32_t equip_point_;
    int32_t bag_index_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_client_5fmessage_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MsgLogin

// string username = 1;
inline void MsgLogin::clear_username() {
  _impl_.username_.ClearToEmpty();
}
inline const std::string& MsgLogin::username() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgLogin.username)
  return _internal_username();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void MsgLogin::set_username(ArgT0&& arg0, ArgT... args) {
 
 _impl_.username_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:clientmessage.MsgLogin.username)
}
inline std::string* MsgLogin::mutable_username() {
  std::string* _s = _internal_mutable_username();
  // @@protoc_insertion_point(field_mutable:clientmessage.MsgLogin.username)
  return _s;
}
inline const std::string& MsgLogin::_internal_username() const {
  return _impl_.username_.Get();
}
inline void MsgLogin::_internal_set_username(const std::string& value) {
  
  _impl_.username_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgLogin::_internal_mutable_username() {
  
  return _impl_.username_.Mutable(GetArenaForAllocation());
}
inline std::string* MsgLogin::release_username() {
  // @@protoc_insertion_point(field_release:clientmessage.MsgLogin.username)
  return _impl_.username_.Release();
}
inline void MsgLogin::set_allocated_username(std::string* username) {
  if (username != nullptr) {
    
  } else {
    
  }
  _impl_.username_.SetAllocated(username, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.username_.IsDefault()) {
    _impl_.username_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:clientmessage.MsgLogin.username)
}

// string passwd = 2;
inline void MsgLogin::clear_passwd() {
  _impl_.passwd_.ClearToEmpty();
}
inline const std::string& MsgLogin::passwd() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgLogin.passwd)
  return _internal_passwd();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void MsgLogin::set_passwd(ArgT0&& arg0, ArgT... args) {
 
 _impl_.passwd_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:clientmessage.MsgLogin.passwd)
}
inline std::string* MsgLogin::mutable_passwd() {
  std::string* _s = _internal_mutable_passwd();
  // @@protoc_insertion_point(field_mutable:clientmessage.MsgLogin.passwd)
  return _s;
}
inline const std::string& MsgLogin::_internal_passwd() const {
  return _impl_.passwd_.Get();
}
inline void MsgLogin::_internal_set_passwd(const std::string& value) {
  
  _impl_.passwd_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgLogin::_internal_mutable_passwd() {
  
  return _impl_.passwd_.Mutable(GetArenaForAllocation());
}
inline std::string* MsgLogin::release_passwd() {
  // @@protoc_insertion_point(field_release:clientmessage.MsgLogin.passwd)
  return _impl_.passwd_.Release();
}
inline void MsgLogin::set_allocated_passwd(std::string* passwd) {
  if (passwd != nullptr) {
    
  } else {
    
  }
  _impl_.passwd_.SetAllocated(passwd, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.passwd_.IsDefault()) {
    _impl_.passwd_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:clientmessage.MsgLogin.passwd)
}

// -------------------------------------------------------------------

// MsgQueryEvent

// int32 player_id = 1;
inline void MsgQueryEvent::clear_player_id() {
  _impl_.player_id_ = 0;
}
inline int32_t MsgQueryEvent::_internal_player_id() const {
  return _impl_.player_id_;
}
inline int32_t MsgQueryEvent::player_id() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgQueryEvent.player_id)
  return _internal_player_id();
}
inline void MsgQueryEvent::_internal_set_player_id(int32_t value) {
  
  _impl_.player_id_ = value;
}
inline void MsgQueryEvent::set_player_id(int32_t value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:clientmessage.MsgQueryEvent.player_id)
}

// int32 map_id = 2;
inline void MsgQueryEvent::clear_map_id() {
  _impl_.map_id_ = 0;
}
inline int32_t MsgQueryEvent::_internal_map_id() const {
  return _impl_.map_id_;
}
inline int32_t MsgQueryEvent::map_id() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgQueryEvent.map_id)
  return _internal_map_id();
}
inline void MsgQueryEvent::_internal_set_map_id(int32_t value) {
  
  _impl_.map_id_ = value;
}
inline void MsgQueryEvent::set_map_id(int32_t value) {
  _internal_set_map_id(value);
  // @@protoc_insertion_point(field_set:clientmessage.MsgQueryEvent.map_id)
}

// int32 object_id = 3;
inline void MsgQueryEvent::clear_object_id() {
  _impl_.object_id_ = 0;
}
inline int32_t MsgQueryEvent::_internal_object_id() const {
  return _impl_.object_id_;
}
inline int32_t MsgQueryEvent::object_id() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgQueryEvent.object_id)
  return _internal_object_id();
}
inline void MsgQueryEvent::_internal_set_object_id(int32_t value) {
  
  _impl_.object_id_ = value;
}
inline void MsgQueryEvent::set_object_id(int32_t value) {
  _internal_set_object_id(value);
  // @@protoc_insertion_point(field_set:clientmessage.MsgQueryEvent.object_id)
}

// -------------------------------------------------------------------

// MsgQueryQuest

// -------------------------------------------------------------------

// MsgCharMove

// int32 object_id = 1;
inline void MsgCharMove::clear_object_id() {
  _impl_.object_id_ = 0;
}
inline int32_t MsgCharMove::_internal_object_id() const {
  return _impl_.object_id_;
}
inline int32_t MsgCharMove::object_id() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgCharMove.object_id)
  return _internal_object_id();
}
inline void MsgCharMove::_internal_set_object_id(int32_t value) {
  
  _impl_.object_id_ = value;
}
inline void MsgCharMove::set_object_id(int32_t value) {
  _internal_set_object_id(value);
  // @@protoc_insertion_point(field_set:clientmessage.MsgCharMove.object_id)
}

// int32 map_id = 2;
inline void MsgCharMove::clear_map_id() {
  _impl_.map_id_ = 0;
}
inline int32_t MsgCharMove::_internal_map_id() const {
  return _impl_.map_id_;
}
inline int32_t MsgCharMove::map_id() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgCharMove.map_id)
  return _internal_map_id();
}
inline void MsgCharMove::_internal_set_map_id(int32_t value) {
  
  _impl_.map_id_ = value;
}
inline void MsgCharMove::set_map_id(int32_t value) {
  _internal_set_map_id(value);
  // @@protoc_insertion_point(field_set:clientmessage.MsgCharMove.map_id)
}

// int32 handle_id = 3;
inline void MsgCharMove::clear_handle_id() {
  _impl_.handle_id_ = 0;
}
inline int32_t MsgCharMove::_internal_handle_id() const {
  return _impl_.handle_id_;
}
inline int32_t MsgCharMove::handle_id() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgCharMove.handle_id)
  return _internal_handle_id();
}
inline void MsgCharMove::_internal_set_handle_id(int32_t value) {
  
  _impl_.handle_id_ = value;
}
inline void MsgCharMove::set_handle_id(int32_t value) {
  _internal_set_handle_id(value);
  // @@protoc_insertion_point(field_set:clientmessage.MsgCharMove.handle_id)
}

// int32 stop_logic_count = 4;
inline void MsgCharMove::clear_stop_logic_count() {
  _impl_.stop_logic_count_ = 0;
}
inline int32_t MsgCharMove::_internal_stop_logic_count() const {
  return _impl_.stop_logic_count_;
}
inline int32_t MsgCharMove::stop_logic_count() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgCharMove.stop_logic_count)
  return _internal_stop_logic_count();
}
inline void MsgCharMove::_internal_set_stop_logic_count(int32_t value) {
  
  _impl_.stop_logic_count_ = value;
}
inline void MsgCharMove::set_stop_logic_count(int32_t value) {
  _internal_set_stop_logic_count(value);
  // @@protoc_insertion_point(field_set:clientmessage.MsgCharMove.stop_logic_count)
}

// float target_x = 5;
inline void MsgCharMove::clear_target_x() {
  _impl_.target_x_ = 0;
}
inline float MsgCharMove::_internal_target_x() const {
  return _impl_.target_x_;
}
inline float MsgCharMove::target_x() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgCharMove.target_x)
  return _internal_target_x();
}
inline void MsgCharMove::_internal_set_target_x(float value) {
  
  _impl_.target_x_ = value;
}
inline void MsgCharMove::set_target_x(float value) {
  _internal_set_target_x(value);
  // @@protoc_insertion_point(field_set:clientmessage.MsgCharMove.target_x)
}

// float target_y = 6;
inline void MsgCharMove::clear_target_y() {
  _impl_.target_y_ = 0;
}
inline float MsgCharMove::_internal_target_y() const {
  return _impl_.target_y_;
}
inline float MsgCharMove::target_y() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgCharMove.target_y)
  return _internal_target_y();
}
inline void MsgCharMove::_internal_set_target_y(float value) {
  
  _impl_.target_y_ = value;
}
inline void MsgCharMove::set_target_y(float value) {
  _internal_set_target_y(value);
  // @@protoc_insertion_point(field_set:clientmessage.MsgCharMove.target_y)
}

// float world_x = 7;
inline void MsgCharMove::clear_world_x() {
  _impl_.world_x_ = 0;
}
inline float MsgCharMove::_internal_world_x() const {
  return _impl_.world_x_;
}
inline float MsgCharMove::world_x() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgCharMove.world_x)
  return _internal_world_x();
}
inline void MsgCharMove::_internal_set_world_x(float value) {
  
  _impl_.world_x_ = value;
}
inline void MsgCharMove::set_world_x(float value) {
  _internal_set_world_x(value);
  // @@protoc_insertion_point(field_set:clientmessage.MsgCharMove.world_x)
}

// float world_y = 8;
inline void MsgCharMove::clear_world_y() {
  _impl_.world_y_ = 0;
}
inline float MsgCharMove::_internal_world_y() const {
  return _impl_.world_y_;
}
inline float MsgCharMove::world_y() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgCharMove.world_y)
  return _internal_world_y();
}
inline void MsgCharMove::_internal_set_world_y(float value) {
  
  _impl_.world_y_ = value;
}
inline void MsgCharMove::set_world_y(float value) {
  _internal_set_world_y(value);
  // @@protoc_insertion_point(field_set:clientmessage.MsgCharMove.world_y)
}

// -------------------------------------------------------------------

// MsgUseSkill

// int32 player_id = 1;
inline void MsgUseSkill::clear_player_id() {
  _impl_.player_id_ = 0;
}
inline int32_t MsgUseSkill::_internal_player_id() const {
  return _impl_.player_id_;
}
inline int32_t MsgUseSkill::player_id() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgUseSkill.player_id)
  return _internal_player_id();
}
inline void MsgUseSkill::_internal_set_player_id(int32_t value) {
  
  _impl_.player_id_ = value;
}
inline void MsgUseSkill::set_player_id(int32_t value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:clientmessage.MsgUseSkill.player_id)
}

// int32 skill_id = 2;
inline void MsgUseSkill::clear_skill_id() {
  _impl_.skill_id_ = 0;
}
inline int32_t MsgUseSkill::_internal_skill_id() const {
  return _impl_.skill_id_;
}
inline int32_t MsgUseSkill::skill_id() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgUseSkill.skill_id)
  return _internal_skill_id();
}
inline void MsgUseSkill::_internal_set_skill_id(int32_t value) {
  
  _impl_.skill_id_ = value;
}
inline void MsgUseSkill::set_skill_id(int32_t value) {
  _internal_set_skill_id(value);
  // @@protoc_insertion_point(field_set:clientmessage.MsgUseSkill.skill_id)
}

// int32 target_id = 3;
inline void MsgUseSkill::clear_target_id() {
  _impl_.target_id_ = 0;
}
inline int32_t MsgUseSkill::_internal_target_id() const {
  return _impl_.target_id_;
}
inline int32_t MsgUseSkill::target_id() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgUseSkill.target_id)
  return _internal_target_id();
}
inline void MsgUseSkill::_internal_set_target_id(int32_t value) {
  
  _impl_.target_id_ = value;
}
inline void MsgUseSkill::set_target_id(int32_t value) {
  _internal_set_target_id(value);
  // @@protoc_insertion_point(field_set:clientmessage.MsgUseSkill.target_id)
}

// int32 map_id = 4;
inline void MsgUseSkill::clear_map_id() {
  _impl_.map_id_ = 0;
}
inline int32_t MsgUseSkill::_internal_map_id() const {
  return _impl_.map_id_;
}
inline int32_t MsgUseSkill::map_id() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgUseSkill.map_id)
  return _internal_map_id();
}
inline void MsgUseSkill::_internal_set_map_id(int32_t value) {
  
  _impl_.map_id_ = value;
}
inline void MsgUseSkill::set_map_id(int32_t value) {
  _internal_set_map_id(value);
  // @@protoc_insertion_point(field_set:clientmessage.MsgUseSkill.map_id)
}

// float target_x = 5;
inline void MsgUseSkill::clear_target_x() {
  _impl_.target_x_ = 0;
}
inline float MsgUseSkill::_internal_target_x() const {
  return _impl_.target_x_;
}
inline float MsgUseSkill::target_x() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgUseSkill.target_x)
  return _internal_target_x();
}
inline void MsgUseSkill::_internal_set_target_x(float value) {
  
  _impl_.target_x_ = value;
}
inline void MsgUseSkill::set_target_x(float value) {
  _internal_set_target_x(value);
  // @@protoc_insertion_point(field_set:clientmessage.MsgUseSkill.target_x)
}

// float target_y = 6;
inline void MsgUseSkill::clear_target_y() {
  _impl_.target_y_ = 0;
}
inline float MsgUseSkill::_internal_target_y() const {
  return _impl_.target_y_;
}
inline float MsgUseSkill::target_y() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgUseSkill.target_y)
  return _internal_target_y();
}
inline void MsgUseSkill::_internal_set_target_y(float value) {
  
  _impl_.target_y_ = value;
}
inline void MsgUseSkill::set_target_y(float value) {
  _internal_set_target_y(value);
  // @@protoc_insertion_point(field_set:clientmessage.MsgUseSkill.target_y)
}

// float dir = 7;
inline void MsgUseSkill::clear_dir() {
  _impl_.dir_ = 0;
}
inline float MsgUseSkill::_internal_dir() const {
  return _impl_.dir_;
}
inline float MsgUseSkill::dir() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgUseSkill.dir)
  return _internal_dir();
}
inline void MsgUseSkill::_internal_set_dir(float value) {
  
  _impl_.dir_ = value;
}
inline void MsgUseSkill::set_dir(float value) {
  _internal_set_dir(value);
  // @@protoc_insertion_point(field_set:clientmessage.MsgUseSkill.dir)
}

// uint32 guid = 8;
inline void MsgUseSkill::clear_guid() {
  _impl_.guid_ = 0u;
}
inline uint32_t MsgUseSkill::_internal_guid() const {
  return _impl_.guid_;
}
inline uint32_t MsgUseSkill::guid() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgUseSkill.guid)
  return _internal_guid();
}
inline void MsgUseSkill::_internal_set_guid(uint32_t value) {
  
  _impl_.guid_ = value;
}
inline void MsgUseSkill::set_guid(uint32_t value) {
  _internal_set_guid(value);
  // @@protoc_insertion_point(field_set:clientmessage.MsgUseSkill.guid)
}

// int32 hurt_delay_time = 9;
inline void MsgUseSkill::clear_hurt_delay_time() {
  _impl_.hurt_delay_time_ = 0;
}
inline int32_t MsgUseSkill::_internal_hurt_delay_time() const {
  return _impl_.hurt_delay_time_;
}
inline int32_t MsgUseSkill::hurt_delay_time() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgUseSkill.hurt_delay_time)
  return _internal_hurt_delay_time();
}
inline void MsgUseSkill::_internal_set_hurt_delay_time(int32_t value) {
  
  _impl_.hurt_delay_time_ = value;
}
inline void MsgUseSkill::set_hurt_delay_time(int32_t value) {
  _internal_set_hurt_delay_time(value);
  // @@protoc_insertion_point(field_set:clientmessage.MsgUseSkill.hurt_delay_time)
}

// -------------------------------------------------------------------

// MsgEventRequest

// int32 player_id = 1;
inline void MsgEventRequest::clear_player_id() {
  _impl_.player_id_ = 0;
}
inline int32_t MsgEventRequest::_internal_player_id() const {
  return _impl_.player_id_;
}
inline int32_t MsgEventRequest::player_id() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgEventRequest.player_id)
  return _internal_player_id();
}
inline void MsgEventRequest::_internal_set_player_id(int32_t value) {
  
  _impl_.player_id_ = value;
}
inline void MsgEventRequest::set_player_id(int32_t value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:clientmessage.MsgEventRequest.player_id)
}

// int32 map_id = 2;
inline void MsgEventRequest::clear_map_id() {
  _impl_.map_id_ = 0;
}
inline int32_t MsgEventRequest::_internal_map_id() const {
  return _impl_.map_id_;
}
inline int32_t MsgEventRequest::map_id() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgEventRequest.map_id)
  return _internal_map_id();
}
inline void MsgEventRequest::_internal_set_map_id(int32_t value) {
  
  _impl_.map_id_ = value;
}
inline void MsgEventRequest::set_map_id(int32_t value) {
  _internal_set_map_id(value);
  // @@protoc_insertion_point(field_set:clientmessage.MsgEventRequest.map_id)
}

// int32 target_id = 3;
inline void MsgEventRequest::clear_target_id() {
  _impl_.target_id_ = 0;
}
inline int32_t MsgEventRequest::_internal_target_id() const {
  return _impl_.target_id_;
}
inline int32_t MsgEventRequest::target_id() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgEventRequest.target_id)
  return _internal_target_id();
}
inline void MsgEventRequest::_internal_set_target_id(int32_t value) {
  
  _impl_.target_id_ = value;
}
inline void MsgEventRequest::set_target_id(int32_t value) {
  _internal_set_target_id(value);
  // @@protoc_insertion_point(field_set:clientmessage.MsgEventRequest.target_id)
}

// int32 ex_index = 4;
inline void MsgEventRequest::clear_ex_index() {
  _impl_.ex_index_ = 0;
}
inline int32_t MsgEventRequest::_internal_ex_index() const {
  return _impl_.ex_index_;
}
inline int32_t MsgEventRequest::ex_index() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgEventRequest.ex_index)
  return _internal_ex_index();
}
inline void MsgEventRequest::_internal_set_ex_index(int32_t value) {
  
  _impl_.ex_index_ = value;
}
inline void MsgEventRequest::set_ex_index(int32_t value) {
  _internal_set_ex_index(value);
  // @@protoc_insertion_point(field_set:clientmessage.MsgEventRequest.ex_index)
}

// int32 mid_script = 5;
inline void MsgEventRequest::clear_mid_script() {
  _impl_.mid_script_ = 0;
}
inline int32_t MsgEventRequest::_internal_mid_script() const {
  return _impl_.mid_script_;
}
inline int32_t MsgEventRequest::mid_script() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgEventRequest.mid_script)
  return _internal_mid_script();
}
inline void MsgEventRequest::_internal_set_mid_script(int32_t value) {
  
  _impl_.mid_script_ = value;
}
inline void MsgEventRequest::set_mid_script(int32_t value) {
  _internal_set_mid_script(value);
  // @@protoc_insertion_point(field_set:clientmessage.MsgEventRequest.mid_script)
}

// -------------------------------------------------------------------

// MsgManipulatePet

// int32 player_id = 1;
inline void MsgManipulatePet::clear_player_id() {
  _impl_.player_id_ = 0;
}
inline int32_t MsgManipulatePet::_internal_player_id() const {
  return _impl_.player_id_;
}
inline int32_t MsgManipulatePet::player_id() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgManipulatePet.player_id)
  return _internal_player_id();
}
inline void MsgManipulatePet::_internal_set_player_id(int32_t value) {
  
  _impl_.player_id_ = value;
}
inline void MsgManipulatePet::set_player_id(int32_t value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:clientmessage.MsgManipulatePet.player_id)
}

// int32 map_id = 2;
inline void MsgManipulatePet::clear_map_id() {
  _impl_.map_id_ = 0;
}
inline int32_t MsgManipulatePet::_internal_map_id() const {
  return _impl_.map_id_;
}
inline int32_t MsgManipulatePet::map_id() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgManipulatePet.map_id)
  return _internal_map_id();
}
inline void MsgManipulatePet::_internal_set_map_id(int32_t value) {
  
  _impl_.map_id_ = value;
}
inline void MsgManipulatePet::set_map_id(int32_t value) {
  _internal_set_map_id(value);
  // @@protoc_insertion_point(field_set:clientmessage.MsgManipulatePet.map_id)
}

// uint32 high_section_horse = 3;
inline void MsgManipulatePet::clear_high_section_horse() {
  _impl_.high_section_horse_ = 0u;
}
inline uint32_t MsgManipulatePet::_internal_high_section_horse() const {
  return _impl_.high_section_horse_;
}
inline uint32_t MsgManipulatePet::high_section_horse() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgManipulatePet.high_section_horse)
  return _internal_high_section_horse();
}
inline void MsgManipulatePet::_internal_set_high_section_horse(uint32_t value) {
  
  _impl_.high_section_horse_ = value;
}
inline void MsgManipulatePet::set_high_section_horse(uint32_t value) {
  _internal_set_high_section_horse(value);
  // @@protoc_insertion_point(field_set:clientmessage.MsgManipulatePet.high_section_horse)
}

// uint32 low_section_horse = 4;
inline void MsgManipulatePet::clear_low_section_horse() {
  _impl_.low_section_horse_ = 0u;
}
inline uint32_t MsgManipulatePet::_internal_low_section_horse() const {
  return _impl_.low_section_horse_;
}
inline uint32_t MsgManipulatePet::low_section_horse() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgManipulatePet.low_section_horse)
  return _internal_low_section_horse();
}
inline void MsgManipulatePet::_internal_set_low_section_horse(uint32_t value) {
  
  _impl_.low_section_horse_ = value;
}
inline void MsgManipulatePet::set_low_section_horse(uint32_t value) {
  _internal_set_low_section_horse(value);
  // @@protoc_insertion_point(field_set:clientmessage.MsgManipulatePet.low_section_horse)
}

// int32 manipulate_type = 5;
inline void MsgManipulatePet::clear_manipulate_type() {
  _impl_.manipulate_type_ = 0;
}
inline int32_t MsgManipulatePet::_internal_manipulate_type() const {
  return _impl_.manipulate_type_;
}
inline int32_t MsgManipulatePet::manipulate_type() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgManipulatePet.manipulate_type)
  return _internal_manipulate_type();
}
inline void MsgManipulatePet::_internal_set_manipulate_type(int32_t value) {
  
  _impl_.manipulate_type_ = value;
}
inline void MsgManipulatePet::set_manipulate_type(int32_t value) {
  _internal_set_manipulate_type(value);
  // @@protoc_insertion_point(field_set:clientmessage.MsgManipulatePet.manipulate_type)
}

// -------------------------------------------------------------------

// MsgPickItem

// int32 object_id = 1;
inline void MsgPickItem::clear_object_id() {
  _impl_.object_id_ = 0;
}
inline int32_t MsgPickItem::_internal_object_id() const {
  return _impl_.object_id_;
}
inline int32_t MsgPickItem::object_id() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgPickItem.object_id)
  return _internal_object_id();
}
inline void MsgPickItem::_internal_set_object_id(int32_t value) {
  
  _impl_.object_id_ = value;
}
inline void MsgPickItem::set_object_id(int32_t value) {
  _internal_set_object_id(value);
  // @@protoc_insertion_point(field_set:clientmessage.MsgPickItem.object_id)
}

// int32 map_id = 2;
inline void MsgPickItem::clear_map_id() {
  _impl_.map_id_ = 0;
}
inline int32_t MsgPickItem::_internal_map_id() const {
  return _impl_.map_id_;
}
inline int32_t MsgPickItem::map_id() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgPickItem.map_id)
  return _internal_map_id();
}
inline void MsgPickItem::_internal_set_map_id(int32_t value) {
  
  _impl_.map_id_ = value;
}
inline void MsgPickItem::set_map_id(int32_t value) {
  _internal_set_map_id(value);
  // @@protoc_insertion_point(field_set:clientmessage.MsgPickItem.map_id)
}

// int32 player_id = 3;
inline void MsgPickItem::clear_player_id() {
  _impl_.player_id_ = 0;
}
inline int32_t MsgPickItem::_internal_player_id() const {
  return _impl_.player_id_;
}
inline int32_t MsgPickItem::player_id() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgPickItem.player_id)
  return _internal_player_id();
}
inline void MsgPickItem::_internal_set_player_id(int32_t value) {
  
  _impl_.player_id_ = value;
}
inline void MsgPickItem::set_player_id(int32_t value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:clientmessage.MsgPickItem.player_id)
}

// -------------------------------------------------------------------

// MsgRequestBaseAttrib

// int32 target_id = 1;
inline void MsgRequestBaseAttrib::clear_target_id() {
  _impl_.target_id_ = 0;
}
inline int32_t MsgRequestBaseAttrib::_internal_target_id() const {
  return _impl_.target_id_;
}
inline int32_t MsgRequestBaseAttrib::target_id() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgRequestBaseAttrib.target_id)
  return _internal_target_id();
}
inline void MsgRequestBaseAttrib::_internal_set_target_id(int32_t value) {
  
  _impl_.target_id_ = value;
}
inline void MsgRequestBaseAttrib::set_target_id(int32_t value) {
  _internal_set_target_id(value);
  // @@protoc_insertion_point(field_set:clientmessage.MsgRequestBaseAttrib.target_id)
}

// int32 player_id = 2;
inline void MsgRequestBaseAttrib::clear_player_id() {
  _impl_.player_id_ = 0;
}
inline int32_t MsgRequestBaseAttrib::_internal_player_id() const {
  return _impl_.player_id_;
}
inline int32_t MsgRequestBaseAttrib::player_id() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgRequestBaseAttrib.player_id)
  return _internal_player_id();
}
inline void MsgRequestBaseAttrib::_internal_set_player_id(int32_t value) {
  
  _impl_.player_id_ = value;
}
inline void MsgRequestBaseAttrib::set_player_id(int32_t value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:clientmessage.MsgRequestBaseAttrib.player_id)
}

// int32 map_id = 3;
inline void MsgRequestBaseAttrib::clear_map_id() {
  _impl_.map_id_ = 0;
}
inline int32_t MsgRequestBaseAttrib::_internal_map_id() const {
  return _impl_.map_id_;
}
inline int32_t MsgRequestBaseAttrib::map_id() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgRequestBaseAttrib.map_id)
  return _internal_map_id();
}
inline void MsgRequestBaseAttrib::_internal_set_map_id(int32_t value) {
  
  _impl_.map_id_ = value;
}
inline void MsgRequestBaseAttrib::set_map_id(int32_t value) {
  _internal_set_map_id(value);
  // @@protoc_insertion_point(field_set:clientmessage.MsgRequestBaseAttrib.map_id)
}

// -------------------------------------------------------------------

// MsgQuestAbandon

// int32 player_id = 1;
inline void MsgQuestAbandon::clear_player_id() {
  _impl_.player_id_ = 0;
}
inline int32_t MsgQuestAbandon::_internal_player_id() const {
  return _impl_.player_id_;
}
inline int32_t MsgQuestAbandon::player_id() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgQuestAbandon.player_id)
  return _internal_player_id();
}
inline void MsgQuestAbandon::_internal_set_player_id(int32_t value) {
  
  _impl_.player_id_ = value;
}
inline void MsgQuestAbandon::set_player_id(int32_t value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:clientmessage.MsgQuestAbandon.player_id)
}

// int32 map_id = 2;
inline void MsgQuestAbandon::clear_map_id() {
  _impl_.map_id_ = 0;
}
inline int32_t MsgQuestAbandon::_internal_map_id() const {
  return _impl_.map_id_;
}
inline int32_t MsgQuestAbandon::map_id() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgQuestAbandon.map_id)
  return _internal_map_id();
}
inline void MsgQuestAbandon::_internal_set_map_id(int32_t value) {
  
  _impl_.map_id_ = value;
}
inline void MsgQuestAbandon::set_map_id(int32_t value) {
  _internal_set_map_id(value);
  // @@protoc_insertion_point(field_set:clientmessage.MsgQuestAbandon.map_id)
}

// int32 target_id = 3;
inline void MsgQuestAbandon::clear_target_id() {
  _impl_.target_id_ = 0;
}
inline int32_t MsgQuestAbandon::_internal_target_id() const {
  return _impl_.target_id_;
}
inline int32_t MsgQuestAbandon::target_id() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgQuestAbandon.target_id)
  return _internal_target_id();
}
inline void MsgQuestAbandon::_internal_set_target_id(int32_t value) {
  
  _impl_.target_id_ = value;
}
inline void MsgQuestAbandon::set_target_id(int32_t value) {
  _internal_set_target_id(value);
  // @@protoc_insertion_point(field_set:clientmessage.MsgQuestAbandon.target_id)
}

// int32 script_id = 4;
inline void MsgQuestAbandon::clear_script_id() {
  _impl_.script_id_ = 0;
}
inline int32_t MsgQuestAbandon::_internal_script_id() const {
  return _impl_.script_id_;
}
inline int32_t MsgQuestAbandon::script_id() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgQuestAbandon.script_id)
  return _internal_script_id();
}
inline void MsgQuestAbandon::_internal_set_script_id(int32_t value) {
  
  _impl_.script_id_ = value;
}
inline void MsgQuestAbandon::set_script_id(int32_t value) {
  _internal_set_script_id(value);
  // @@protoc_insertion_point(field_set:clientmessage.MsgQuestAbandon.script_id)
}

// -------------------------------------------------------------------

// MsgQuestAccept

// int32 player_id = 1;
inline void MsgQuestAccept::clear_player_id() {
  _impl_.player_id_ = 0;
}
inline int32_t MsgQuestAccept::_internal_player_id() const {
  return _impl_.player_id_;
}
inline int32_t MsgQuestAccept::player_id() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgQuestAccept.player_id)
  return _internal_player_id();
}
inline void MsgQuestAccept::_internal_set_player_id(int32_t value) {
  
  _impl_.player_id_ = value;
}
inline void MsgQuestAccept::set_player_id(int32_t value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:clientmessage.MsgQuestAccept.player_id)
}

// int32 map_id = 2;
inline void MsgQuestAccept::clear_map_id() {
  _impl_.map_id_ = 0;
}
inline int32_t MsgQuestAccept::_internal_map_id() const {
  return _impl_.map_id_;
}
inline int32_t MsgQuestAccept::map_id() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgQuestAccept.map_id)
  return _internal_map_id();
}
inline void MsgQuestAccept::_internal_set_map_id(int32_t value) {
  
  _impl_.map_id_ = value;
}
inline void MsgQuestAccept::set_map_id(int32_t value) {
  _internal_set_map_id(value);
  // @@protoc_insertion_point(field_set:clientmessage.MsgQuestAccept.map_id)
}

// int32 target_id = 3;
inline void MsgQuestAccept::clear_target_id() {
  _impl_.target_id_ = 0;
}
inline int32_t MsgQuestAccept::_internal_target_id() const {
  return _impl_.target_id_;
}
inline int32_t MsgQuestAccept::target_id() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgQuestAccept.target_id)
  return _internal_target_id();
}
inline void MsgQuestAccept::_internal_set_target_id(int32_t value) {
  
  _impl_.target_id_ = value;
}
inline void MsgQuestAccept::set_target_id(int32_t value) {
  _internal_set_target_id(value);
  // @@protoc_insertion_point(field_set:clientmessage.MsgQuestAccept.target_id)
}

// int32 script_id = 4;
inline void MsgQuestAccept::clear_script_id() {
  _impl_.script_id_ = 0;
}
inline int32_t MsgQuestAccept::_internal_script_id() const {
  return _impl_.script_id_;
}
inline int32_t MsgQuestAccept::script_id() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgQuestAccept.script_id)
  return _internal_script_id();
}
inline void MsgQuestAccept::_internal_set_script_id(int32_t value) {
  
  _impl_.script_id_ = value;
}
inline void MsgQuestAccept::set_script_id(int32_t value) {
  _internal_set_script_id(value);
  // @@protoc_insertion_point(field_set:clientmessage.MsgQuestAccept.script_id)
}

// -------------------------------------------------------------------

// MsgQuestContinue

// int32 player_id = 1;
inline void MsgQuestContinue::clear_player_id() {
  _impl_.player_id_ = 0;
}
inline int32_t MsgQuestContinue::_internal_player_id() const {
  return _impl_.player_id_;
}
inline int32_t MsgQuestContinue::player_id() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgQuestContinue.player_id)
  return _internal_player_id();
}
inline void MsgQuestContinue::_internal_set_player_id(int32_t value) {
  
  _impl_.player_id_ = value;
}
inline void MsgQuestContinue::set_player_id(int32_t value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:clientmessage.MsgQuestContinue.player_id)
}

// int32 map_id = 2;
inline void MsgQuestContinue::clear_map_id() {
  _impl_.map_id_ = 0;
}
inline int32_t MsgQuestContinue::_internal_map_id() const {
  return _impl_.map_id_;
}
inline int32_t MsgQuestContinue::map_id() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgQuestContinue.map_id)
  return _internal_map_id();
}
inline void MsgQuestContinue::_internal_set_map_id(int32_t value) {
  
  _impl_.map_id_ = value;
}
inline void MsgQuestContinue::set_map_id(int32_t value) {
  _internal_set_map_id(value);
  // @@protoc_insertion_point(field_set:clientmessage.MsgQuestContinue.map_id)
}

// int32 target_id = 3;
inline void MsgQuestContinue::clear_target_id() {
  _impl_.target_id_ = 0;
}
inline int32_t MsgQuestContinue::_internal_target_id() const {
  return _impl_.target_id_;
}
inline int32_t MsgQuestContinue::target_id() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgQuestContinue.target_id)
  return _internal_target_id();
}
inline void MsgQuestContinue::_internal_set_target_id(int32_t value) {
  
  _impl_.target_id_ = value;
}
inline void MsgQuestContinue::set_target_id(int32_t value) {
  _internal_set_target_id(value);
  // @@protoc_insertion_point(field_set:clientmessage.MsgQuestContinue.target_id)
}

// int32 script_id = 4;
inline void MsgQuestContinue::clear_script_id() {
  _impl_.script_id_ = 0;
}
inline int32_t MsgQuestContinue::_internal_script_id() const {
  return _impl_.script_id_;
}
inline int32_t MsgQuestContinue::script_id() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgQuestContinue.script_id)
  return _internal_script_id();
}
inline void MsgQuestContinue::_internal_set_script_id(int32_t value) {
  
  _impl_.script_id_ = value;
}
inline void MsgQuestContinue::set_script_id(int32_t value) {
  _internal_set_script_id(value);
  // @@protoc_insertion_point(field_set:clientmessage.MsgQuestContinue.script_id)
}

// -------------------------------------------------------------------

// MsgQuestRefuse

// int32 player_id = 1;
inline void MsgQuestRefuse::clear_player_id() {
  _impl_.player_id_ = 0;
}
inline int32_t MsgQuestRefuse::_internal_player_id() const {
  return _impl_.player_id_;
}
inline int32_t MsgQuestRefuse::player_id() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgQuestRefuse.player_id)
  return _internal_player_id();
}
inline void MsgQuestRefuse::_internal_set_player_id(int32_t value) {
  
  _impl_.player_id_ = value;
}
inline void MsgQuestRefuse::set_player_id(int32_t value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:clientmessage.MsgQuestRefuse.player_id)
}

// int32 map_id = 2;
inline void MsgQuestRefuse::clear_map_id() {
  _impl_.map_id_ = 0;
}
inline int32_t MsgQuestRefuse::_internal_map_id() const {
  return _impl_.map_id_;
}
inline int32_t MsgQuestRefuse::map_id() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgQuestRefuse.map_id)
  return _internal_map_id();
}
inline void MsgQuestRefuse::_internal_set_map_id(int32_t value) {
  
  _impl_.map_id_ = value;
}
inline void MsgQuestRefuse::set_map_id(int32_t value) {
  _internal_set_map_id(value);
  // @@protoc_insertion_point(field_set:clientmessage.MsgQuestRefuse.map_id)
}

// int32 target_id = 3;
inline void MsgQuestRefuse::clear_target_id() {
  _impl_.target_id_ = 0;
}
inline int32_t MsgQuestRefuse::_internal_target_id() const {
  return _impl_.target_id_;
}
inline int32_t MsgQuestRefuse::target_id() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgQuestRefuse.target_id)
  return _internal_target_id();
}
inline void MsgQuestRefuse::_internal_set_target_id(int32_t value) {
  
  _impl_.target_id_ = value;
}
inline void MsgQuestRefuse::set_target_id(int32_t value) {
  _internal_set_target_id(value);
  // @@protoc_insertion_point(field_set:clientmessage.MsgQuestRefuse.target_id)
}

// int32 script_id = 4;
inline void MsgQuestRefuse::clear_script_id() {
  _impl_.script_id_ = 0;
}
inline int32_t MsgQuestRefuse::_internal_script_id() const {
  return _impl_.script_id_;
}
inline int32_t MsgQuestRefuse::script_id() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgQuestRefuse.script_id)
  return _internal_script_id();
}
inline void MsgQuestRefuse::_internal_set_script_id(int32_t value) {
  
  _impl_.script_id_ = value;
}
inline void MsgQuestRefuse::set_script_id(int32_t value) {
  _internal_set_script_id(value);
  // @@protoc_insertion_point(field_set:clientmessage.MsgQuestRefuse.script_id)
}

// -------------------------------------------------------------------

// MsgQuestSubmit

// int32 player_id = 1;
inline void MsgQuestSubmit::clear_player_id() {
  _impl_.player_id_ = 0;
}
inline int32_t MsgQuestSubmit::_internal_player_id() const {
  return _impl_.player_id_;
}
inline int32_t MsgQuestSubmit::player_id() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgQuestSubmit.player_id)
  return _internal_player_id();
}
inline void MsgQuestSubmit::_internal_set_player_id(int32_t value) {
  
  _impl_.player_id_ = value;
}
inline void MsgQuestSubmit::set_player_id(int32_t value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:clientmessage.MsgQuestSubmit.player_id)
}

// int32 map_id = 2;
inline void MsgQuestSubmit::clear_map_id() {
  _impl_.map_id_ = 0;
}
inline int32_t MsgQuestSubmit::_internal_map_id() const {
  return _impl_.map_id_;
}
inline int32_t MsgQuestSubmit::map_id() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgQuestSubmit.map_id)
  return _internal_map_id();
}
inline void MsgQuestSubmit::_internal_set_map_id(int32_t value) {
  
  _impl_.map_id_ = value;
}
inline void MsgQuestSubmit::set_map_id(int32_t value) {
  _internal_set_map_id(value);
  // @@protoc_insertion_point(field_set:clientmessage.MsgQuestSubmit.map_id)
}

// int32 target_id = 3;
inline void MsgQuestSubmit::clear_target_id() {
  _impl_.target_id_ = 0;
}
inline int32_t MsgQuestSubmit::_internal_target_id() const {
  return _impl_.target_id_;
}
inline int32_t MsgQuestSubmit::target_id() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgQuestSubmit.target_id)
  return _internal_target_id();
}
inline void MsgQuestSubmit::_internal_set_target_id(int32_t value) {
  
  _impl_.target_id_ = value;
}
inline void MsgQuestSubmit::set_target_id(int32_t value) {
  _internal_set_target_id(value);
  // @@protoc_insertion_point(field_set:clientmessage.MsgQuestSubmit.target_id)
}

// int32 script_id = 4;
inline void MsgQuestSubmit::clear_script_id() {
  _impl_.script_id_ = 0;
}
inline int32_t MsgQuestSubmit::_internal_script_id() const {
  return _impl_.script_id_;
}
inline int32_t MsgQuestSubmit::script_id() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgQuestSubmit.script_id)
  return _internal_script_id();
}
inline void MsgQuestSubmit::_internal_set_script_id(int32_t value) {
  
  _impl_.script_id_ = value;
}
inline void MsgQuestSubmit::set_script_id(int32_t value) {
  _internal_set_script_id(value);
  // @@protoc_insertion_point(field_set:clientmessage.MsgQuestSubmit.script_id)
}

// int32 radio_id = 5;
inline void MsgQuestSubmit::clear_radio_id() {
  _impl_.radio_id_ = 0;
}
inline int32_t MsgQuestSubmit::_internal_radio_id() const {
  return _impl_.radio_id_;
}
inline int32_t MsgQuestSubmit::radio_id() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgQuestSubmit.radio_id)
  return _internal_radio_id();
}
inline void MsgQuestSubmit::_internal_set_radio_id(int32_t value) {
  
  _impl_.radio_id_ = value;
}
inline void MsgQuestSubmit::set_radio_id(int32_t value) {
  _internal_set_radio_id(value);
  // @@protoc_insertion_point(field_set:clientmessage.MsgQuestSubmit.radio_id)
}

// -------------------------------------------------------------------

// MsgSwapItem

// int32 player_id = 1;
inline void MsgSwapItem::clear_player_id() {
  _impl_.player_id_ = 0;
}
inline int32_t MsgSwapItem::_internal_player_id() const {
  return _impl_.player_id_;
}
inline int32_t MsgSwapItem::player_id() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgSwapItem.player_id)
  return _internal_player_id();
}
inline void MsgSwapItem::_internal_set_player_id(int32_t value) {
  
  _impl_.player_id_ = value;
}
inline void MsgSwapItem::set_player_id(int32_t value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:clientmessage.MsgSwapItem.player_id)
}

// int32 map_id = 2;
inline void MsgSwapItem::clear_map_id() {
  _impl_.map_id_ = 0;
}
inline int32_t MsgSwapItem::_internal_map_id() const {
  return _impl_.map_id_;
}
inline int32_t MsgSwapItem::map_id() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgSwapItem.map_id)
  return _internal_map_id();
}
inline void MsgSwapItem::_internal_set_map_id(int32_t value) {
  
  _impl_.map_id_ = value;
}
inline void MsgSwapItem::set_map_id(int32_t value) {
  _internal_set_map_id(value);
  // @@protoc_insertion_point(field_set:clientmessage.MsgSwapItem.map_id)
}

// int32 object_id = 3;
inline void MsgSwapItem::clear_object_id() {
  _impl_.object_id_ = 0;
}
inline int32_t MsgSwapItem::_internal_object_id() const {
  return _impl_.object_id_;
}
inline int32_t MsgSwapItem::object_id() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgSwapItem.object_id)
  return _internal_object_id();
}
inline void MsgSwapItem::_internal_set_object_id(int32_t value) {
  
  _impl_.object_id_ = value;
}
inline void MsgSwapItem::set_object_id(int32_t value) {
  _internal_set_object_id(value);
  // @@protoc_insertion_point(field_set:clientmessage.MsgSwapItem.object_id)
}

// int32 source_pos = 4;
inline void MsgSwapItem::clear_source_pos() {
  _impl_.source_pos_ = 0;
}
inline int32_t MsgSwapItem::_internal_source_pos() const {
  return _impl_.source_pos_;
}
inline int32_t MsgSwapItem::source_pos() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgSwapItem.source_pos)
  return _internal_source_pos();
}
inline void MsgSwapItem::_internal_set_source_pos(int32_t value) {
  
  _impl_.source_pos_ = value;
}
inline void MsgSwapItem::set_source_pos(int32_t value) {
  _internal_set_source_pos(value);
  // @@protoc_insertion_point(field_set:clientmessage.MsgSwapItem.source_pos)
}

// int32 dest_pos = 5;
inline void MsgSwapItem::clear_dest_pos() {
  _impl_.dest_pos_ = 0;
}
inline int32_t MsgSwapItem::_internal_dest_pos() const {
  return _impl_.dest_pos_;
}
inline int32_t MsgSwapItem::dest_pos() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgSwapItem.dest_pos)
  return _internal_dest_pos();
}
inline void MsgSwapItem::_internal_set_dest_pos(int32_t value) {
  
  _impl_.dest_pos_ = value;
}
inline void MsgSwapItem::set_dest_pos(int32_t value) {
  _internal_set_dest_pos(value);
  // @@protoc_insertion_point(field_set:clientmessage.MsgSwapItem.dest_pos)
}

// -------------------------------------------------------------------

// MsgTick

// int32 object_id = 1;
inline void MsgTick::clear_object_id() {
  _impl_.object_id_ = 0;
}
inline int32_t MsgTick::_internal_object_id() const {
  return _impl_.object_id_;
}
inline int32_t MsgTick::object_id() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgTick.object_id)
  return _internal_object_id();
}
inline void MsgTick::_internal_set_object_id(int32_t value) {
  
  _impl_.object_id_ = value;
}
inline void MsgTick::set_object_id(int32_t value) {
  _internal_set_object_id(value);
  // @@protoc_insertion_point(field_set:clientmessage.MsgTick.object_id)
}

// int32 map_id = 2;
inline void MsgTick::clear_map_id() {
  _impl_.map_id_ = 0;
}
inline int32_t MsgTick::_internal_map_id() const {
  return _impl_.map_id_;
}
inline int32_t MsgTick::map_id() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgTick.map_id)
  return _internal_map_id();
}
inline void MsgTick::_internal_set_map_id(int32_t value) {
  
  _impl_.map_id_ = value;
}
inline void MsgTick::set_map_id(int32_t value) {
  _internal_set_map_id(value);
  // @@protoc_insertion_point(field_set:clientmessage.MsgTick.map_id)
}

// float position_x = 3;
inline void MsgTick::clear_position_x() {
  _impl_.position_x_ = 0;
}
inline float MsgTick::_internal_position_x() const {
  return _impl_.position_x_;
}
inline float MsgTick::position_x() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgTick.position_x)
  return _internal_position_x();
}
inline void MsgTick::_internal_set_position_x(float value) {
  
  _impl_.position_x_ = value;
}
inline void MsgTick::set_position_x(float value) {
  _internal_set_position_x(value);
  // @@protoc_insertion_point(field_set:clientmessage.MsgTick.position_x)
}

// float position_z = 4;
inline void MsgTick::clear_position_z() {
  _impl_.position_z_ = 0;
}
inline float MsgTick::_internal_position_z() const {
  return _impl_.position_z_;
}
inline float MsgTick::position_z() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgTick.position_z)
  return _internal_position_z();
}
inline void MsgTick::_internal_set_position_z(float value) {
  
  _impl_.position_z_ = value;
}
inline void MsgTick::set_position_z(float value) {
  _internal_set_position_z(value);
  // @@protoc_insertion_point(field_set:clientmessage.MsgTick.position_z)
}

// int32 player_id = 5;
inline void MsgTick::clear_player_id() {
  _impl_.player_id_ = 0;
}
inline int32_t MsgTick::_internal_player_id() const {
  return _impl_.player_id_;
}
inline int32_t MsgTick::player_id() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgTick.player_id)
  return _internal_player_id();
}
inline void MsgTick::_internal_set_player_id(int32_t value) {
  
  _impl_.player_id_ = value;
}
inline void MsgTick::set_player_id(int32_t value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:clientmessage.MsgTick.player_id)
}

// float player_pos_x = 6;
inline void MsgTick::clear_player_pos_x() {
  _impl_.player_pos_x_ = 0;
}
inline float MsgTick::_internal_player_pos_x() const {
  return _impl_.player_pos_x_;
}
inline float MsgTick::player_pos_x() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgTick.player_pos_x)
  return _internal_player_pos_x();
}
inline void MsgTick::_internal_set_player_pos_x(float value) {
  
  _impl_.player_pos_x_ = value;
}
inline void MsgTick::set_player_pos_x(float value) {
  _internal_set_player_pos_x(value);
  // @@protoc_insertion_point(field_set:clientmessage.MsgTick.player_pos_x)
}

// float player_pos_y = 7;
inline void MsgTick::clear_player_pos_y() {
  _impl_.player_pos_y_ = 0;
}
inline float MsgTick::_internal_player_pos_y() const {
  return _impl_.player_pos_y_;
}
inline float MsgTick::player_pos_y() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgTick.player_pos_y)
  return _internal_player_pos_y();
}
inline void MsgTick::_internal_set_player_pos_y(float value) {
  
  _impl_.player_pos_y_ = value;
}
inline void MsgTick::set_player_pos_y(float value) {
  _internal_set_player_pos_y(value);
  // @@protoc_insertion_point(field_set:clientmessage.MsgTick.player_pos_y)
}

// -------------------------------------------------------------------

// MsgTakeDownEquip

// int32 player_id = 1;
inline void MsgTakeDownEquip::clear_player_id() {
  _impl_.player_id_ = 0;
}
inline int32_t MsgTakeDownEquip::_internal_player_id() const {
  return _impl_.player_id_;
}
inline int32_t MsgTakeDownEquip::player_id() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgTakeDownEquip.player_id)
  return _internal_player_id();
}
inline void MsgTakeDownEquip::_internal_set_player_id(int32_t value) {
  
  _impl_.player_id_ = value;
}
inline void MsgTakeDownEquip::set_player_id(int32_t value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:clientmessage.MsgTakeDownEquip.player_id)
}

// int32 map_id = 2;
inline void MsgTakeDownEquip::clear_map_id() {
  _impl_.map_id_ = 0;
}
inline int32_t MsgTakeDownEquip::_internal_map_id() const {
  return _impl_.map_id_;
}
inline int32_t MsgTakeDownEquip::map_id() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgTakeDownEquip.map_id)
  return _internal_map_id();
}
inline void MsgTakeDownEquip::_internal_set_map_id(int32_t value) {
  
  _impl_.map_id_ = value;
}
inline void MsgTakeDownEquip::set_map_id(int32_t value) {
  _internal_set_map_id(value);
  // @@protoc_insertion_point(field_set:clientmessage.MsgTakeDownEquip.map_id)
}

// int32 equip_point = 3;
inline void MsgTakeDownEquip::clear_equip_point() {
  _impl_.equip_point_ = 0;
}
inline int32_t MsgTakeDownEquip::_internal_equip_point() const {
  return _impl_.equip_point_;
}
inline int32_t MsgTakeDownEquip::equip_point() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgTakeDownEquip.equip_point)
  return _internal_equip_point();
}
inline void MsgTakeDownEquip::_internal_set_equip_point(int32_t value) {
  
  _impl_.equip_point_ = value;
}
inline void MsgTakeDownEquip::set_equip_point(int32_t value) {
  _internal_set_equip_point(value);
  // @@protoc_insertion_point(field_set:clientmessage.MsgTakeDownEquip.equip_point)
}

// int32 bag_index = 4;
inline void MsgTakeDownEquip::clear_bag_index() {
  _impl_.bag_index_ = 0;
}
inline int32_t MsgTakeDownEquip::_internal_bag_index() const {
  return _impl_.bag_index_;
}
inline int32_t MsgTakeDownEquip::bag_index() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgTakeDownEquip.bag_index)
  return _internal_bag_index();
}
inline void MsgTakeDownEquip::_internal_set_bag_index(int32_t value) {
  
  _impl_.bag_index_ = value;
}
inline void MsgTakeDownEquip::set_bag_index(int32_t value) {
  _internal_set_bag_index(value);
  // @@protoc_insertion_point(field_set:clientmessage.MsgTakeDownEquip.bag_index)
}

// -------------------------------------------------------------------

// MsgUseAbility

// int32 player_id = 1;
inline void MsgUseAbility::clear_player_id() {
  _impl_.player_id_ = 0;
}
inline int32_t MsgUseAbility::_internal_player_id() const {
  return _impl_.player_id_;
}
inline int32_t MsgUseAbility::player_id() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgUseAbility.player_id)
  return _internal_player_id();
}
inline void MsgUseAbility::_internal_set_player_id(int32_t value) {
  
  _impl_.player_id_ = value;
}
inline void MsgUseAbility::set_player_id(int32_t value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:clientmessage.MsgUseAbility.player_id)
}

// int32 map_id = 2;
inline void MsgUseAbility::clear_map_id() {
  _impl_.map_id_ = 0;
}
inline int32_t MsgUseAbility::_internal_map_id() const {
  return _impl_.map_id_;
}
inline int32_t MsgUseAbility::map_id() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgUseAbility.map_id)
  return _internal_map_id();
}
inline void MsgUseAbility::_internal_set_map_id(int32_t value) {
  
  _impl_.map_id_ = value;
}
inline void MsgUseAbility::set_map_id(int32_t value) {
  _internal_set_map_id(value);
  // @@protoc_insertion_point(field_set:clientmessage.MsgUseAbility.map_id)
}

// int32 ability_id = 3;
inline void MsgUseAbility::clear_ability_id() {
  _impl_.ability_id_ = 0;
}
inline int32_t MsgUseAbility::_internal_ability_id() const {
  return _impl_.ability_id_;
}
inline int32_t MsgUseAbility::ability_id() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgUseAbility.ability_id)
  return _internal_ability_id();
}
inline void MsgUseAbility::_internal_set_ability_id(int32_t value) {
  
  _impl_.ability_id_ = value;
}
inline void MsgUseAbility::set_ability_id(int32_t value) {
  _internal_set_ability_id(value);
  // @@protoc_insertion_point(field_set:clientmessage.MsgUseAbility.ability_id)
}

// int32 object_guid = 4;
inline void MsgUseAbility::clear_object_guid() {
  _impl_.object_guid_ = 0;
}
inline int32_t MsgUseAbility::_internal_object_guid() const {
  return _impl_.object_guid_;
}
inline int32_t MsgUseAbility::object_guid() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgUseAbility.object_guid)
  return _internal_object_guid();
}
inline void MsgUseAbility::_internal_set_object_guid(int32_t value) {
  
  _impl_.object_guid_ = value;
}
inline void MsgUseAbility::set_object_guid(int32_t value) {
  _internal_set_object_guid(value);
  // @@protoc_insertion_point(field_set:clientmessage.MsgUseAbility.object_guid)
}

// int32 prescription_id = 5;
inline void MsgUseAbility::clear_prescription_id() {
  _impl_.prescription_id_ = 0;
}
inline int32_t MsgUseAbility::_internal_prescription_id() const {
  return _impl_.prescription_id_;
}
inline int32_t MsgUseAbility::prescription_id() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgUseAbility.prescription_id)
  return _internal_prescription_id();
}
inline void MsgUseAbility::_internal_set_prescription_id(int32_t value) {
  
  _impl_.prescription_id_ = value;
}
inline void MsgUseAbility::set_prescription_id(int32_t value) {
  _internal_set_prescription_id(value);
  // @@protoc_insertion_point(field_set:clientmessage.MsgUseAbility.prescription_id)
}

// -------------------------------------------------------------------

// MsgUseEquip

// int32 player_id = 1;
inline void MsgUseEquip::clear_player_id() {
  _impl_.player_id_ = 0;
}
inline int32_t MsgUseEquip::_internal_player_id() const {
  return _impl_.player_id_;
}
inline int32_t MsgUseEquip::player_id() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgUseEquip.player_id)
  return _internal_player_id();
}
inline void MsgUseEquip::_internal_set_player_id(int32_t value) {
  
  _impl_.player_id_ = value;
}
inline void MsgUseEquip::set_player_id(int32_t value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:clientmessage.MsgUseEquip.player_id)
}

// int32 map_id = 2;
inline void MsgUseEquip::clear_map_id() {
  _impl_.map_id_ = 0;
}
inline int32_t MsgUseEquip::_internal_map_id() const {
  return _impl_.map_id_;
}
inline int32_t MsgUseEquip::map_id() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgUseEquip.map_id)
  return _internal_map_id();
}
inline void MsgUseEquip::_internal_set_map_id(int32_t value) {
  
  _impl_.map_id_ = value;
}
inline void MsgUseEquip::set_map_id(int32_t value) {
  _internal_set_map_id(value);
  // @@protoc_insertion_point(field_set:clientmessage.MsgUseEquip.map_id)
}

// int32 equip_point = 3;
inline void MsgUseEquip::clear_equip_point() {
  _impl_.equip_point_ = 0;
}
inline int32_t MsgUseEquip::_internal_equip_point() const {
  return _impl_.equip_point_;
}
inline int32_t MsgUseEquip::equip_point() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgUseEquip.equip_point)
  return _internal_equip_point();
}
inline void MsgUseEquip::_internal_set_equip_point(int32_t value) {
  
  _impl_.equip_point_ = value;
}
inline void MsgUseEquip::set_equip_point(int32_t value) {
  _internal_set_equip_point(value);
  // @@protoc_insertion_point(field_set:clientmessage.MsgUseEquip.equip_point)
}

// int32 bag_index = 4;
inline void MsgUseEquip::clear_bag_index() {
  _impl_.bag_index_ = 0;
}
inline int32_t MsgUseEquip::_internal_bag_index() const {
  return _impl_.bag_index_;
}
inline int32_t MsgUseEquip::bag_index() const {
  // @@protoc_insertion_point(field_get:clientmessage.MsgUseEquip.bag_index)
  return _internal_bag_index();
}
inline void MsgUseEquip::_internal_set_bag_index(int32_t value) {
  
  _impl_.bag_index_ = value;
}
inline void MsgUseEquip::set_bag_index(int32_t value) {
  _internal_set_bag_index(value);
  // @@protoc_insertion_point(field_set:clientmessage.MsgUseEquip.bag_index)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace clientmessage

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::clientmessage::MessageID> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::clientmessage::MessageID>() {
  return ::clientmessage::MessageID_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_client_5fmessage_2eproto
