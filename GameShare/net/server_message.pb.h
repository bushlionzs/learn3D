// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: server_message.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_server_5fmessage_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_server_5fmessage_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021012 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "base.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_server_5fmessage_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_server_5fmessage_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_server_5fmessage_2eproto;
namespace servermessage {
class ServerHumanBaseAttrib;
struct ServerHumanBaseAttribDefaultTypeInternal;
extern ServerHumanBaseAttribDefaultTypeInternal _ServerHumanBaseAttrib_default_instance_;
class ServerMsgAbilityAction;
struct ServerMsgAbilityActionDefaultTypeInternal;
extern ServerMsgAbilityActionDefaultTypeInternal _ServerMsgAbilityAction_default_instance_;
class ServerMsgAbilityResult;
struct ServerMsgAbilityResultDefaultTypeInternal;
extern ServerMsgAbilityResultDefaultTypeInternal _ServerMsgAbilityResult_default_instance_;
class ServerMsgAbilitySuccess;
struct ServerMsgAbilitySuccessDefaultTypeInternal;
extern ServerMsgAbilitySuccessDefaultTypeInternal _ServerMsgAbilitySuccess_default_instance_;
class ServerMsgAddQuest;
struct ServerMsgAddQuestDefaultTypeInternal;
extern ServerMsgAddQuestDefaultTypeInternal _ServerMsgAddQuest_default_instance_;
class ServerMsgAddSkillToSkillList;
struct ServerMsgAddSkillToSkillListDefaultTypeInternal;
extern ServerMsgAddSkillToSkillListDefaultTypeInternal _ServerMsgAddSkillToSkillList_default_instance_;
class ServerMsgCharEquipment;
struct ServerMsgCharEquipmentDefaultTypeInternal;
extern ServerMsgCharEquipmentDefaultTypeInternal _ServerMsgCharEquipment_default_instance_;
class ServerMsgCharImpactListUpdate;
struct ServerMsgCharImpactListUpdateDefaultTypeInternal;
extern ServerMsgCharImpactListUpdateDefaultTypeInternal _ServerMsgCharImpactListUpdate_default_instance_;
class ServerMsgCharMove;
struct ServerMsgCharMoveDefaultTypeInternal;
extern ServerMsgCharMoveDefaultTypeInternal _ServerMsgCharMove_default_instance_;
class ServerMsgCharSkillGather;
struct ServerMsgCharSkillGatherDefaultTypeInternal;
extern ServerMsgCharSkillGatherDefaultTypeInternal _ServerMsgCharSkillGather_default_instance_;
class ServerMsgCharStopAction;
struct ServerMsgCharStopActionDefaultTypeInternal;
extern ServerMsgCharStopActionDefaultTypeInternal _ServerMsgCharStopAction_default_instance_;
class ServerMsgChat;
struct ServerMsgChatDefaultTypeInternal;
extern ServerMsgChatDefaultTypeInternal _ServerMsgChat_default_instance_;
class ServerMsgCommand;
struct ServerMsgCommandDefaultTypeInternal;
extern ServerMsgCommandDefaultTypeInternal _ServerMsgCommand_default_instance_;
class ServerMsgCooldownUpdate;
struct ServerMsgCooldownUpdateDefaultTypeInternal;
extern ServerMsgCooldownUpdateDefaultTypeInternal _ServerMsgCooldownUpdate_default_instance_;
class ServerMsgDelObject;
struct ServerMsgDelObjectDefaultTypeInternal;
extern ServerMsgDelObjectDefaultTypeInternal _ServerMsgDelObject_default_instance_;
class ServerMsgDelQuest;
struct ServerMsgDelQuestDefaultTypeInternal;
extern ServerMsgDelQuestDefaultTypeInternal _ServerMsgDelQuest_default_instance_;
class ServerMsgDeltailOfHealsAndDamage;
struct ServerMsgDeltailOfHealsAndDamageDefaultTypeInternal;
extern ServerMsgDeltailOfHealsAndDamageDefaultTypeInternal _ServerMsgDeltailOfHealsAndDamage_default_instance_;
class ServerMsgDetailAbilityInfo;
struct ServerMsgDetailAbilityInfoDefaultTypeInternal;
extern ServerMsgDetailAbilityInfoDefaultTypeInternal _ServerMsgDetailAbilityInfo_default_instance_;
class ServerMsgDetailAttrib;
struct ServerMsgDetailAttribDefaultTypeInternal;
extern ServerMsgDetailAttribDefaultTypeInternal _ServerMsgDetailAttrib_default_instance_;
class ServerMsgDetailAttribPet;
struct ServerMsgDetailAttribPetDefaultTypeInternal;
extern ServerMsgDetailAttribPetDefaultTypeInternal _ServerMsgDetailAttribPet_default_instance_;
class ServerMsgDetailBuff;
struct ServerMsgDetailBuffDefaultTypeInternal;
extern ServerMsgDetailBuffDefaultTypeInternal _ServerMsgDetailBuff_default_instance_;
class ServerMsgDetailDetailItemList;
struct ServerMsgDetailDetailItemListDefaultTypeInternal;
extern ServerMsgDetailDetailItemListDefaultTypeInternal _ServerMsgDetailDetailItemList_default_instance_;
class ServerMsgDetailEquipList;
struct ServerMsgDetailEquipListDefaultTypeInternal;
extern ServerMsgDetailEquipListDefaultTypeInternal _ServerMsgDetailEquipList_default_instance_;
class ServerMsgDetailSkillList;
struct ServerMsgDetailSkillListDefaultTypeInternal;
extern ServerMsgDetailSkillListDefaultTypeInternal _ServerMsgDetailSkillList_default_instance_;
class ServerMsgEnterMap;
struct ServerMsgEnterMapDefaultTypeInternal;
extern ServerMsgEnterMapDefaultTypeInternal _ServerMsgEnterMap_default_instance_;
class ServerMsgItemInfo;
struct ServerMsgItemInfoDefaultTypeInternal;
extern ServerMsgItemInfoDefaultTypeInternal _ServerMsgItemInfo_default_instance_;
class ServerMsgManipulatePetResult;
struct ServerMsgManipulatePetResultDefaultTypeInternal;
extern ServerMsgManipulatePetResultDefaultTypeInternal _ServerMsgManipulatePetResult_default_instance_;
class ServerMsgModifyQuest;
struct ServerMsgModifyQuestDefaultTypeInternal;
extern ServerMsgModifyQuestDefaultTypeInternal _ServerMsgModifyQuest_default_instance_;
class ServerMsgMonsterAttribute;
struct ServerMsgMonsterAttributeDefaultTypeInternal;
extern ServerMsgMonsterAttributeDefaultTypeInternal _ServerMsgMonsterAttribute_default_instance_;
class ServerMsgNewBeastie;
struct ServerMsgNewBeastieDefaultTypeInternal;
extern ServerMsgNewBeastieDefaultTypeInternal _ServerMsgNewBeastie_default_instance_;
class ServerMsgNewItem;
struct ServerMsgNewItemDefaultTypeInternal;
extern ServerMsgNewItemDefaultTypeInternal _ServerMsgNewItem_default_instance_;
class ServerMsgNewItemBox;
struct ServerMsgNewItemBoxDefaultTypeInternal;
extern ServerMsgNewItemBoxDefaultTypeInternal _ServerMsgNewItemBox_default_instance_;
class ServerMsgNewMonster;
struct ServerMsgNewMonsterDefaultTypeInternal;
extern ServerMsgNewMonsterDefaultTypeInternal _ServerMsgNewMonster_default_instance_;
class ServerMsgNotifyEquip;
struct ServerMsgNotifyEquipDefaultTypeInternal;
extern ServerMsgNotifyEquipDefaultTypeInternal _ServerMsgNotifyEquip_default_instance_;
class ServerMsgOperateResult;
struct ServerMsgOperateResultDefaultTypeInternal;
extern ServerMsgOperateResultDefaultTypeInternal _ServerMsgOperateResult_default_instance_;
class ServerMsgPickItemResult;
struct ServerMsgPickItemResultDefaultTypeInternal;
extern ServerMsgPickItemResultDefaultTypeInternal _ServerMsgPickItemResult_default_instance_;
class ServerMsgQueryEventResult;
struct ServerMsgQueryEventResultDefaultTypeInternal;
extern ServerMsgQueryEventResultDefaultTypeInternal _ServerMsgQueryEventResult_default_instance_;
class ServerMsgQuestList;
struct ServerMsgQuestListDefaultTypeInternal;
extern ServerMsgQuestListDefaultTypeInternal _ServerMsgQuestList_default_instance_;
class ServerMsgQuestListRefresh;
struct ServerMsgQuestListRefreshDefaultTypeInternal;
extern ServerMsgQuestListRefreshDefaultTypeInternal _ServerMsgQuestListRefresh_default_instance_;
class ServerMsgScriptCommand;
struct ServerMsgScriptCommandDefaultTypeInternal;
extern ServerMsgScriptCommandDefaultTypeInternal _ServerMsgScriptCommand_default_instance_;
class ServerMsgSkillSettingResult;
struct ServerMsgSkillSettingResultDefaultTypeInternal;
extern ServerMsgSkillSettingResultDefaultTypeInternal _ServerMsgSkillSettingResult_default_instance_;
class ServerMsgSkillUpgrade;
struct ServerMsgSkillUpgradeDefaultTypeInternal;
extern ServerMsgSkillUpgradeDefaultTypeInternal _ServerMsgSkillUpgrade_default_instance_;
class ServerMsgSwapItem;
struct ServerMsgSwapItemDefaultTypeInternal;
extern ServerMsgSwapItemDefaultTypeInternal _ServerMsgSwapItem_default_instance_;
class ServerMsgTargetListAndHitFlags;
struct ServerMsgTargetListAndHitFlagsDefaultTypeInternal;
extern ServerMsgTargetListAndHitFlagsDefaultTypeInternal _ServerMsgTargetListAndHitFlags_default_instance_;
class ServerMsgTaskDownEquipResult;
struct ServerMsgTaskDownEquipResultDefaultTypeInternal;
extern ServerMsgTaskDownEquipResultDefaultTypeInternal _ServerMsgTaskDownEquipResult_default_instance_;
class ServerMsgUseEquipResult;
struct ServerMsgUseEquipResultDefaultTypeInternal;
extern ServerMsgUseEquipResultDefaultTypeInternal _ServerMsgUseEquipResult_default_instance_;
}  // namespace servermessage
PROTOBUF_NAMESPACE_OPEN
template<> ::servermessage::ServerHumanBaseAttrib* Arena::CreateMaybeMessage<::servermessage::ServerHumanBaseAttrib>(Arena*);
template<> ::servermessage::ServerMsgAbilityAction* Arena::CreateMaybeMessage<::servermessage::ServerMsgAbilityAction>(Arena*);
template<> ::servermessage::ServerMsgAbilityResult* Arena::CreateMaybeMessage<::servermessage::ServerMsgAbilityResult>(Arena*);
template<> ::servermessage::ServerMsgAbilitySuccess* Arena::CreateMaybeMessage<::servermessage::ServerMsgAbilitySuccess>(Arena*);
template<> ::servermessage::ServerMsgAddQuest* Arena::CreateMaybeMessage<::servermessage::ServerMsgAddQuest>(Arena*);
template<> ::servermessage::ServerMsgAddSkillToSkillList* Arena::CreateMaybeMessage<::servermessage::ServerMsgAddSkillToSkillList>(Arena*);
template<> ::servermessage::ServerMsgCharEquipment* Arena::CreateMaybeMessage<::servermessage::ServerMsgCharEquipment>(Arena*);
template<> ::servermessage::ServerMsgCharImpactListUpdate* Arena::CreateMaybeMessage<::servermessage::ServerMsgCharImpactListUpdate>(Arena*);
template<> ::servermessage::ServerMsgCharMove* Arena::CreateMaybeMessage<::servermessage::ServerMsgCharMove>(Arena*);
template<> ::servermessage::ServerMsgCharSkillGather* Arena::CreateMaybeMessage<::servermessage::ServerMsgCharSkillGather>(Arena*);
template<> ::servermessage::ServerMsgCharStopAction* Arena::CreateMaybeMessage<::servermessage::ServerMsgCharStopAction>(Arena*);
template<> ::servermessage::ServerMsgChat* Arena::CreateMaybeMessage<::servermessage::ServerMsgChat>(Arena*);
template<> ::servermessage::ServerMsgCommand* Arena::CreateMaybeMessage<::servermessage::ServerMsgCommand>(Arena*);
template<> ::servermessage::ServerMsgCooldownUpdate* Arena::CreateMaybeMessage<::servermessage::ServerMsgCooldownUpdate>(Arena*);
template<> ::servermessage::ServerMsgDelObject* Arena::CreateMaybeMessage<::servermessage::ServerMsgDelObject>(Arena*);
template<> ::servermessage::ServerMsgDelQuest* Arena::CreateMaybeMessage<::servermessage::ServerMsgDelQuest>(Arena*);
template<> ::servermessage::ServerMsgDeltailOfHealsAndDamage* Arena::CreateMaybeMessage<::servermessage::ServerMsgDeltailOfHealsAndDamage>(Arena*);
template<> ::servermessage::ServerMsgDetailAbilityInfo* Arena::CreateMaybeMessage<::servermessage::ServerMsgDetailAbilityInfo>(Arena*);
template<> ::servermessage::ServerMsgDetailAttrib* Arena::CreateMaybeMessage<::servermessage::ServerMsgDetailAttrib>(Arena*);
template<> ::servermessage::ServerMsgDetailAttribPet* Arena::CreateMaybeMessage<::servermessage::ServerMsgDetailAttribPet>(Arena*);
template<> ::servermessage::ServerMsgDetailBuff* Arena::CreateMaybeMessage<::servermessage::ServerMsgDetailBuff>(Arena*);
template<> ::servermessage::ServerMsgDetailDetailItemList* Arena::CreateMaybeMessage<::servermessage::ServerMsgDetailDetailItemList>(Arena*);
template<> ::servermessage::ServerMsgDetailEquipList* Arena::CreateMaybeMessage<::servermessage::ServerMsgDetailEquipList>(Arena*);
template<> ::servermessage::ServerMsgDetailSkillList* Arena::CreateMaybeMessage<::servermessage::ServerMsgDetailSkillList>(Arena*);
template<> ::servermessage::ServerMsgEnterMap* Arena::CreateMaybeMessage<::servermessage::ServerMsgEnterMap>(Arena*);
template<> ::servermessage::ServerMsgItemInfo* Arena::CreateMaybeMessage<::servermessage::ServerMsgItemInfo>(Arena*);
template<> ::servermessage::ServerMsgManipulatePetResult* Arena::CreateMaybeMessage<::servermessage::ServerMsgManipulatePetResult>(Arena*);
template<> ::servermessage::ServerMsgModifyQuest* Arena::CreateMaybeMessage<::servermessage::ServerMsgModifyQuest>(Arena*);
template<> ::servermessage::ServerMsgMonsterAttribute* Arena::CreateMaybeMessage<::servermessage::ServerMsgMonsterAttribute>(Arena*);
template<> ::servermessage::ServerMsgNewBeastie* Arena::CreateMaybeMessage<::servermessage::ServerMsgNewBeastie>(Arena*);
template<> ::servermessage::ServerMsgNewItem* Arena::CreateMaybeMessage<::servermessage::ServerMsgNewItem>(Arena*);
template<> ::servermessage::ServerMsgNewItemBox* Arena::CreateMaybeMessage<::servermessage::ServerMsgNewItemBox>(Arena*);
template<> ::servermessage::ServerMsgNewMonster* Arena::CreateMaybeMessage<::servermessage::ServerMsgNewMonster>(Arena*);
template<> ::servermessage::ServerMsgNotifyEquip* Arena::CreateMaybeMessage<::servermessage::ServerMsgNotifyEquip>(Arena*);
template<> ::servermessage::ServerMsgOperateResult* Arena::CreateMaybeMessage<::servermessage::ServerMsgOperateResult>(Arena*);
template<> ::servermessage::ServerMsgPickItemResult* Arena::CreateMaybeMessage<::servermessage::ServerMsgPickItemResult>(Arena*);
template<> ::servermessage::ServerMsgQueryEventResult* Arena::CreateMaybeMessage<::servermessage::ServerMsgQueryEventResult>(Arena*);
template<> ::servermessage::ServerMsgQuestList* Arena::CreateMaybeMessage<::servermessage::ServerMsgQuestList>(Arena*);
template<> ::servermessage::ServerMsgQuestListRefresh* Arena::CreateMaybeMessage<::servermessage::ServerMsgQuestListRefresh>(Arena*);
template<> ::servermessage::ServerMsgScriptCommand* Arena::CreateMaybeMessage<::servermessage::ServerMsgScriptCommand>(Arena*);
template<> ::servermessage::ServerMsgSkillSettingResult* Arena::CreateMaybeMessage<::servermessage::ServerMsgSkillSettingResult>(Arena*);
template<> ::servermessage::ServerMsgSkillUpgrade* Arena::CreateMaybeMessage<::servermessage::ServerMsgSkillUpgrade>(Arena*);
template<> ::servermessage::ServerMsgSwapItem* Arena::CreateMaybeMessage<::servermessage::ServerMsgSwapItem>(Arena*);
template<> ::servermessage::ServerMsgTargetListAndHitFlags* Arena::CreateMaybeMessage<::servermessage::ServerMsgTargetListAndHitFlags>(Arena*);
template<> ::servermessage::ServerMsgTaskDownEquipResult* Arena::CreateMaybeMessage<::servermessage::ServerMsgTaskDownEquipResult>(Arena*);
template<> ::servermessage::ServerMsgUseEquipResult* Arena::CreateMaybeMessage<::servermessage::ServerMsgUseEquipResult>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace servermessage {

enum MessageID : int {
  SC_MSG_NONE = 0,
  DS_CHAR_DATA = 5000,
  SC_ENTER_MAP = 10000,
  SC_QUERY_EVENT_RESULT = 11000,
  SC_QUERY_QUEST_RESULT = 11001,
  SC_NEWMONSTER = 11002,
  SC_CHARACTER_MOVE = 11003,
  SC_TARGETLIST_HITFLAGS = 11004,
  SC_DETAIL_HEALS_DAMAGE = 11005,
  SC_DELETE_OBJECT = 11006,
  SC_MONSTER_ATTRBUTE = 11007,
  SC_NEWITEM = 11008,
  SC_EQUIP_LIST = 11009,
  SC_PICK_ITEM_RESULT = 11010,
  SC_ITEM_INFO = 11011,
  SC_NOTIFY_EQUIP = 11012,
  SC_SWAP_ITEM = 11013,
  SC_UNEQUIP_RESULT = 11014,
  SC_USEEQUIP_RESULT = 11015,
  SC_QUEST_LIST = 11016,
  SC_ADD_QUEST = 11017,
  SC_DEL_QUEST = 11018,
  SC_COMMAND = 11019,
  SC_SCRIPT_COMMAND = 11020,
  SC_CHAT = 11021,
  SC_MANIPULATE_PET_RESULT = 11022,
  SC_NEW_BEASTIE = 11023,
  SC_COOLDOWN_UPDATE = 11024,
  SC_DETAIL_ATTRIB_PET = 11025,
  SC_IMPACTLIST_UPDATE = 11026,
  SC_CHAR_EQUIPMENT = 11027,
  SC_QUESTLIST_REFRESH = 11028,
  SC_DETAIL_ATTR = 11029,
  SC_CHAR_SKILL_GATHER = 11030,
  SC_CHAR_STOP_ACTION = 11031,
  SC_SKILL_UPGRADE = 11032,
  SC_DETAIL_BUFF = 11033,
  SC_SKILL_SETTING = 11034,
  SC_ADD_SKILL_TO_SKILL_LIST = 11035,
  SC_NEW_ITEMBOX = 11036,
  SC_DETAIL_ABILITY_INFO = 11037,
  SC_ABILITY_RESULT = 11038,
  SC_OPERATE_RESULT = 11039,
  SC_MESSAGE_ABILITY_ACTION = 11040,
  SC_ABILITY_SUCCESS = 11041,
  SC_HUMAN_BASE_ATTR = 11042,
  SC_DETAIL_EQUIP = 11043,
  SC_DETAIL_ITEM = 11044,
  SC_DETAIL_SKILL = 11045,
  MessageID_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::min(),
  MessageID_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::max()
};
bool MessageID_IsValid(int value);
constexpr MessageID MessageID_MIN = SC_MSG_NONE;
constexpr MessageID MessageID_MAX = SC_DETAIL_SKILL;
constexpr int MessageID_ARRAYSIZE = MessageID_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MessageID_descriptor();
template<typename T>
inline const std::string& MessageID_Name(T enum_t_value) {
  static_assert(::std::is_same<T, MessageID>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function MessageID_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    MessageID_descriptor(), enum_t_value);
}
inline bool MessageID_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, MessageID* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<MessageID>(
    MessageID_descriptor(), name, value);
}
// ===================================================================

class ServerMsgAbilityAction final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:servermessage.ServerMsgAbilityAction) */ {
 public:
  inline ServerMsgAbilityAction() : ServerMsgAbilityAction(nullptr) {}
  ~ServerMsgAbilityAction() override;
  explicit PROTOBUF_CONSTEXPR ServerMsgAbilityAction(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ServerMsgAbilityAction(const ServerMsgAbilityAction& from);
  ServerMsgAbilityAction(ServerMsgAbilityAction&& from) noexcept
    : ServerMsgAbilityAction() {
    *this = ::std::move(from);
  }

  inline ServerMsgAbilityAction& operator=(const ServerMsgAbilityAction& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServerMsgAbilityAction& operator=(ServerMsgAbilityAction&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ServerMsgAbilityAction& default_instance() {
    return *internal_default_instance();
  }
  static inline const ServerMsgAbilityAction* internal_default_instance() {
    return reinterpret_cast<const ServerMsgAbilityAction*>(
               &_ServerMsgAbilityAction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ServerMsgAbilityAction& a, ServerMsgAbilityAction& b) {
    a.Swap(&b);
  }
  inline void Swap(ServerMsgAbilityAction* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ServerMsgAbilityAction* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ServerMsgAbilityAction* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ServerMsgAbilityAction>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ServerMsgAbilityAction& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ServerMsgAbilityAction& from) {
    ServerMsgAbilityAction::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServerMsgAbilityAction* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "servermessage.ServerMsgAbilityAction";
  }
  protected:
  explicit ServerMsgAbilityAction(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObjectIdFieldNumber = 1,
    kLogicCountFieldNumber = 2,
    kAbilityIdFieldNumber = 3,
    kPrescriptionIdFieldNumber = 4,
    kTargetIdFieldNumber = 5,
    kBeginEndFieldNumber = 6,
  };
  // int32 object_id = 1;
  void clear_object_id();
  int32_t object_id() const;
  void set_object_id(int32_t value);
  private:
  int32_t _internal_object_id() const;
  void _internal_set_object_id(int32_t value);
  public:

  // int32 logic_count = 2;
  void clear_logic_count();
  int32_t logic_count() const;
  void set_logic_count(int32_t value);
  private:
  int32_t _internal_logic_count() const;
  void _internal_set_logic_count(int32_t value);
  public:

  // int32 ability_id = 3;
  void clear_ability_id();
  int32_t ability_id() const;
  void set_ability_id(int32_t value);
  private:
  int32_t _internal_ability_id() const;
  void _internal_set_ability_id(int32_t value);
  public:

  // int32 prescription_id = 4;
  void clear_prescription_id();
  int32_t prescription_id() const;
  void set_prescription_id(int32_t value);
  private:
  int32_t _internal_prescription_id() const;
  void _internal_set_prescription_id(int32_t value);
  public:

  // int32 target_id = 5;
  void clear_target_id();
  int32_t target_id() const;
  void set_target_id(int32_t value);
  private:
  int32_t _internal_target_id() const;
  void _internal_set_target_id(int32_t value);
  public:

  // int32 begin_end = 6;
  void clear_begin_end();
  int32_t begin_end() const;
  void set_begin_end(int32_t value);
  private:
  int32_t _internal_begin_end() const;
  void _internal_set_begin_end(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:servermessage.ServerMsgAbilityAction)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int32_t object_id_;
    int32_t logic_count_;
    int32_t ability_id_;
    int32_t prescription_id_;
    int32_t target_id_;
    int32_t begin_end_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_server_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class ServerMsgAbilityResult final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:servermessage.ServerMsgAbilityResult) */ {
 public:
  inline ServerMsgAbilityResult() : ServerMsgAbilityResult(nullptr) {}
  ~ServerMsgAbilityResult() override;
  explicit PROTOBUF_CONSTEXPR ServerMsgAbilityResult(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ServerMsgAbilityResult(const ServerMsgAbilityResult& from);
  ServerMsgAbilityResult(ServerMsgAbilityResult&& from) noexcept
    : ServerMsgAbilityResult() {
    *this = ::std::move(from);
  }

  inline ServerMsgAbilityResult& operator=(const ServerMsgAbilityResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServerMsgAbilityResult& operator=(ServerMsgAbilityResult&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ServerMsgAbilityResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const ServerMsgAbilityResult* internal_default_instance() {
    return reinterpret_cast<const ServerMsgAbilityResult*>(
               &_ServerMsgAbilityResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ServerMsgAbilityResult& a, ServerMsgAbilityResult& b) {
    a.Swap(&b);
  }
  inline void Swap(ServerMsgAbilityResult* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ServerMsgAbilityResult* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ServerMsgAbilityResult* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ServerMsgAbilityResult>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ServerMsgAbilityResult& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ServerMsgAbilityResult& from) {
    ServerMsgAbilityResult::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServerMsgAbilityResult* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "servermessage.ServerMsgAbilityResult";
  }
  protected:
  explicit ServerMsgAbilityResult(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerIdFieldNumber = 1,
    kMapIdFieldNumber = 2,
    kAbilityIdFieldNumber = 3,
    kPrescriptionIdFieldNumber = 4,
    kResultCodeFieldNumber = 5,
  };
  // int32 player_id = 1;
  void clear_player_id();
  int32_t player_id() const;
  void set_player_id(int32_t value);
  private:
  int32_t _internal_player_id() const;
  void _internal_set_player_id(int32_t value);
  public:

  // int32 map_id = 2;
  void clear_map_id();
  int32_t map_id() const;
  void set_map_id(int32_t value);
  private:
  int32_t _internal_map_id() const;
  void _internal_set_map_id(int32_t value);
  public:

  // int32 ability_id = 3;
  void clear_ability_id();
  int32_t ability_id() const;
  void set_ability_id(int32_t value);
  private:
  int32_t _internal_ability_id() const;
  void _internal_set_ability_id(int32_t value);
  public:

  // int32 prescription_id = 4;
  void clear_prescription_id();
  int32_t prescription_id() const;
  void set_prescription_id(int32_t value);
  private:
  int32_t _internal_prescription_id() const;
  void _internal_set_prescription_id(int32_t value);
  public:

  // int32 result_code = 5;
  void clear_result_code();
  int32_t result_code() const;
  void set_result_code(int32_t value);
  private:
  int32_t _internal_result_code() const;
  void _internal_set_result_code(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:servermessage.ServerMsgAbilityResult)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int32_t player_id_;
    int32_t map_id_;
    int32_t ability_id_;
    int32_t prescription_id_;
    int32_t result_code_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_server_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class ServerMsgAbilitySuccess final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:servermessage.ServerMsgAbilitySuccess) */ {
 public:
  inline ServerMsgAbilitySuccess() : ServerMsgAbilitySuccess(nullptr) {}
  ~ServerMsgAbilitySuccess() override;
  explicit PROTOBUF_CONSTEXPR ServerMsgAbilitySuccess(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ServerMsgAbilitySuccess(const ServerMsgAbilitySuccess& from);
  ServerMsgAbilitySuccess(ServerMsgAbilitySuccess&& from) noexcept
    : ServerMsgAbilitySuccess() {
    *this = ::std::move(from);
  }

  inline ServerMsgAbilitySuccess& operator=(const ServerMsgAbilitySuccess& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServerMsgAbilitySuccess& operator=(ServerMsgAbilitySuccess&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ServerMsgAbilitySuccess& default_instance() {
    return *internal_default_instance();
  }
  static inline const ServerMsgAbilitySuccess* internal_default_instance() {
    return reinterpret_cast<const ServerMsgAbilitySuccess*>(
               &_ServerMsgAbilitySuccess_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(ServerMsgAbilitySuccess& a, ServerMsgAbilitySuccess& b) {
    a.Swap(&b);
  }
  inline void Swap(ServerMsgAbilitySuccess* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ServerMsgAbilitySuccess* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ServerMsgAbilitySuccess* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ServerMsgAbilitySuccess>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ServerMsgAbilitySuccess& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ServerMsgAbilitySuccess& from) {
    ServerMsgAbilitySuccess::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServerMsgAbilitySuccess* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "servermessage.ServerMsgAbilitySuccess";
  }
  protected:
  explicit ServerMsgAbilitySuccess(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerIdFieldNumber = 1,
    kMapIdFieldNumber = 2,
    kAbilityIdFieldNumber = 3,
    kPrescriptionIdFieldNumber = 4,
    kResultCodeFieldNumber = 5,
    kItemSerialFieldNumber = 6,
  };
  // int32 player_id = 1;
  void clear_player_id();
  int32_t player_id() const;
  void set_player_id(int32_t value);
  private:
  int32_t _internal_player_id() const;
  void _internal_set_player_id(int32_t value);
  public:

  // int32 map_id = 2;
  void clear_map_id();
  int32_t map_id() const;
  void set_map_id(int32_t value);
  private:
  int32_t _internal_map_id() const;
  void _internal_set_map_id(int32_t value);
  public:

  // int32 ability_id = 3;
  void clear_ability_id();
  int32_t ability_id() const;
  void set_ability_id(int32_t value);
  private:
  int32_t _internal_ability_id() const;
  void _internal_set_ability_id(int32_t value);
  public:

  // int32 prescription_id = 4;
  void clear_prescription_id();
  int32_t prescription_id() const;
  void set_prescription_id(int32_t value);
  private:
  int32_t _internal_prescription_id() const;
  void _internal_set_prescription_id(int32_t value);
  public:

  // int32 result_code = 5;
  void clear_result_code();
  int32_t result_code() const;
  void set_result_code(int32_t value);
  private:
  int32_t _internal_result_code() const;
  void _internal_set_result_code(int32_t value);
  public:

  // int32 item_serial = 6;
  void clear_item_serial();
  int32_t item_serial() const;
  void set_item_serial(int32_t value);
  private:
  int32_t _internal_item_serial() const;
  void _internal_set_item_serial(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:servermessage.ServerMsgAbilitySuccess)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int32_t player_id_;
    int32_t map_id_;
    int32_t ability_id_;
    int32_t prescription_id_;
    int32_t result_code_;
    int32_t item_serial_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_server_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class ServerMsgAddQuest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:servermessage.ServerMsgAddQuest) */ {
 public:
  inline ServerMsgAddQuest() : ServerMsgAddQuest(nullptr) {}
  ~ServerMsgAddQuest() override;
  explicit PROTOBUF_CONSTEXPR ServerMsgAddQuest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ServerMsgAddQuest(const ServerMsgAddQuest& from);
  ServerMsgAddQuest(ServerMsgAddQuest&& from) noexcept
    : ServerMsgAddQuest() {
    *this = ::std::move(from);
  }

  inline ServerMsgAddQuest& operator=(const ServerMsgAddQuest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServerMsgAddQuest& operator=(ServerMsgAddQuest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ServerMsgAddQuest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ServerMsgAddQuest* internal_default_instance() {
    return reinterpret_cast<const ServerMsgAddQuest*>(
               &_ServerMsgAddQuest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(ServerMsgAddQuest& a, ServerMsgAddQuest& b) {
    a.Swap(&b);
  }
  inline void Swap(ServerMsgAddQuest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ServerMsgAddQuest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ServerMsgAddQuest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ServerMsgAddQuest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ServerMsgAddQuest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ServerMsgAddQuest& from) {
    ServerMsgAddQuest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServerMsgAddQuest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "servermessage.ServerMsgAddQuest";
  }
  protected:
  explicit ServerMsgAddQuest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kQuestFieldNumber = 2,
    kPlayerIdFieldNumber = 1,
  };
  // .base.Quest quest = 2;
  bool has_quest() const;
  private:
  bool _internal_has_quest() const;
  public:
  void clear_quest();
  const ::base::Quest& quest() const;
  PROTOBUF_NODISCARD ::base::Quest* release_quest();
  ::base::Quest* mutable_quest();
  void set_allocated_quest(::base::Quest* quest);
  private:
  const ::base::Quest& _internal_quest() const;
  ::base::Quest* _internal_mutable_quest();
  public:
  void unsafe_arena_set_allocated_quest(
      ::base::Quest* quest);
  ::base::Quest* unsafe_arena_release_quest();

  // int32 player_id = 1;
  void clear_player_id();
  int32_t player_id() const;
  void set_player_id(int32_t value);
  private:
  int32_t _internal_player_id() const;
  void _internal_set_player_id(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:servermessage.ServerMsgAddQuest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::base::Quest* quest_;
    int32_t player_id_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_server_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class ServerMsgAddSkillToSkillList final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:servermessage.ServerMsgAddSkillToSkillList) */ {
 public:
  inline ServerMsgAddSkillToSkillList() : ServerMsgAddSkillToSkillList(nullptr) {}
  ~ServerMsgAddSkillToSkillList() override;
  explicit PROTOBUF_CONSTEXPR ServerMsgAddSkillToSkillList(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ServerMsgAddSkillToSkillList(const ServerMsgAddSkillToSkillList& from);
  ServerMsgAddSkillToSkillList(ServerMsgAddSkillToSkillList&& from) noexcept
    : ServerMsgAddSkillToSkillList() {
    *this = ::std::move(from);
  }

  inline ServerMsgAddSkillToSkillList& operator=(const ServerMsgAddSkillToSkillList& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServerMsgAddSkillToSkillList& operator=(ServerMsgAddSkillToSkillList&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ServerMsgAddSkillToSkillList& default_instance() {
    return *internal_default_instance();
  }
  static inline const ServerMsgAddSkillToSkillList* internal_default_instance() {
    return reinterpret_cast<const ServerMsgAddSkillToSkillList*>(
               &_ServerMsgAddSkillToSkillList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(ServerMsgAddSkillToSkillList& a, ServerMsgAddSkillToSkillList& b) {
    a.Swap(&b);
  }
  inline void Swap(ServerMsgAddSkillToSkillList* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ServerMsgAddSkillToSkillList* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ServerMsgAddSkillToSkillList* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ServerMsgAddSkillToSkillList>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ServerMsgAddSkillToSkillList& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ServerMsgAddSkillToSkillList& from) {
    ServerMsgAddSkillToSkillList::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServerMsgAddSkillToSkillList* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "servermessage.ServerMsgAddSkillToSkillList";
  }
  protected:
  explicit ServerMsgAddSkillToSkillList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObjectIdFieldNumber = 1,
    kSkillIdFieldNumber = 2,
    kSkillStateFieldNumber = 3,
    kSkillLevelFieldNumber = 4,
  };
  // int32 object_id = 1;
  void clear_object_id();
  int32_t object_id() const;
  void set_object_id(int32_t value);
  private:
  int32_t _internal_object_id() const;
  void _internal_set_object_id(int32_t value);
  public:

  // int32 skill_id = 2;
  void clear_skill_id();
  int32_t skill_id() const;
  void set_skill_id(int32_t value);
  private:
  int32_t _internal_skill_id() const;
  void _internal_set_skill_id(int32_t value);
  public:

  // int32 skill_state = 3;
  void clear_skill_state();
  int32_t skill_state() const;
  void set_skill_state(int32_t value);
  private:
  int32_t _internal_skill_state() const;
  void _internal_set_skill_state(int32_t value);
  public:

  // int32 skill_level = 4;
  void clear_skill_level();
  int32_t skill_level() const;
  void set_skill_level(int32_t value);
  private:
  int32_t _internal_skill_level() const;
  void _internal_set_skill_level(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:servermessage.ServerMsgAddSkillToSkillList)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int32_t object_id_;
    int32_t skill_id_;
    int32_t skill_state_;
    int32_t skill_level_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_server_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class ServerMsgCharEquipment final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:servermessage.ServerMsgCharEquipment) */ {
 public:
  inline ServerMsgCharEquipment() : ServerMsgCharEquipment(nullptr) {}
  ~ServerMsgCharEquipment() override;
  explicit PROTOBUF_CONSTEXPR ServerMsgCharEquipment(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ServerMsgCharEquipment(const ServerMsgCharEquipment& from);
  ServerMsgCharEquipment(ServerMsgCharEquipment&& from) noexcept
    : ServerMsgCharEquipment() {
    *this = ::std::move(from);
  }

  inline ServerMsgCharEquipment& operator=(const ServerMsgCharEquipment& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServerMsgCharEquipment& operator=(ServerMsgCharEquipment&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ServerMsgCharEquipment& default_instance() {
    return *internal_default_instance();
  }
  static inline const ServerMsgCharEquipment* internal_default_instance() {
    return reinterpret_cast<const ServerMsgCharEquipment*>(
               &_ServerMsgCharEquipment_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(ServerMsgCharEquipment& a, ServerMsgCharEquipment& b) {
    a.Swap(&b);
  }
  inline void Swap(ServerMsgCharEquipment* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ServerMsgCharEquipment* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ServerMsgCharEquipment* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ServerMsgCharEquipment>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ServerMsgCharEquipment& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ServerMsgCharEquipment& from) {
    ServerMsgCharEquipment::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServerMsgCharEquipment* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "servermessage.ServerMsgCharEquipment";
  }
  protected:
  explicit ServerMsgCharEquipment(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObjectIdFieldNumber = 1,
    kSceneIdFieldNumber = 2,
  };
  // int32 object_id = 1;
  void clear_object_id();
  int32_t object_id() const;
  void set_object_id(int32_t value);
  private:
  int32_t _internal_object_id() const;
  void _internal_set_object_id(int32_t value);
  public:

  // int32 scene_id = 2;
  void clear_scene_id();
  int32_t scene_id() const;
  void set_scene_id(int32_t value);
  private:
  int32_t _internal_scene_id() const;
  void _internal_set_scene_id(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:servermessage.ServerMsgCharEquipment)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int32_t object_id_;
    int32_t scene_id_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_server_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class ServerHumanBaseAttrib final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:servermessage.ServerHumanBaseAttrib) */ {
 public:
  inline ServerHumanBaseAttrib() : ServerHumanBaseAttrib(nullptr) {}
  ~ServerHumanBaseAttrib() override;
  explicit PROTOBUF_CONSTEXPR ServerHumanBaseAttrib(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ServerHumanBaseAttrib(const ServerHumanBaseAttrib& from);
  ServerHumanBaseAttrib(ServerHumanBaseAttrib&& from) noexcept
    : ServerHumanBaseAttrib() {
    *this = ::std::move(from);
  }

  inline ServerHumanBaseAttrib& operator=(const ServerHumanBaseAttrib& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServerHumanBaseAttrib& operator=(ServerHumanBaseAttrib&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ServerHumanBaseAttrib& default_instance() {
    return *internal_default_instance();
  }
  static inline const ServerHumanBaseAttrib* internal_default_instance() {
    return reinterpret_cast<const ServerHumanBaseAttrib*>(
               &_ServerHumanBaseAttrib_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(ServerHumanBaseAttrib& a, ServerHumanBaseAttrib& b) {
    a.Swap(&b);
  }
  inline void Swap(ServerHumanBaseAttrib* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ServerHumanBaseAttrib* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ServerHumanBaseAttrib* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ServerHumanBaseAttrib>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ServerHumanBaseAttrib& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ServerHumanBaseAttrib& from) {
    ServerHumanBaseAttrib::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServerHumanBaseAttrib* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "servermessage.ServerHumanBaseAttrib";
  }
  protected:
  explicit ServerHumanBaseAttrib(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 22,
    kCountryTitleFieldNumber = 23,
    kGuildTitleFieldNumber = 24,
    kNormalTitleFieldNumber = 25,
    kFlagsFieldNumber = 2,
    kCampDataFieldNumber = 18,
    kCurrentHorseGuidFieldNumber = 35,
    kPlayerIdFieldNumber = 1,
    kJobFieldNumber = 3,
    kCountryFieldNumber = 4,
    kDataIdFieldNumber = 5,
    kLevelFieldNumber = 6,
    kHairMeshIdFieldNumber = 7,
    kFaceMeshIdFieldNumber = 8,
    kHpPercentFieldNumber = 9,
    kHpFieldNumber = 10,
    kHpMaxFieldNumber = 11,
    kRageFieldNumber = 12,
    kMaxRageFieldNumber = 13,
    kStealLevelFieldNumber = 14,
    kMoodStateFieldNumber = 15,
    kMoveSpeedFieldNumber = 16,
    kAttackSpeedFieldNumber = 17,
    kPortraitIdFieldNumber = 19,
    kModelIdFieldNumber = 20,
    kMountIdFieldNumber = 21,
    kCountryTitleTypeFieldNumber = 26,
    kGuildTitleTypeFieldNumber = 27,
    kStallIsOpenFieldNumber = 28,
    kTargetIdFieldNumber = 29,
    kPkValueFieldNumber = 30,
    kGenerationFieldNumber = 31,
    kWorldIdFieldNumber = 32,
    kInherenceExpFieldNumber = 33,
    kInherenceLevelFieldNumber = 34,
  };
  // string name = 22;
  void clear_name();
  const std::string& name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // string country_title = 23;
  void clear_country_title();
  const std::string& country_title() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_country_title(ArgT0&& arg0, ArgT... args);
  std::string* mutable_country_title();
  PROTOBUF_NODISCARD std::string* release_country_title();
  void set_allocated_country_title(std::string* country_title);
  private:
  const std::string& _internal_country_title() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_country_title(const std::string& value);
  std::string* _internal_mutable_country_title();
  public:

  // string guild_title = 24;
  void clear_guild_title();
  const std::string& guild_title() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_guild_title(ArgT0&& arg0, ArgT... args);
  std::string* mutable_guild_title();
  PROTOBUF_NODISCARD std::string* release_guild_title();
  void set_allocated_guild_title(std::string* guild_title);
  private:
  const std::string& _internal_guild_title() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_guild_title(const std::string& value);
  std::string* _internal_mutable_guild_title();
  public:

  // string normal_title = 25;
  void clear_normal_title();
  const std::string& normal_title() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_normal_title(ArgT0&& arg0, ArgT... args);
  std::string* mutable_normal_title();
  PROTOBUF_NODISCARD std::string* release_normal_title();
  void set_allocated_normal_title(std::string* normal_title);
  private:
  const std::string& _internal_normal_title() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_normal_title(const std::string& value);
  std::string* _internal_mutable_normal_title();
  public:

  // .base.Flag64 flags = 2;
  bool has_flags() const;
  private:
  bool _internal_has_flags() const;
  public:
  void clear_flags();
  const ::base::Flag64& flags() const;
  PROTOBUF_NODISCARD ::base::Flag64* release_flags();
  ::base::Flag64* mutable_flags();
  void set_allocated_flags(::base::Flag64* flags);
  private:
  const ::base::Flag64& _internal_flags() const;
  ::base::Flag64* _internal_mutable_flags();
  public:
  void unsafe_arena_set_allocated_flags(
      ::base::Flag64* flags);
  ::base::Flag64* unsafe_arena_release_flags();

  // .base.SCampData camp_data = 18;
  bool has_camp_data() const;
  private:
  bool _internal_has_camp_data() const;
  public:
  void clear_camp_data();
  const ::base::SCampData& camp_data() const;
  PROTOBUF_NODISCARD ::base::SCampData* release_camp_data();
  ::base::SCampData* mutable_camp_data();
  void set_allocated_camp_data(::base::SCampData* camp_data);
  private:
  const ::base::SCampData& _internal_camp_data() const;
  ::base::SCampData* _internal_mutable_camp_data();
  public:
  void unsafe_arena_set_allocated_camp_data(
      ::base::SCampData* camp_data);
  ::base::SCampData* unsafe_arena_release_camp_data();

  // .base.SHorseGuid current_horse_guid = 35;
  bool has_current_horse_guid() const;
  private:
  bool _internal_has_current_horse_guid() const;
  public:
  void clear_current_horse_guid();
  const ::base::SHorseGuid& current_horse_guid() const;
  PROTOBUF_NODISCARD ::base::SHorseGuid* release_current_horse_guid();
  ::base::SHorseGuid* mutable_current_horse_guid();
  void set_allocated_current_horse_guid(::base::SHorseGuid* current_horse_guid);
  private:
  const ::base::SHorseGuid& _internal_current_horse_guid() const;
  ::base::SHorseGuid* _internal_mutable_current_horse_guid();
  public:
  void unsafe_arena_set_allocated_current_horse_guid(
      ::base::SHorseGuid* current_horse_guid);
  ::base::SHorseGuid* unsafe_arena_release_current_horse_guid();

  // int32 player_id = 1;
  void clear_player_id();
  int32_t player_id() const;
  void set_player_id(int32_t value);
  private:
  int32_t _internal_player_id() const;
  void _internal_set_player_id(int32_t value);
  public:

  // int32 job = 3;
  void clear_job();
  int32_t job() const;
  void set_job(int32_t value);
  private:
  int32_t _internal_job() const;
  void _internal_set_job(int32_t value);
  public:

  // int32 country = 4;
  void clear_country();
  int32_t country() const;
  void set_country(int32_t value);
  private:
  int32_t _internal_country() const;
  void _internal_set_country(int32_t value);
  public:

  // int32 data_id = 5;
  void clear_data_id();
  int32_t data_id() const;
  void set_data_id(int32_t value);
  private:
  int32_t _internal_data_id() const;
  void _internal_set_data_id(int32_t value);
  public:

  // int32 level = 6;
  void clear_level();
  int32_t level() const;
  void set_level(int32_t value);
  private:
  int32_t _internal_level() const;
  void _internal_set_level(int32_t value);
  public:

  // int32 hair_mesh_id = 7;
  void clear_hair_mesh_id();
  int32_t hair_mesh_id() const;
  void set_hair_mesh_id(int32_t value);
  private:
  int32_t _internal_hair_mesh_id() const;
  void _internal_set_hair_mesh_id(int32_t value);
  public:

  // int32 face_mesh_id = 8;
  void clear_face_mesh_id();
  int32_t face_mesh_id() const;
  void set_face_mesh_id(int32_t value);
  private:
  int32_t _internal_face_mesh_id() const;
  void _internal_set_face_mesh_id(int32_t value);
  public:

  // int32 hp_percent = 9;
  void clear_hp_percent();
  int32_t hp_percent() const;
  void set_hp_percent(int32_t value);
  private:
  int32_t _internal_hp_percent() const;
  void _internal_set_hp_percent(int32_t value);
  public:

  // int32 hp = 10;
  void clear_hp();
  int32_t hp() const;
  void set_hp(int32_t value);
  private:
  int32_t _internal_hp() const;
  void _internal_set_hp(int32_t value);
  public:

  // int32 hp_max = 11;
  void clear_hp_max();
  int32_t hp_max() const;
  void set_hp_max(int32_t value);
  private:
  int32_t _internal_hp_max() const;
  void _internal_set_hp_max(int32_t value);
  public:

  // int32 rage = 12;
  void clear_rage();
  int32_t rage() const;
  void set_rage(int32_t value);
  private:
  int32_t _internal_rage() const;
  void _internal_set_rage(int32_t value);
  public:

  // int32 max_rage = 13;
  void clear_max_rage();
  int32_t max_rage() const;
  void set_max_rage(int32_t value);
  private:
  int32_t _internal_max_rage() const;
  void _internal_set_max_rage(int32_t value);
  public:

  // int32 steal_level = 14;
  void clear_steal_level();
  int32_t steal_level() const;
  void set_steal_level(int32_t value);
  private:
  int32_t _internal_steal_level() const;
  void _internal_set_steal_level(int32_t value);
  public:

  // int32 mood_state = 15;
  void clear_mood_state();
  int32_t mood_state() const;
  void set_mood_state(int32_t value);
  private:
  int32_t _internal_mood_state() const;
  void _internal_set_mood_state(int32_t value);
  public:

  // float move_speed = 16;
  void clear_move_speed();
  float move_speed() const;
  void set_move_speed(float value);
  private:
  float _internal_move_speed() const;
  void _internal_set_move_speed(float value);
  public:

  // float attack_speed = 17;
  void clear_attack_speed();
  float attack_speed() const;
  void set_attack_speed(float value);
  private:
  float _internal_attack_speed() const;
  void _internal_set_attack_speed(float value);
  public:

  // int32 portrait_id = 19;
  void clear_portrait_id();
  int32_t portrait_id() const;
  void set_portrait_id(int32_t value);
  private:
  int32_t _internal_portrait_id() const;
  void _internal_set_portrait_id(int32_t value);
  public:

  // int32 model_id = 20;
  void clear_model_id();
  int32_t model_id() const;
  void set_model_id(int32_t value);
  private:
  int32_t _internal_model_id() const;
  void _internal_set_model_id(int32_t value);
  public:

  // int32 mount_id = 21;
  void clear_mount_id();
  int32_t mount_id() const;
  void set_mount_id(int32_t value);
  private:
  int32_t _internal_mount_id() const;
  void _internal_set_mount_id(int32_t value);
  public:

  // int32 country_title_type = 26;
  void clear_country_title_type();
  int32_t country_title_type() const;
  void set_country_title_type(int32_t value);
  private:
  int32_t _internal_country_title_type() const;
  void _internal_set_country_title_type(int32_t value);
  public:

  // int32 guild_title_type = 27;
  void clear_guild_title_type();
  int32_t guild_title_type() const;
  void set_guild_title_type(int32_t value);
  private:
  int32_t _internal_guild_title_type() const;
  void _internal_set_guild_title_type(int32_t value);
  public:

  // int32 stall_is_open = 28;
  void clear_stall_is_open();
  int32_t stall_is_open() const;
  void set_stall_is_open(int32_t value);
  private:
  int32_t _internal_stall_is_open() const;
  void _internal_set_stall_is_open(int32_t value);
  public:

  // int32 target_id = 29;
  void clear_target_id();
  int32_t target_id() const;
  void set_target_id(int32_t value);
  private:
  int32_t _internal_target_id() const;
  void _internal_set_target_id(int32_t value);
  public:

  // int32 pk_value = 30;
  void clear_pk_value();
  int32_t pk_value() const;
  void set_pk_value(int32_t value);
  private:
  int32_t _internal_pk_value() const;
  void _internal_set_pk_value(int32_t value);
  public:

  // int32 generation = 31;
  void clear_generation();
  int32_t generation() const;
  void set_generation(int32_t value);
  private:
  int32_t _internal_generation() const;
  void _internal_set_generation(int32_t value);
  public:

  // int32 world_id = 32;
  void clear_world_id();
  int32_t world_id() const;
  void set_world_id(int32_t value);
  private:
  int32_t _internal_world_id() const;
  void _internal_set_world_id(int32_t value);
  public:

  // uint32 inherence_exp = 33;
  void clear_inherence_exp();
  uint32_t inherence_exp() const;
  void set_inherence_exp(uint32_t value);
  private:
  uint32_t _internal_inherence_exp() const;
  void _internal_set_inherence_exp(uint32_t value);
  public:

  // uint32 inherence_level = 34;
  void clear_inherence_level();
  uint32_t inherence_level() const;
  void set_inherence_level(uint32_t value);
  private:
  uint32_t _internal_inherence_level() const;
  void _internal_set_inherence_level(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:servermessage.ServerHumanBaseAttrib)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr country_title_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr guild_title_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr normal_title_;
    ::base::Flag64* flags_;
    ::base::SCampData* camp_data_;
    ::base::SHorseGuid* current_horse_guid_;
    int32_t player_id_;
    int32_t job_;
    int32_t country_;
    int32_t data_id_;
    int32_t level_;
    int32_t hair_mesh_id_;
    int32_t face_mesh_id_;
    int32_t hp_percent_;
    int32_t hp_;
    int32_t hp_max_;
    int32_t rage_;
    int32_t max_rage_;
    int32_t steal_level_;
    int32_t mood_state_;
    float move_speed_;
    float attack_speed_;
    int32_t portrait_id_;
    int32_t model_id_;
    int32_t mount_id_;
    int32_t country_title_type_;
    int32_t guild_title_type_;
    int32_t stall_is_open_;
    int32_t target_id_;
    int32_t pk_value_;
    int32_t generation_;
    int32_t world_id_;
    uint32_t inherence_exp_;
    uint32_t inherence_level_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_server_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class ServerMsgCharImpactListUpdate final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:servermessage.ServerMsgCharImpactListUpdate) */ {
 public:
  inline ServerMsgCharImpactListUpdate() : ServerMsgCharImpactListUpdate(nullptr) {}
  ~ServerMsgCharImpactListUpdate() override;
  explicit PROTOBUF_CONSTEXPR ServerMsgCharImpactListUpdate(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ServerMsgCharImpactListUpdate(const ServerMsgCharImpactListUpdate& from);
  ServerMsgCharImpactListUpdate(ServerMsgCharImpactListUpdate&& from) noexcept
    : ServerMsgCharImpactListUpdate() {
    *this = ::std::move(from);
  }

  inline ServerMsgCharImpactListUpdate& operator=(const ServerMsgCharImpactListUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServerMsgCharImpactListUpdate& operator=(ServerMsgCharImpactListUpdate&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ServerMsgCharImpactListUpdate& default_instance() {
    return *internal_default_instance();
  }
  static inline const ServerMsgCharImpactListUpdate* internal_default_instance() {
    return reinterpret_cast<const ServerMsgCharImpactListUpdate*>(
               &_ServerMsgCharImpactListUpdate_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(ServerMsgCharImpactListUpdate& a, ServerMsgCharImpactListUpdate& b) {
    a.Swap(&b);
  }
  inline void Swap(ServerMsgCharImpactListUpdate* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ServerMsgCharImpactListUpdate* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ServerMsgCharImpactListUpdate* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ServerMsgCharImpactListUpdate>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ServerMsgCharImpactListUpdate& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ServerMsgCharImpactListUpdate& from) {
    ServerMsgCharImpactListUpdate::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServerMsgCharImpactListUpdate* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "servermessage.ServerMsgCharImpactListUpdate";
  }
  protected:
  explicit ServerMsgCharImpactListUpdate(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAImpactFieldNumber = 5,
    kOwnerIdFieldNumber = 1,
    kSceneIdFieldNumber = 2,
    kImpactCountFieldNumber = 3,
    kLastSnFieldNumber = 4,
  };
  // repeated .base.ImpactStruct a_impact = 5;
  int a_impact_size() const;
  private:
  int _internal_a_impact_size() const;
  public:
  void clear_a_impact();
  ::base::ImpactStruct* mutable_a_impact(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::base::ImpactStruct >*
      mutable_a_impact();
  private:
  const ::base::ImpactStruct& _internal_a_impact(int index) const;
  ::base::ImpactStruct* _internal_add_a_impact();
  public:
  const ::base::ImpactStruct& a_impact(int index) const;
  ::base::ImpactStruct* add_a_impact();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::base::ImpactStruct >&
      a_impact() const;

  // int32 owner_id = 1;
  void clear_owner_id();
  int32_t owner_id() const;
  void set_owner_id(int32_t value);
  private:
  int32_t _internal_owner_id() const;
  void _internal_set_owner_id(int32_t value);
  public:

  // int32 scene_id = 2;
  void clear_scene_id();
  int32_t scene_id() const;
  void set_scene_id(int32_t value);
  private:
  int32_t _internal_scene_id() const;
  void _internal_set_scene_id(int32_t value);
  public:

  // int32 impact_count = 3;
  void clear_impact_count();
  int32_t impact_count() const;
  void set_impact_count(int32_t value);
  private:
  int32_t _internal_impact_count() const;
  void _internal_set_impact_count(int32_t value);
  public:

  // uint32 last_sn = 4;
  void clear_last_sn();
  uint32_t last_sn() const;
  void set_last_sn(uint32_t value);
  private:
  uint32_t _internal_last_sn() const;
  void _internal_set_last_sn(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:servermessage.ServerMsgCharImpactListUpdate)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::base::ImpactStruct > a_impact_;
    int32_t owner_id_;
    int32_t scene_id_;
    int32_t impact_count_;
    uint32_t last_sn_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_server_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class ServerMsgCharMove final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:servermessage.ServerMsgCharMove) */ {
 public:
  inline ServerMsgCharMove() : ServerMsgCharMove(nullptr) {}
  ~ServerMsgCharMove() override;
  explicit PROTOBUF_CONSTEXPR ServerMsgCharMove(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ServerMsgCharMove(const ServerMsgCharMove& from);
  ServerMsgCharMove(ServerMsgCharMove&& from) noexcept
    : ServerMsgCharMove() {
    *this = ::std::move(from);
  }

  inline ServerMsgCharMove& operator=(const ServerMsgCharMove& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServerMsgCharMove& operator=(ServerMsgCharMove&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ServerMsgCharMove& default_instance() {
    return *internal_default_instance();
  }
  static inline const ServerMsgCharMove* internal_default_instance() {
    return reinterpret_cast<const ServerMsgCharMove*>(
               &_ServerMsgCharMove_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(ServerMsgCharMove& a, ServerMsgCharMove& b) {
    a.Swap(&b);
  }
  inline void Swap(ServerMsgCharMove* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ServerMsgCharMove* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ServerMsgCharMove* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ServerMsgCharMove>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ServerMsgCharMove& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ServerMsgCharMove& from) {
    ServerMsgCharMove::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServerMsgCharMove* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "servermessage.ServerMsgCharMove";
  }
  protected:
  explicit ServerMsgCharMove(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAImpactFieldNumber = 5,
    kTargetPosFieldNumber = 6,
    kStopPosFieldNumber = 7,
    kObjectIdFieldNumber = 1,
    kHandleIdFieldNumber = 2,
    kImpactCountFieldNumber = 3,
    kLastSnFieldNumber = 4,
  };
  // repeated .base.ImpactStruct a_impact = 5;
  int a_impact_size() const;
  private:
  int _internal_a_impact_size() const;
  public:
  void clear_a_impact();
  ::base::ImpactStruct* mutable_a_impact(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::base::ImpactStruct >*
      mutable_a_impact();
  private:
  const ::base::ImpactStruct& _internal_a_impact(int index) const;
  ::base::ImpactStruct* _internal_add_a_impact();
  public:
  const ::base::ImpactStruct& a_impact(int index) const;
  ::base::ImpactStruct* add_a_impact();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::base::ImpactStruct >&
      a_impact() const;

  // optional .base.GLPos target_pos = 6;
  bool has_target_pos() const;
  private:
  bool _internal_has_target_pos() const;
  public:
  void clear_target_pos();
  const ::base::GLPos& target_pos() const;
  PROTOBUF_NODISCARD ::base::GLPos* release_target_pos();
  ::base::GLPos* mutable_target_pos();
  void set_allocated_target_pos(::base::GLPos* target_pos);
  private:
  const ::base::GLPos& _internal_target_pos() const;
  ::base::GLPos* _internal_mutable_target_pos();
  public:
  void unsafe_arena_set_allocated_target_pos(
      ::base::GLPos* target_pos);
  ::base::GLPos* unsafe_arena_release_target_pos();

  // optional .base.GLPos stop_pos = 7;
  bool has_stop_pos() const;
  private:
  bool _internal_has_stop_pos() const;
  public:
  void clear_stop_pos();
  const ::base::GLPos& stop_pos() const;
  PROTOBUF_NODISCARD ::base::GLPos* release_stop_pos();
  ::base::GLPos* mutable_stop_pos();
  void set_allocated_stop_pos(::base::GLPos* stop_pos);
  private:
  const ::base::GLPos& _internal_stop_pos() const;
  ::base::GLPos* _internal_mutable_stop_pos();
  public:
  void unsafe_arena_set_allocated_stop_pos(
      ::base::GLPos* stop_pos);
  ::base::GLPos* unsafe_arena_release_stop_pos();

  // int32 object_id = 1;
  void clear_object_id();
  int32_t object_id() const;
  void set_object_id(int32_t value);
  private:
  int32_t _internal_object_id() const;
  void _internal_set_object_id(int32_t value);
  public:

  // int32 handle_id = 2;
  void clear_handle_id();
  int32_t handle_id() const;
  void set_handle_id(int32_t value);
  private:
  int32_t _internal_handle_id() const;
  void _internal_set_handle_id(int32_t value);
  public:

  // int32 impact_count = 3;
  void clear_impact_count();
  int32_t impact_count() const;
  void set_impact_count(int32_t value);
  private:
  int32_t _internal_impact_count() const;
  void _internal_set_impact_count(int32_t value);
  public:

  // uint32 last_sn = 4;
  void clear_last_sn();
  uint32_t last_sn() const;
  void set_last_sn(uint32_t value);
  private:
  uint32_t _internal_last_sn() const;
  void _internal_set_last_sn(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:servermessage.ServerMsgCharMove)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::base::ImpactStruct > a_impact_;
    ::base::GLPos* target_pos_;
    ::base::GLPos* stop_pos_;
    int32_t object_id_;
    int32_t handle_id_;
    int32_t impact_count_;
    uint32_t last_sn_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_server_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class ServerMsgCharSkillGather final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:servermessage.ServerMsgCharSkillGather) */ {
 public:
  inline ServerMsgCharSkillGather() : ServerMsgCharSkillGather(nullptr) {}
  ~ServerMsgCharSkillGather() override;
  explicit PROTOBUF_CONSTEXPR ServerMsgCharSkillGather(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ServerMsgCharSkillGather(const ServerMsgCharSkillGather& from);
  ServerMsgCharSkillGather(ServerMsgCharSkillGather&& from) noexcept
    : ServerMsgCharSkillGather() {
    *this = ::std::move(from);
  }

  inline ServerMsgCharSkillGather& operator=(const ServerMsgCharSkillGather& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServerMsgCharSkillGather& operator=(ServerMsgCharSkillGather&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ServerMsgCharSkillGather& default_instance() {
    return *internal_default_instance();
  }
  static inline const ServerMsgCharSkillGather* internal_default_instance() {
    return reinterpret_cast<const ServerMsgCharSkillGather*>(
               &_ServerMsgCharSkillGather_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(ServerMsgCharSkillGather& a, ServerMsgCharSkillGather& b) {
    a.Swap(&b);
  }
  inline void Swap(ServerMsgCharSkillGather* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ServerMsgCharSkillGather* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ServerMsgCharSkillGather* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ServerMsgCharSkillGather>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ServerMsgCharSkillGather& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ServerMsgCharSkillGather& from) {
    ServerMsgCharSkillGather::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServerMsgCharSkillGather* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "servermessage.ServerMsgCharSkillGather";
  }
  protected:
  explicit ServerMsgCharSkillGather(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUserPositionFieldNumber = 4,
    kTargetPosFieldNumber = 6,
    kObjectIdFieldNumber = 1,
    kLogicCountFieldNumber = 2,
    kSkillDataIdFieldNumber = 3,
    kTargetIdFieldNumber = 5,
    kDirFieldNumber = 7,
    kTotalTimeFieldNumber = 8,
  };
  // .base.GLPos user_position = 4;
  bool has_user_position() const;
  private:
  bool _internal_has_user_position() const;
  public:
  void clear_user_position();
  const ::base::GLPos& user_position() const;
  PROTOBUF_NODISCARD ::base::GLPos* release_user_position();
  ::base::GLPos* mutable_user_position();
  void set_allocated_user_position(::base::GLPos* user_position);
  private:
  const ::base::GLPos& _internal_user_position() const;
  ::base::GLPos* _internal_mutable_user_position();
  public:
  void unsafe_arena_set_allocated_user_position(
      ::base::GLPos* user_position);
  ::base::GLPos* unsafe_arena_release_user_position();

  // .base.GLPos target_pos = 6;
  bool has_target_pos() const;
  private:
  bool _internal_has_target_pos() const;
  public:
  void clear_target_pos();
  const ::base::GLPos& target_pos() const;
  PROTOBUF_NODISCARD ::base::GLPos* release_target_pos();
  ::base::GLPos* mutable_target_pos();
  void set_allocated_target_pos(::base::GLPos* target_pos);
  private:
  const ::base::GLPos& _internal_target_pos() const;
  ::base::GLPos* _internal_mutable_target_pos();
  public:
  void unsafe_arena_set_allocated_target_pos(
      ::base::GLPos* target_pos);
  ::base::GLPos* unsafe_arena_release_target_pos();

  // int32 object_id = 1;
  void clear_object_id();
  int32_t object_id() const;
  void set_object_id(int32_t value);
  private:
  int32_t _internal_object_id() const;
  void _internal_set_object_id(int32_t value);
  public:

  // int32 logic_count = 2;
  void clear_logic_count();
  int32_t logic_count() const;
  void set_logic_count(int32_t value);
  private:
  int32_t _internal_logic_count() const;
  void _internal_set_logic_count(int32_t value);
  public:

  // int32 skill_data_id = 3;
  void clear_skill_data_id();
  int32_t skill_data_id() const;
  void set_skill_data_id(int32_t value);
  private:
  int32_t _internal_skill_data_id() const;
  void _internal_set_skill_data_id(int32_t value);
  public:

  // int32 target_id = 5;
  void clear_target_id();
  int32_t target_id() const;
  void set_target_id(int32_t value);
  private:
  int32_t _internal_target_id() const;
  void _internal_set_target_id(int32_t value);
  public:

  // float dir = 7;
  void clear_dir();
  float dir() const;
  void set_dir(float value);
  private:
  float _internal_dir() const;
  void _internal_set_dir(float value);
  public:

  // int32 total_time = 8;
  void clear_total_time();
  int32_t total_time() const;
  void set_total_time(int32_t value);
  private:
  int32_t _internal_total_time() const;
  void _internal_set_total_time(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:servermessage.ServerMsgCharSkillGather)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::base::GLPos* user_position_;
    ::base::GLPos* target_pos_;
    int32_t object_id_;
    int32_t logic_count_;
    int32_t skill_data_id_;
    int32_t target_id_;
    float dir_;
    int32_t total_time_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_server_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class ServerMsgCharStopAction final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:servermessage.ServerMsgCharStopAction) */ {
 public:
  inline ServerMsgCharStopAction() : ServerMsgCharStopAction(nullptr) {}
  ~ServerMsgCharStopAction() override;
  explicit PROTOBUF_CONSTEXPR ServerMsgCharStopAction(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ServerMsgCharStopAction(const ServerMsgCharStopAction& from);
  ServerMsgCharStopAction(ServerMsgCharStopAction&& from) noexcept
    : ServerMsgCharStopAction() {
    *this = ::std::move(from);
  }

  inline ServerMsgCharStopAction& operator=(const ServerMsgCharStopAction& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServerMsgCharStopAction& operator=(ServerMsgCharStopAction&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ServerMsgCharStopAction& default_instance() {
    return *internal_default_instance();
  }
  static inline const ServerMsgCharStopAction* internal_default_instance() {
    return reinterpret_cast<const ServerMsgCharStopAction*>(
               &_ServerMsgCharStopAction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(ServerMsgCharStopAction& a, ServerMsgCharStopAction& b) {
    a.Swap(&b);
  }
  inline void Swap(ServerMsgCharStopAction* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ServerMsgCharStopAction* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ServerMsgCharStopAction* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ServerMsgCharStopAction>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ServerMsgCharStopAction& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ServerMsgCharStopAction& from) {
    ServerMsgCharStopAction::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServerMsgCharStopAction* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "servermessage.ServerMsgCharStopAction";
  }
  protected:
  explicit ServerMsgCharStopAction(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObjectIdFieldNumber = 1,
    kLogicCountFieldNumber = 2,
    kStopTimeFieldNumber = 3,
  };
  // int32 object_id = 1;
  void clear_object_id();
  int32_t object_id() const;
  void set_object_id(int32_t value);
  private:
  int32_t _internal_object_id() const;
  void _internal_set_object_id(int32_t value);
  public:

  // int32 logic_count = 2;
  void clear_logic_count();
  int32_t logic_count() const;
  void set_logic_count(int32_t value);
  private:
  int32_t _internal_logic_count() const;
  void _internal_set_logic_count(int32_t value);
  public:

  // int32 stop_time = 3;
  void clear_stop_time();
  int32_t stop_time() const;
  void set_stop_time(int32_t value);
  private:
  int32_t _internal_stop_time() const;
  void _internal_set_stop_time(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:servermessage.ServerMsgCharStopAction)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int32_t object_id_;
    int32_t logic_count_;
    int32_t stop_time_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_server_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class ServerMsgChat final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:servermessage.ServerMsgChat) */ {
 public:
  inline ServerMsgChat() : ServerMsgChat(nullptr) {}
  ~ServerMsgChat() override;
  explicit PROTOBUF_CONSTEXPR ServerMsgChat(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ServerMsgChat(const ServerMsgChat& from);
  ServerMsgChat(ServerMsgChat&& from) noexcept
    : ServerMsgChat() {
    *this = ::std::move(from);
  }

  inline ServerMsgChat& operator=(const ServerMsgChat& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServerMsgChat& operator=(ServerMsgChat&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ServerMsgChat& default_instance() {
    return *internal_default_instance();
  }
  static inline const ServerMsgChat* internal_default_instance() {
    return reinterpret_cast<const ServerMsgChat*>(
               &_ServerMsgChat_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(ServerMsgChat& a, ServerMsgChat& b) {
    a.Swap(&b);
  }
  inline void Swap(ServerMsgChat* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ServerMsgChat* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ServerMsgChat* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ServerMsgChat>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ServerMsgChat& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ServerMsgChat& from) {
    ServerMsgChat::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServerMsgChat* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "servermessage.ServerMsgChat";
  }
  protected:
  explicit ServerMsgChat(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChatContentFieldNumber = 2,
    kChatTypeFieldNumber = 1,
    kShowPositionFieldNumber = 3,
    kCycleCountFieldNumber = 4,
    kAnimateImageFieldNumber = 5,
  };
  // string chat_content = 2;
  void clear_chat_content();
  const std::string& chat_content() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_chat_content(ArgT0&& arg0, ArgT... args);
  std::string* mutable_chat_content();
  PROTOBUF_NODISCARD std::string* release_chat_content();
  void set_allocated_chat_content(std::string* chat_content);
  private:
  const std::string& _internal_chat_content() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_chat_content(const std::string& value);
  std::string* _internal_mutable_chat_content();
  public:

  // int32 chat_type = 1;
  void clear_chat_type();
  int32_t chat_type() const;
  void set_chat_type(int32_t value);
  private:
  int32_t _internal_chat_type() const;
  void _internal_set_chat_type(int32_t value);
  public:

  // int32 show_position = 3;
  void clear_show_position();
  int32_t show_position() const;
  void set_show_position(int32_t value);
  private:
  int32_t _internal_show_position() const;
  void _internal_set_show_position(int32_t value);
  public:

  // int32 cycle_count = 4;
  void clear_cycle_count();
  int32_t cycle_count() const;
  void set_cycle_count(int32_t value);
  private:
  int32_t _internal_cycle_count() const;
  void _internal_set_cycle_count(int32_t value);
  public:

  // int32 animate_image = 5;
  void clear_animate_image();
  int32_t animate_image() const;
  void set_animate_image(int32_t value);
  private:
  int32_t _internal_animate_image() const;
  void _internal_set_animate_image(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:servermessage.ServerMsgChat)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr chat_content_;
    int32_t chat_type_;
    int32_t show_position_;
    int32_t cycle_count_;
    int32_t animate_image_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_server_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class ServerMsgCommand final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:servermessage.ServerMsgCommand) */ {
 public:
  inline ServerMsgCommand() : ServerMsgCommand(nullptr) {}
  ~ServerMsgCommand() override;
  explicit PROTOBUF_CONSTEXPR ServerMsgCommand(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ServerMsgCommand(const ServerMsgCommand& from);
  ServerMsgCommand(ServerMsgCommand&& from) noexcept
    : ServerMsgCommand() {
    *this = ::std::move(from);
  }

  inline ServerMsgCommand& operator=(const ServerMsgCommand& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServerMsgCommand& operator=(ServerMsgCommand&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ServerMsgCommand& default_instance() {
    return *internal_default_instance();
  }
  static inline const ServerMsgCommand* internal_default_instance() {
    return reinterpret_cast<const ServerMsgCommand*>(
               &_ServerMsgCommand_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(ServerMsgCommand& a, ServerMsgCommand& b) {
    a.Swap(&b);
  }
  inline void Swap(ServerMsgCommand* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ServerMsgCommand* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ServerMsgCommand* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ServerMsgCommand>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ServerMsgCommand& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ServerMsgCommand& from) {
    ServerMsgCommand::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServerMsgCommand* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "servermessage.ServerMsgCommand";
  }
  protected:
  explicit ServerMsgCommand(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSxParamFieldNumber = 2,
    kUiIndexFieldNumber = 1,
  };
  // .base.SXParam sx_param = 2;
  bool has_sx_param() const;
  private:
  bool _internal_has_sx_param() const;
  public:
  void clear_sx_param();
  const ::base::SXParam& sx_param() const;
  PROTOBUF_NODISCARD ::base::SXParam* release_sx_param();
  ::base::SXParam* mutable_sx_param();
  void set_allocated_sx_param(::base::SXParam* sx_param);
  private:
  const ::base::SXParam& _internal_sx_param() const;
  ::base::SXParam* _internal_mutable_sx_param();
  public:
  void unsafe_arena_set_allocated_sx_param(
      ::base::SXParam* sx_param);
  ::base::SXParam* unsafe_arena_release_sx_param();

  // int32 ui_index = 1;
  void clear_ui_index();
  int32_t ui_index() const;
  void set_ui_index(int32_t value);
  private:
  int32_t _internal_ui_index() const;
  void _internal_set_ui_index(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:servermessage.ServerMsgCommand)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::base::SXParam* sx_param_;
    int32_t ui_index_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_server_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class ServerMsgCooldownUpdate final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:servermessage.ServerMsgCooldownUpdate) */ {
 public:
  inline ServerMsgCooldownUpdate() : ServerMsgCooldownUpdate(nullptr) {}
  ~ServerMsgCooldownUpdate() override;
  explicit PROTOBUF_CONSTEXPR ServerMsgCooldownUpdate(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ServerMsgCooldownUpdate(const ServerMsgCooldownUpdate& from);
  ServerMsgCooldownUpdate(ServerMsgCooldownUpdate&& from) noexcept
    : ServerMsgCooldownUpdate() {
    *this = ::std::move(from);
  }

  inline ServerMsgCooldownUpdate& operator=(const ServerMsgCooldownUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServerMsgCooldownUpdate& operator=(ServerMsgCooldownUpdate&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ServerMsgCooldownUpdate& default_instance() {
    return *internal_default_instance();
  }
  static inline const ServerMsgCooldownUpdate* internal_default_instance() {
    return reinterpret_cast<const ServerMsgCooldownUpdate*>(
               &_ServerMsgCooldownUpdate_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(ServerMsgCooldownUpdate& a, ServerMsgCooldownUpdate& b) {
    a.Swap(&b);
  }
  inline void Swap(ServerMsgCooldownUpdate* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ServerMsgCooldownUpdate* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ServerMsgCooldownUpdate* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ServerMsgCooldownUpdate>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ServerMsgCooldownUpdate& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ServerMsgCooldownUpdate& from) {
    ServerMsgCooldownUpdate::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServerMsgCooldownUpdate* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "servermessage.ServerMsgCooldownUpdate";
  }
  protected:
  explicit ServerMsgCooldownUpdate(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObjectIdFieldNumber = 1,
    kSceneIdFieldNumber = 2,
  };
  // int32 object_id = 1;
  void clear_object_id();
  int32_t object_id() const;
  void set_object_id(int32_t value);
  private:
  int32_t _internal_object_id() const;
  void _internal_set_object_id(int32_t value);
  public:

  // int32 scene_id = 2;
  void clear_scene_id();
  int32_t scene_id() const;
  void set_scene_id(int32_t value);
  private:
  int32_t _internal_scene_id() const;
  void _internal_set_scene_id(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:servermessage.ServerMsgCooldownUpdate)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int32_t object_id_;
    int32_t scene_id_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_server_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class ServerMsgDelObject final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:servermessage.ServerMsgDelObject) */ {
 public:
  inline ServerMsgDelObject() : ServerMsgDelObject(nullptr) {}
  ~ServerMsgDelObject() override;
  explicit PROTOBUF_CONSTEXPR ServerMsgDelObject(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ServerMsgDelObject(const ServerMsgDelObject& from);
  ServerMsgDelObject(ServerMsgDelObject&& from) noexcept
    : ServerMsgDelObject() {
    *this = ::std::move(from);
  }

  inline ServerMsgDelObject& operator=(const ServerMsgDelObject& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServerMsgDelObject& operator=(ServerMsgDelObject&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ServerMsgDelObject& default_instance() {
    return *internal_default_instance();
  }
  static inline const ServerMsgDelObject* internal_default_instance() {
    return reinterpret_cast<const ServerMsgDelObject*>(
               &_ServerMsgDelObject_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(ServerMsgDelObject& a, ServerMsgDelObject& b) {
    a.Swap(&b);
  }
  inline void Swap(ServerMsgDelObject* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ServerMsgDelObject* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ServerMsgDelObject* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ServerMsgDelObject>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ServerMsgDelObject& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ServerMsgDelObject& from) {
    ServerMsgDelObject::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServerMsgDelObject* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "servermessage.ServerMsgDelObject";
  }
  protected:
  explicit ServerMsgDelObject(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObjectIdFieldNumber = 1,
    kSceneIdFieldNumber = 2,
  };
  // int32 object_id = 1;
  void clear_object_id();
  int32_t object_id() const;
  void set_object_id(int32_t value);
  private:
  int32_t _internal_object_id() const;
  void _internal_set_object_id(int32_t value);
  public:

  // int32 scene_id = 2;
  void clear_scene_id();
  int32_t scene_id() const;
  void set_scene_id(int32_t value);
  private:
  int32_t _internal_scene_id() const;
  void _internal_set_scene_id(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:servermessage.ServerMsgDelObject)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int32_t object_id_;
    int32_t scene_id_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_server_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class ServerMsgDelQuest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:servermessage.ServerMsgDelQuest) */ {
 public:
  inline ServerMsgDelQuest() : ServerMsgDelQuest(nullptr) {}
  ~ServerMsgDelQuest() override;
  explicit PROTOBUF_CONSTEXPR ServerMsgDelQuest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ServerMsgDelQuest(const ServerMsgDelQuest& from);
  ServerMsgDelQuest(ServerMsgDelQuest&& from) noexcept
    : ServerMsgDelQuest() {
    *this = ::std::move(from);
  }

  inline ServerMsgDelQuest& operator=(const ServerMsgDelQuest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServerMsgDelQuest& operator=(ServerMsgDelQuest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ServerMsgDelQuest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ServerMsgDelQuest* internal_default_instance() {
    return reinterpret_cast<const ServerMsgDelQuest*>(
               &_ServerMsgDelQuest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(ServerMsgDelQuest& a, ServerMsgDelQuest& b) {
    a.Swap(&b);
  }
  inline void Swap(ServerMsgDelQuest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ServerMsgDelQuest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ServerMsgDelQuest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ServerMsgDelQuest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ServerMsgDelQuest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ServerMsgDelQuest& from) {
    ServerMsgDelQuest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServerMsgDelQuest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "servermessage.ServerMsgDelQuest";
  }
  protected:
  explicit ServerMsgDelQuest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerIdFieldNumber = 1,
    kQuestIdFieldNumber = 2,
  };
  // int32 player_id = 1;
  void clear_player_id();
  int32_t player_id() const;
  void set_player_id(int32_t value);
  private:
  int32_t _internal_player_id() const;
  void _internal_set_player_id(int32_t value);
  public:

  // int32 quest_id = 2;
  void clear_quest_id();
  int32_t quest_id() const;
  void set_quest_id(int32_t value);
  private:
  int32_t _internal_quest_id() const;
  void _internal_set_quest_id(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:servermessage.ServerMsgDelQuest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int32_t player_id_;
    int32_t quest_id_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_server_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class ServerMsgDeltailOfHealsAndDamage final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:servermessage.ServerMsgDeltailOfHealsAndDamage) */ {
 public:
  inline ServerMsgDeltailOfHealsAndDamage() : ServerMsgDeltailOfHealsAndDamage(nullptr) {}
  ~ServerMsgDeltailOfHealsAndDamage() override;
  explicit PROTOBUF_CONSTEXPR ServerMsgDeltailOfHealsAndDamage(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ServerMsgDeltailOfHealsAndDamage(const ServerMsgDeltailOfHealsAndDamage& from);
  ServerMsgDeltailOfHealsAndDamage(ServerMsgDeltailOfHealsAndDamage&& from) noexcept
    : ServerMsgDeltailOfHealsAndDamage() {
    *this = ::std::move(from);
  }

  inline ServerMsgDeltailOfHealsAndDamage& operator=(const ServerMsgDeltailOfHealsAndDamage& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServerMsgDeltailOfHealsAndDamage& operator=(ServerMsgDeltailOfHealsAndDamage&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ServerMsgDeltailOfHealsAndDamage& default_instance() {
    return *internal_default_instance();
  }
  static inline const ServerMsgDeltailOfHealsAndDamage* internal_default_instance() {
    return reinterpret_cast<const ServerMsgDeltailOfHealsAndDamage*>(
               &_ServerMsgDeltailOfHealsAndDamage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(ServerMsgDeltailOfHealsAndDamage& a, ServerMsgDeltailOfHealsAndDamage& b) {
    a.Swap(&b);
  }
  inline void Swap(ServerMsgDeltailOfHealsAndDamage* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ServerMsgDeltailOfHealsAndDamage* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ServerMsgDeltailOfHealsAndDamage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ServerMsgDeltailOfHealsAndDamage>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ServerMsgDeltailOfHealsAndDamage& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ServerMsgDeltailOfHealsAndDamage& from) {
    ServerMsgDeltailOfHealsAndDamage::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServerMsgDeltailOfHealsAndDamage* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "servermessage.ServerMsgDeltailOfHealsAndDamage";
  }
  protected:
  explicit ServerMsgDeltailOfHealsAndDamage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHpModifyFieldNumber = 1,
    kObjectIdFieldNumber = 2,
    kSenderIdFieldNumber = 3,
    kSenderLogicCountFieldNumber = 4,
    kCriticalHitFieldNumber = 5,
    kDeathBlowFieldNumber = 6,
  };
  // int32 hp_modify = 1;
  void clear_hp_modify();
  int32_t hp_modify() const;
  void set_hp_modify(int32_t value);
  private:
  int32_t _internal_hp_modify() const;
  void _internal_set_hp_modify(int32_t value);
  public:

  // int32 object_id = 2;
  void clear_object_id();
  int32_t object_id() const;
  void set_object_id(int32_t value);
  private:
  int32_t _internal_object_id() const;
  void _internal_set_object_id(int32_t value);
  public:

  // int32 sender_id = 3;
  void clear_sender_id();
  int32_t sender_id() const;
  void set_sender_id(int32_t value);
  private:
  int32_t _internal_sender_id() const;
  void _internal_set_sender_id(int32_t value);
  public:

  // int32 sender_logic_count = 4;
  void clear_sender_logic_count();
  int32_t sender_logic_count() const;
  void set_sender_logic_count(int32_t value);
  private:
  int32_t _internal_sender_logic_count() const;
  void _internal_set_sender_logic_count(int32_t value);
  public:

  // bool critical_hit = 5;
  void clear_critical_hit();
  bool critical_hit() const;
  void set_critical_hit(bool value);
  private:
  bool _internal_critical_hit() const;
  void _internal_set_critical_hit(bool value);
  public:

  // bool death_blow = 6;
  void clear_death_blow();
  bool death_blow() const;
  void set_death_blow(bool value);
  private:
  bool _internal_death_blow() const;
  void _internal_set_death_blow(bool value);
  public:

  // @@protoc_insertion_point(class_scope:servermessage.ServerMsgDeltailOfHealsAndDamage)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int32_t hp_modify_;
    int32_t object_id_;
    int32_t sender_id_;
    int32_t sender_logic_count_;
    bool critical_hit_;
    bool death_blow_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_server_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class ServerMsgDetailAbilityInfo final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:servermessage.ServerMsgDetailAbilityInfo) */ {
 public:
  inline ServerMsgDetailAbilityInfo() : ServerMsgDetailAbilityInfo(nullptr) {}
  ~ServerMsgDetailAbilityInfo() override;
  explicit PROTOBUF_CONSTEXPR ServerMsgDetailAbilityInfo(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ServerMsgDetailAbilityInfo(const ServerMsgDetailAbilityInfo& from);
  ServerMsgDetailAbilityInfo(ServerMsgDetailAbilityInfo&& from) noexcept
    : ServerMsgDetailAbilityInfo() {
    *this = ::std::move(from);
  }

  inline ServerMsgDetailAbilityInfo& operator=(const ServerMsgDetailAbilityInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServerMsgDetailAbilityInfo& operator=(ServerMsgDetailAbilityInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ServerMsgDetailAbilityInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const ServerMsgDetailAbilityInfo* internal_default_instance() {
    return reinterpret_cast<const ServerMsgDetailAbilityInfo*>(
               &_ServerMsgDetailAbilityInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(ServerMsgDetailAbilityInfo& a, ServerMsgDetailAbilityInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(ServerMsgDetailAbilityInfo* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ServerMsgDetailAbilityInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ServerMsgDetailAbilityInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ServerMsgDetailAbilityInfo>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ServerMsgDetailAbilityInfo& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ServerMsgDetailAbilityInfo& from) {
    ServerMsgDetailAbilityInfo::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServerMsgDetailAbilityInfo* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "servermessage.ServerMsgDetailAbilityInfo";
  }
  protected:
  explicit ServerMsgDetailAbilityInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAbilityListFieldNumber = 4,
    kAbilitysFieldNumber = 5,
    kNextNeedLevelFieldNumber = 7,
    kNextNeedMoneyFieldNumber = 8,
    kNextNeedExpFieldNumber = 9,
    kPrescrFieldNumber = 6,
    kObjectIdFieldNumber = 1,
    kSceneIdFieldNumber = 2,
    kAbilityCountFieldNumber = 3,
  };
  // repeated int32 ability_list = 4;
  int ability_list_size() const;
  private:
  int _internal_ability_list_size() const;
  public:
  void clear_ability_list();
  private:
  int32_t _internal_ability_list(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      _internal_ability_list() const;
  void _internal_add_ability_list(int32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      _internal_mutable_ability_list();
  public:
  int32_t ability_list(int index) const;
  void set_ability_list(int index, int32_t value);
  void add_ability_list(int32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      ability_list() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      mutable_ability_list();

  // repeated .base.PlayerAbility abilitys = 5;
  int abilitys_size() const;
  private:
  int _internal_abilitys_size() const;
  public:
  void clear_abilitys();
  ::base::PlayerAbility* mutable_abilitys(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::base::PlayerAbility >*
      mutable_abilitys();
  private:
  const ::base::PlayerAbility& _internal_abilitys(int index) const;
  ::base::PlayerAbility* _internal_add_abilitys();
  public:
  const ::base::PlayerAbility& abilitys(int index) const;
  ::base::PlayerAbility* add_abilitys();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::base::PlayerAbility >&
      abilitys() const;

  // repeated int32 next_need_level = 7;
  int next_need_level_size() const;
  private:
  int _internal_next_need_level_size() const;
  public:
  void clear_next_need_level();
  private:
  int32_t _internal_next_need_level(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      _internal_next_need_level() const;
  void _internal_add_next_need_level(int32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      _internal_mutable_next_need_level();
  public:
  int32_t next_need_level(int index) const;
  void set_next_need_level(int index, int32_t value);
  void add_next_need_level(int32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      next_need_level() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      mutable_next_need_level();

  // repeated int32 next_need_money = 8;
  int next_need_money_size() const;
  private:
  int _internal_next_need_money_size() const;
  public:
  void clear_next_need_money();
  private:
  int32_t _internal_next_need_money(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      _internal_next_need_money() const;
  void _internal_add_next_need_money(int32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      _internal_mutable_next_need_money();
  public:
  int32_t next_need_money(int index) const;
  void set_next_need_money(int index, int32_t value);
  void add_next_need_money(int32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      next_need_money() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      mutable_next_need_money();

  // repeated int32 next_need_exp = 9;
  int next_need_exp_size() const;
  private:
  int _internal_next_need_exp_size() const;
  public:
  void clear_next_need_exp();
  private:
  int32_t _internal_next_need_exp(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      _internal_next_need_exp() const;
  void _internal_add_next_need_exp(int32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      _internal_mutable_next_need_exp();
  public:
  int32_t next_need_exp(int index) const;
  void set_next_need_exp(int index, int32_t value);
  void add_next_need_exp(int32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      next_need_exp() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      mutable_next_need_exp();

  // string prescr = 6;
  void clear_prescr();
  const std::string& prescr() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_prescr(ArgT0&& arg0, ArgT... args);
  std::string* mutable_prescr();
  PROTOBUF_NODISCARD std::string* release_prescr();
  void set_allocated_prescr(std::string* prescr);
  private:
  const std::string& _internal_prescr() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_prescr(const std::string& value);
  std::string* _internal_mutable_prescr();
  public:

  // int32 object_id = 1;
  void clear_object_id();
  int32_t object_id() const;
  void set_object_id(int32_t value);
  private:
  int32_t _internal_object_id() const;
  void _internal_set_object_id(int32_t value);
  public:

  // int32 scene_id = 2;
  void clear_scene_id();
  int32_t scene_id() const;
  void set_scene_id(int32_t value);
  private:
  int32_t _internal_scene_id() const;
  void _internal_set_scene_id(int32_t value);
  public:

  // int32 ability_count = 3;
  void clear_ability_count();
  int32_t ability_count() const;
  void set_ability_count(int32_t value);
  private:
  int32_t _internal_ability_count() const;
  void _internal_set_ability_count(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:servermessage.ServerMsgDetailAbilityInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t > ability_list_;
    mutable std::atomic<int> _ability_list_cached_byte_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::base::PlayerAbility > abilitys_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t > next_need_level_;
    mutable std::atomic<int> _next_need_level_cached_byte_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t > next_need_money_;
    mutable std::atomic<int> _next_need_money_cached_byte_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t > next_need_exp_;
    mutable std::atomic<int> _next_need_exp_cached_byte_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr prescr_;
    int32_t object_id_;
    int32_t scene_id_;
    int32_t ability_count_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_server_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class ServerMsgDetailAttrib final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:servermessage.ServerMsgDetailAttrib) */ {
 public:
  inline ServerMsgDetailAttrib() : ServerMsgDetailAttrib(nullptr) {}
  ~ServerMsgDetailAttrib() override;
  explicit PROTOBUF_CONSTEXPR ServerMsgDetailAttrib(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ServerMsgDetailAttrib(const ServerMsgDetailAttrib& from);
  ServerMsgDetailAttrib(ServerMsgDetailAttrib&& from) noexcept
    : ServerMsgDetailAttrib() {
    *this = ::std::move(from);
  }

  inline ServerMsgDetailAttrib& operator=(const ServerMsgDetailAttrib& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServerMsgDetailAttrib& operator=(ServerMsgDetailAttrib&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ServerMsgDetailAttrib& default_instance() {
    return *internal_default_instance();
  }
  static inline const ServerMsgDetailAttrib* internal_default_instance() {
    return reinterpret_cast<const ServerMsgDetailAttrib*>(
               &_ServerMsgDetailAttrib_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(ServerMsgDetailAttrib& a, ServerMsgDetailAttrib& b) {
    a.Swap(&b);
  }
  inline void Swap(ServerMsgDetailAttrib* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ServerMsgDetailAttrib* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ServerMsgDetailAttrib* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ServerMsgDetailAttrib>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ServerMsgDetailAttrib& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ServerMsgDetailAttrib& from) {
    ServerMsgDetailAttrib::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServerMsgDetailAttrib* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "servermessage.ServerMsgDetailAttrib";
  }
  protected:
  explicit ServerMsgDetailAttrib(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSkillsFieldNumber = 1,
    kExtraDataFieldNumber = 2,
    kNameFieldNumber = 8,
    kNicknameFieldNumber = 9,
    kFlagsFieldNumber = 3,
    kHorseGuidFieldNumber = 5,
    kMapIdFieldNumber = 4,
    kTradeIndexFieldNumber = 6,
    kDataIdFieldNumber = 7,
    kAiTypeFieldNumber = 10,
    kLevelFieldNumber = 11,
    kExpFieldNumber = 12,
    kHpFieldNumber = 13,
    kHpMaxFieldNumber = 14,
    kHorseStateFieldNumber = 15,
    kGenerationFieldNumber = 16,
    kHappinessFieldNumber = 17,
    kAttrNearFieldNumber = 18,
    kAttrFarFieldNumber = 19,
    kAttrMagicFieldNumber = 20,
    kDefNearFieldNumber = 21,
    kDefFarFieldNumber = 22,
    kDefMagicFieldNumber = 23,
    kHitFieldNumber = 24,
    kMissFieldNumber = 25,
    kCriticalFieldNumber = 26,
    kModelIdFieldNumber = 27,
    kMountIdFieldNumber = 28,
    kStrPerceptionFieldNumber = 29,
    kConPerceptionFieldNumber = 30,
    kDexPerceptionFieldNumber = 31,
    kIntPerceptionFieldNumber = 32,
    kStrPerceptionLimitFieldNumber = 33,
    kConPerceptionLimitFieldNumber = 34,
    kDexPerceptionLimitFieldNumber = 35,
    kIntPerceptionLimitFieldNumber = 36,
    kStrengthFieldNumber = 37,
    kConFieldNumber = 38,
    kDexFieldNumber = 39,
    kIntelligenceFieldNumber = 40,
    kGrowRateFieldNumber = 41,
    kRemainPointFieldNumber = 42,
    kStrengthPointFieldNumber = 43,
    kSmartnessPointFieldNumber = 44,
    kMindPointFieldNumber = 45,
    kConstitutionPointFieldNumber = 46,
    kIndexFieldNumber = 47,
    kStallOrderFieldNumber = 48,
    kPetLockFieldNumber = 49,
    kUnlockTimeFieldNumber = 50,
    kCurrentHorseFlagFieldNumber = 51,
  };
  // repeated .base.HorseSkill skills = 1;
  int skills_size() const;
  private:
  int _internal_skills_size() const;
  public:
  void clear_skills();
  ::base::HorseSkill* mutable_skills(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::base::HorseSkill >*
      mutable_skills();
  private:
  const ::base::HorseSkill& _internal_skills(int index) const;
  ::base::HorseSkill* _internal_add_skills();
  public:
  const ::base::HorseSkill& skills(int index) const;
  ::base::HorseSkill* add_skills();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::base::HorseSkill >&
      skills() const;

  // string extra_data = 2;
  void clear_extra_data();
  const std::string& extra_data() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_extra_data(ArgT0&& arg0, ArgT... args);
  std::string* mutable_extra_data();
  PROTOBUF_NODISCARD std::string* release_extra_data();
  void set_allocated_extra_data(std::string* extra_data);
  private:
  const std::string& _internal_extra_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_extra_data(const std::string& value);
  std::string* _internal_mutable_extra_data();
  public:

  // string name = 8;
  void clear_name();
  const std::string& name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // string nickname = 9;
  void clear_nickname();
  const std::string& nickname() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_nickname(ArgT0&& arg0, ArgT... args);
  std::string* mutable_nickname();
  PROTOBUF_NODISCARD std::string* release_nickname();
  void set_allocated_nickname(std::string* nickname);
  private:
  const std::string& _internal_nickname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_nickname(const std::string& value);
  std::string* _internal_mutable_nickname();
  public:

  // .base.Flag64 flags = 3;
  bool has_flags() const;
  private:
  bool _internal_has_flags() const;
  public:
  void clear_flags();
  const ::base::Flag64& flags() const;
  PROTOBUF_NODISCARD ::base::Flag64* release_flags();
  ::base::Flag64* mutable_flags();
  void set_allocated_flags(::base::Flag64* flags);
  private:
  const ::base::Flag64& _internal_flags() const;
  ::base::Flag64* _internal_mutable_flags();
  public:
  void unsafe_arena_set_allocated_flags(
      ::base::Flag64* flags);
  ::base::Flag64* unsafe_arena_release_flags();

  // .base.SHorseGuid horse_guid = 5;
  bool has_horse_guid() const;
  private:
  bool _internal_has_horse_guid() const;
  public:
  void clear_horse_guid();
  const ::base::SHorseGuid& horse_guid() const;
  PROTOBUF_NODISCARD ::base::SHorseGuid* release_horse_guid();
  ::base::SHorseGuid* mutable_horse_guid();
  void set_allocated_horse_guid(::base::SHorseGuid* horse_guid);
  private:
  const ::base::SHorseGuid& _internal_horse_guid() const;
  ::base::SHorseGuid* _internal_mutable_horse_guid();
  public:
  void unsafe_arena_set_allocated_horse_guid(
      ::base::SHorseGuid* horse_guid);
  ::base::SHorseGuid* unsafe_arena_release_horse_guid();

  // int32 map_id = 4;
  void clear_map_id();
  int32_t map_id() const;
  void set_map_id(int32_t value);
  private:
  int32_t _internal_map_id() const;
  void _internal_set_map_id(int32_t value);
  public:

  // int32 trade_index = 6;
  void clear_trade_index();
  int32_t trade_index() const;
  void set_trade_index(int32_t value);
  private:
  int32_t _internal_trade_index() const;
  void _internal_set_trade_index(int32_t value);
  public:

  // int32 data_id = 7;
  void clear_data_id();
  int32_t data_id() const;
  void set_data_id(int32_t value);
  private:
  int32_t _internal_data_id() const;
  void _internal_set_data_id(int32_t value);
  public:

  // int32 ai_type = 10;
  void clear_ai_type();
  int32_t ai_type() const;
  void set_ai_type(int32_t value);
  private:
  int32_t _internal_ai_type() const;
  void _internal_set_ai_type(int32_t value);
  public:

  // int32 level = 11;
  void clear_level();
  int32_t level() const;
  void set_level(int32_t value);
  private:
  int32_t _internal_level() const;
  void _internal_set_level(int32_t value);
  public:

  // int32 exp = 12;
  void clear_exp();
  int32_t exp() const;
  void set_exp(int32_t value);
  private:
  int32_t _internal_exp() const;
  void _internal_set_exp(int32_t value);
  public:

  // int32 hp = 13;
  void clear_hp();
  int32_t hp() const;
  void set_hp(int32_t value);
  private:
  int32_t _internal_hp() const;
  void _internal_set_hp(int32_t value);
  public:

  // int32 hp_max = 14;
  void clear_hp_max();
  int32_t hp_max() const;
  void set_hp_max(int32_t value);
  private:
  int32_t _internal_hp_max() const;
  void _internal_set_hp_max(int32_t value);
  public:

  // int32 horse_state = 15;
  void clear_horse_state();
  int32_t horse_state() const;
  void set_horse_state(int32_t value);
  private:
  int32_t _internal_horse_state() const;
  void _internal_set_horse_state(int32_t value);
  public:

  // int32 generation = 16;
  void clear_generation();
  int32_t generation() const;
  void set_generation(int32_t value);
  private:
  int32_t _internal_generation() const;
  void _internal_set_generation(int32_t value);
  public:

  // int32 happiness = 17;
  void clear_happiness();
  int32_t happiness() const;
  void set_happiness(int32_t value);
  private:
  int32_t _internal_happiness() const;
  void _internal_set_happiness(int32_t value);
  public:

  // int32 attr_near = 18;
  void clear_attr_near();
  int32_t attr_near() const;
  void set_attr_near(int32_t value);
  private:
  int32_t _internal_attr_near() const;
  void _internal_set_attr_near(int32_t value);
  public:

  // int32 attr_far = 19;
  void clear_attr_far();
  int32_t attr_far() const;
  void set_attr_far(int32_t value);
  private:
  int32_t _internal_attr_far() const;
  void _internal_set_attr_far(int32_t value);
  public:

  // int32 attr_magic = 20;
  void clear_attr_magic();
  int32_t attr_magic() const;
  void set_attr_magic(int32_t value);
  private:
  int32_t _internal_attr_magic() const;
  void _internal_set_attr_magic(int32_t value);
  public:

  // int32 def_near = 21;
  void clear_def_near();
  int32_t def_near() const;
  void set_def_near(int32_t value);
  private:
  int32_t _internal_def_near() const;
  void _internal_set_def_near(int32_t value);
  public:

  // int32 def_far = 22;
  void clear_def_far();
  int32_t def_far() const;
  void set_def_far(int32_t value);
  private:
  int32_t _internal_def_far() const;
  void _internal_set_def_far(int32_t value);
  public:

  // int32 def_magic = 23;
  void clear_def_magic();
  int32_t def_magic() const;
  void set_def_magic(int32_t value);
  private:
  int32_t _internal_def_magic() const;
  void _internal_set_def_magic(int32_t value);
  public:

  // int32 hit = 24;
  void clear_hit();
  int32_t hit() const;
  void set_hit(int32_t value);
  private:
  int32_t _internal_hit() const;
  void _internal_set_hit(int32_t value);
  public:

  // int32 miss = 25;
  void clear_miss();
  int32_t miss() const;
  void set_miss(int32_t value);
  private:
  int32_t _internal_miss() const;
  void _internal_set_miss(int32_t value);
  public:

  // int32 critical = 26;
  void clear_critical();
  int32_t critical() const;
  void set_critical(int32_t value);
  private:
  int32_t _internal_critical() const;
  void _internal_set_critical(int32_t value);
  public:

  // int32 model_id = 27;
  void clear_model_id();
  int32_t model_id() const;
  void set_model_id(int32_t value);
  private:
  int32_t _internal_model_id() const;
  void _internal_set_model_id(int32_t value);
  public:

  // int32 mount_id = 28;
  void clear_mount_id();
  int32_t mount_id() const;
  void set_mount_id(int32_t value);
  private:
  int32_t _internal_mount_id() const;
  void _internal_set_mount_id(int32_t value);
  public:

  // int32 str_perception = 29;
  void clear_str_perception();
  int32_t str_perception() const;
  void set_str_perception(int32_t value);
  private:
  int32_t _internal_str_perception() const;
  void _internal_set_str_perception(int32_t value);
  public:

  // int32 con_perception = 30;
  void clear_con_perception();
  int32_t con_perception() const;
  void set_con_perception(int32_t value);
  private:
  int32_t _internal_con_perception() const;
  void _internal_set_con_perception(int32_t value);
  public:

  // int32 dex_perception = 31;
  void clear_dex_perception();
  int32_t dex_perception() const;
  void set_dex_perception(int32_t value);
  private:
  int32_t _internal_dex_perception() const;
  void _internal_set_dex_perception(int32_t value);
  public:

  // int32 int_perception = 32;
  void clear_int_perception();
  int32_t int_perception() const;
  void set_int_perception(int32_t value);
  private:
  int32_t _internal_int_perception() const;
  void _internal_set_int_perception(int32_t value);
  public:

  // int32 str_perception_limit = 33;
  void clear_str_perception_limit();
  int32_t str_perception_limit() const;
  void set_str_perception_limit(int32_t value);
  private:
  int32_t _internal_str_perception_limit() const;
  void _internal_set_str_perception_limit(int32_t value);
  public:

  // int32 con_perception_limit = 34;
  void clear_con_perception_limit();
  int32_t con_perception_limit() const;
  void set_con_perception_limit(int32_t value);
  private:
  int32_t _internal_con_perception_limit() const;
  void _internal_set_con_perception_limit(int32_t value);
  public:

  // int32 dex_perception_limit = 35;
  void clear_dex_perception_limit();
  int32_t dex_perception_limit() const;
  void set_dex_perception_limit(int32_t value);
  private:
  int32_t _internal_dex_perception_limit() const;
  void _internal_set_dex_perception_limit(int32_t value);
  public:

  // int32 int_perception_limit = 36;
  void clear_int_perception_limit();
  int32_t int_perception_limit() const;
  void set_int_perception_limit(int32_t value);
  private:
  int32_t _internal_int_perception_limit() const;
  void _internal_set_int_perception_limit(int32_t value);
  public:

  // int32 strength = 37;
  void clear_strength();
  int32_t strength() const;
  void set_strength(int32_t value);
  private:
  int32_t _internal_strength() const;
  void _internal_set_strength(int32_t value);
  public:

  // int32 con = 38;
  void clear_con();
  int32_t con() const;
  void set_con(int32_t value);
  private:
  int32_t _internal_con() const;
  void _internal_set_con(int32_t value);
  public:

  // int32 dex = 39;
  void clear_dex();
  int32_t dex() const;
  void set_dex(int32_t value);
  private:
  int32_t _internal_dex() const;
  void _internal_set_dex(int32_t value);
  public:

  // int32 intelligence = 40;
  void clear_intelligence();
  int32_t intelligence() const;
  void set_intelligence(int32_t value);
  private:
  int32_t _internal_intelligence() const;
  void _internal_set_intelligence(int32_t value);
  public:

  // int32 grow_rate = 41;
  void clear_grow_rate();
  int32_t grow_rate() const;
  void set_grow_rate(int32_t value);
  private:
  int32_t _internal_grow_rate() const;
  void _internal_set_grow_rate(int32_t value);
  public:

  // int32 remain_point = 42;
  void clear_remain_point();
  int32_t remain_point() const;
  void set_remain_point(int32_t value);
  private:
  int32_t _internal_remain_point() const;
  void _internal_set_remain_point(int32_t value);
  public:

  // int32 strength_point = 43;
  void clear_strength_point();
  int32_t strength_point() const;
  void set_strength_point(int32_t value);
  private:
  int32_t _internal_strength_point() const;
  void _internal_set_strength_point(int32_t value);
  public:

  // int32 smartness_point = 44;
  void clear_smartness_point();
  int32_t smartness_point() const;
  void set_smartness_point(int32_t value);
  private:
  int32_t _internal_smartness_point() const;
  void _internal_set_smartness_point(int32_t value);
  public:

  // int32 mind_point = 45;
  void clear_mind_point();
  int32_t mind_point() const;
  void set_mind_point(int32_t value);
  private:
  int32_t _internal_mind_point() const;
  void _internal_set_mind_point(int32_t value);
  public:

  // int32 constitution_point = 46;
  void clear_constitution_point();
  int32_t constitution_point() const;
  void set_constitution_point(int32_t value);
  private:
  int32_t _internal_constitution_point() const;
  void _internal_set_constitution_point(int32_t value);
  public:

  // int32 index = 47;
  void clear_index();
  int32_t index() const;
  void set_index(int32_t value);
  private:
  int32_t _internal_index() const;
  void _internal_set_index(int32_t value);
  public:

  // int32 stall_order = 48;
  void clear_stall_order();
  int32_t stall_order() const;
  void set_stall_order(int32_t value);
  private:
  int32_t _internal_stall_order() const;
  void _internal_set_stall_order(int32_t value);
  public:

  // int32 pet_lock = 49;
  void clear_pet_lock();
  int32_t pet_lock() const;
  void set_pet_lock(int32_t value);
  private:
  int32_t _internal_pet_lock() const;
  void _internal_set_pet_lock(int32_t value);
  public:

  // int32 unlock_time = 50;
  void clear_unlock_time();
  int32_t unlock_time() const;
  void set_unlock_time(int32_t value);
  private:
  int32_t _internal_unlock_time() const;
  void _internal_set_unlock_time(int32_t value);
  public:

  // bool current_horse_flag = 51;
  void clear_current_horse_flag();
  bool current_horse_flag() const;
  void set_current_horse_flag(bool value);
  private:
  bool _internal_current_horse_flag() const;
  void _internal_set_current_horse_flag(bool value);
  public:

  // @@protoc_insertion_point(class_scope:servermessage.ServerMsgDetailAttrib)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::base::HorseSkill > skills_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr extra_data_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr nickname_;
    ::base::Flag64* flags_;
    ::base::SHorseGuid* horse_guid_;
    int32_t map_id_;
    int32_t trade_index_;
    int32_t data_id_;
    int32_t ai_type_;
    int32_t level_;
    int32_t exp_;
    int32_t hp_;
    int32_t hp_max_;
    int32_t horse_state_;
    int32_t generation_;
    int32_t happiness_;
    int32_t attr_near_;
    int32_t attr_far_;
    int32_t attr_magic_;
    int32_t def_near_;
    int32_t def_far_;
    int32_t def_magic_;
    int32_t hit_;
    int32_t miss_;
    int32_t critical_;
    int32_t model_id_;
    int32_t mount_id_;
    int32_t str_perception_;
    int32_t con_perception_;
    int32_t dex_perception_;
    int32_t int_perception_;
    int32_t str_perception_limit_;
    int32_t con_perception_limit_;
    int32_t dex_perception_limit_;
    int32_t int_perception_limit_;
    int32_t strength_;
    int32_t con_;
    int32_t dex_;
    int32_t intelligence_;
    int32_t grow_rate_;
    int32_t remain_point_;
    int32_t strength_point_;
    int32_t smartness_point_;
    int32_t mind_point_;
    int32_t constitution_point_;
    int32_t index_;
    int32_t stall_order_;
    int32_t pet_lock_;
    int32_t unlock_time_;
    bool current_horse_flag_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_server_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class ServerMsgDetailAttribPet final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:servermessage.ServerMsgDetailAttribPet) */ {
 public:
  inline ServerMsgDetailAttribPet() : ServerMsgDetailAttribPet(nullptr) {}
  ~ServerMsgDetailAttribPet() override;
  explicit PROTOBUF_CONSTEXPR ServerMsgDetailAttribPet(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ServerMsgDetailAttribPet(const ServerMsgDetailAttribPet& from);
  ServerMsgDetailAttribPet(ServerMsgDetailAttribPet&& from) noexcept
    : ServerMsgDetailAttribPet() {
    *this = ::std::move(from);
  }

  inline ServerMsgDetailAttribPet& operator=(const ServerMsgDetailAttribPet& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServerMsgDetailAttribPet& operator=(ServerMsgDetailAttribPet&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ServerMsgDetailAttribPet& default_instance() {
    return *internal_default_instance();
  }
  static inline const ServerMsgDetailAttribPet* internal_default_instance() {
    return reinterpret_cast<const ServerMsgDetailAttribPet*>(
               &_ServerMsgDetailAttribPet_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(ServerMsgDetailAttribPet& a, ServerMsgDetailAttribPet& b) {
    a.Swap(&b);
  }
  inline void Swap(ServerMsgDetailAttribPet* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ServerMsgDetailAttribPet* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ServerMsgDetailAttribPet* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ServerMsgDetailAttribPet>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ServerMsgDetailAttribPet& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ServerMsgDetailAttribPet& from) {
    ServerMsgDetailAttribPet::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServerMsgDetailAttribPet* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "servermessage.ServerMsgDetailAttribPet";
  }
  protected:
  explicit ServerMsgDetailAttribPet(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSkillsFieldNumber = 1,
    kExtraDataFieldNumber = 2,
    kNameFieldNumber = 8,
    kNicknameFieldNumber = 9,
    kFlagsFieldNumber = 3,
    kHorseGuidFieldNumber = 5,
    kMapIdFieldNumber = 4,
    kTradeIndexFieldNumber = 6,
    kDataIdFieldNumber = 7,
    kAiTypeFieldNumber = 10,
    kLevelFieldNumber = 11,
    kExpFieldNumber = 12,
    kHpFieldNumber = 13,
    kHpMaxFieldNumber = 14,
    kHorseStateFieldNumber = 15,
    kGenerationFieldNumber = 16,
    kHappinessFieldNumber = 17,
    kAttrNearFieldNumber = 18,
    kAttrFarFieldNumber = 19,
    kAttrMagicFieldNumber = 20,
    kDefNearFieldNumber = 21,
    kDefFarFieldNumber = 22,
    kDefMagicFieldNumber = 23,
    kHitFieldNumber = 24,
    kMissFieldNumber = 25,
    kCriticalFieldNumber = 26,
    kModelIdFieldNumber = 27,
    kMountIdFieldNumber = 28,
    kStrPerceptionFieldNumber = 29,
    kConPerceptionFieldNumber = 30,
    kDexPerceptionFieldNumber = 31,
    kIntPerceptionFieldNumber = 32,
    kStrPerceptionLimitFieldNumber = 33,
    kConPerceptionLimitFieldNumber = 34,
    kDexPerceptionLimitFieldNumber = 35,
    kIntPerceptionLimitFieldNumber = 36,
    kStrengthFieldNumber = 37,
    kConFieldNumber = 38,
    kDexFieldNumber = 39,
    kIntelligenceFieldNumber = 40,
    kGrowRateFieldNumber = 41,
    kRemainPointFieldNumber = 42,
    kStrengthPointFieldNumber = 43,
    kSmartnessPointFieldNumber = 44,
    kMindPointFieldNumber = 45,
    kConstitutionPointFieldNumber = 46,
    kIndexFieldNumber = 47,
    kStallOrderFieldNumber = 48,
    kPetLockFieldNumber = 49,
    kUnlockTimeFieldNumber = 50,
  };
  // repeated .base.HorseSkill skills = 1;
  int skills_size() const;
  private:
  int _internal_skills_size() const;
  public:
  void clear_skills();
  ::base::HorseSkill* mutable_skills(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::base::HorseSkill >*
      mutable_skills();
  private:
  const ::base::HorseSkill& _internal_skills(int index) const;
  ::base::HorseSkill* _internal_add_skills();
  public:
  const ::base::HorseSkill& skills(int index) const;
  ::base::HorseSkill* add_skills();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::base::HorseSkill >&
      skills() const;

  // string extra_data = 2;
  void clear_extra_data();
  const std::string& extra_data() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_extra_data(ArgT0&& arg0, ArgT... args);
  std::string* mutable_extra_data();
  PROTOBUF_NODISCARD std::string* release_extra_data();
  void set_allocated_extra_data(std::string* extra_data);
  private:
  const std::string& _internal_extra_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_extra_data(const std::string& value);
  std::string* _internal_mutable_extra_data();
  public:

  // string name = 8;
  void clear_name();
  const std::string& name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // string nickname = 9;
  void clear_nickname();
  const std::string& nickname() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_nickname(ArgT0&& arg0, ArgT... args);
  std::string* mutable_nickname();
  PROTOBUF_NODISCARD std::string* release_nickname();
  void set_allocated_nickname(std::string* nickname);
  private:
  const std::string& _internal_nickname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_nickname(const std::string& value);
  std::string* _internal_mutable_nickname();
  public:

  // .base.Flag64 flags = 3;
  bool has_flags() const;
  private:
  bool _internal_has_flags() const;
  public:
  void clear_flags();
  const ::base::Flag64& flags() const;
  PROTOBUF_NODISCARD ::base::Flag64* release_flags();
  ::base::Flag64* mutable_flags();
  void set_allocated_flags(::base::Flag64* flags);
  private:
  const ::base::Flag64& _internal_flags() const;
  ::base::Flag64* _internal_mutable_flags();
  public:
  void unsafe_arena_set_allocated_flags(
      ::base::Flag64* flags);
  ::base::Flag64* unsafe_arena_release_flags();

  // .base.SHorseGuid horse_guid = 5;
  bool has_horse_guid() const;
  private:
  bool _internal_has_horse_guid() const;
  public:
  void clear_horse_guid();
  const ::base::SHorseGuid& horse_guid() const;
  PROTOBUF_NODISCARD ::base::SHorseGuid* release_horse_guid();
  ::base::SHorseGuid* mutable_horse_guid();
  void set_allocated_horse_guid(::base::SHorseGuid* horse_guid);
  private:
  const ::base::SHorseGuid& _internal_horse_guid() const;
  ::base::SHorseGuid* _internal_mutable_horse_guid();
  public:
  void unsafe_arena_set_allocated_horse_guid(
      ::base::SHorseGuid* horse_guid);
  ::base::SHorseGuid* unsafe_arena_release_horse_guid();

  // int32 map_id = 4;
  void clear_map_id();
  int32_t map_id() const;
  void set_map_id(int32_t value);
  private:
  int32_t _internal_map_id() const;
  void _internal_set_map_id(int32_t value);
  public:

  // int32 trade_index = 6;
  void clear_trade_index();
  int32_t trade_index() const;
  void set_trade_index(int32_t value);
  private:
  int32_t _internal_trade_index() const;
  void _internal_set_trade_index(int32_t value);
  public:

  // int32 data_id = 7;
  void clear_data_id();
  int32_t data_id() const;
  void set_data_id(int32_t value);
  private:
  int32_t _internal_data_id() const;
  void _internal_set_data_id(int32_t value);
  public:

  // int32 ai_type = 10;
  void clear_ai_type();
  int32_t ai_type() const;
  void set_ai_type(int32_t value);
  private:
  int32_t _internal_ai_type() const;
  void _internal_set_ai_type(int32_t value);
  public:

  // int32 level = 11;
  void clear_level();
  int32_t level() const;
  void set_level(int32_t value);
  private:
  int32_t _internal_level() const;
  void _internal_set_level(int32_t value);
  public:

  // int32 exp = 12;
  void clear_exp();
  int32_t exp() const;
  void set_exp(int32_t value);
  private:
  int32_t _internal_exp() const;
  void _internal_set_exp(int32_t value);
  public:

  // int32 hp = 13;
  void clear_hp();
  int32_t hp() const;
  void set_hp(int32_t value);
  private:
  int32_t _internal_hp() const;
  void _internal_set_hp(int32_t value);
  public:

  // int32 hp_max = 14;
  void clear_hp_max();
  int32_t hp_max() const;
  void set_hp_max(int32_t value);
  private:
  int32_t _internal_hp_max() const;
  void _internal_set_hp_max(int32_t value);
  public:

  // int32 horse_state = 15;
  void clear_horse_state();
  int32_t horse_state() const;
  void set_horse_state(int32_t value);
  private:
  int32_t _internal_horse_state() const;
  void _internal_set_horse_state(int32_t value);
  public:

  // int32 generation = 16;
  void clear_generation();
  int32_t generation() const;
  void set_generation(int32_t value);
  private:
  int32_t _internal_generation() const;
  void _internal_set_generation(int32_t value);
  public:

  // int32 happiness = 17;
  void clear_happiness();
  int32_t happiness() const;
  void set_happiness(int32_t value);
  private:
  int32_t _internal_happiness() const;
  void _internal_set_happiness(int32_t value);
  public:

  // int32 attr_near = 18;
  void clear_attr_near();
  int32_t attr_near() const;
  void set_attr_near(int32_t value);
  private:
  int32_t _internal_attr_near() const;
  void _internal_set_attr_near(int32_t value);
  public:

  // int32 attr_far = 19;
  void clear_attr_far();
  int32_t attr_far() const;
  void set_attr_far(int32_t value);
  private:
  int32_t _internal_attr_far() const;
  void _internal_set_attr_far(int32_t value);
  public:

  // int32 attr_magic = 20;
  void clear_attr_magic();
  int32_t attr_magic() const;
  void set_attr_magic(int32_t value);
  private:
  int32_t _internal_attr_magic() const;
  void _internal_set_attr_magic(int32_t value);
  public:

  // int32 def_near = 21;
  void clear_def_near();
  int32_t def_near() const;
  void set_def_near(int32_t value);
  private:
  int32_t _internal_def_near() const;
  void _internal_set_def_near(int32_t value);
  public:

  // int32 def_far = 22;
  void clear_def_far();
  int32_t def_far() const;
  void set_def_far(int32_t value);
  private:
  int32_t _internal_def_far() const;
  void _internal_set_def_far(int32_t value);
  public:

  // int32 def_magic = 23;
  void clear_def_magic();
  int32_t def_magic() const;
  void set_def_magic(int32_t value);
  private:
  int32_t _internal_def_magic() const;
  void _internal_set_def_magic(int32_t value);
  public:

  // int32 hit = 24;
  void clear_hit();
  int32_t hit() const;
  void set_hit(int32_t value);
  private:
  int32_t _internal_hit() const;
  void _internal_set_hit(int32_t value);
  public:

  // int32 miss = 25;
  void clear_miss();
  int32_t miss() const;
  void set_miss(int32_t value);
  private:
  int32_t _internal_miss() const;
  void _internal_set_miss(int32_t value);
  public:

  // int32 critical = 26;
  void clear_critical();
  int32_t critical() const;
  void set_critical(int32_t value);
  private:
  int32_t _internal_critical() const;
  void _internal_set_critical(int32_t value);
  public:

  // int32 model_id = 27;
  void clear_model_id();
  int32_t model_id() const;
  void set_model_id(int32_t value);
  private:
  int32_t _internal_model_id() const;
  void _internal_set_model_id(int32_t value);
  public:

  // int32 mount_id = 28;
  void clear_mount_id();
  int32_t mount_id() const;
  void set_mount_id(int32_t value);
  private:
  int32_t _internal_mount_id() const;
  void _internal_set_mount_id(int32_t value);
  public:

  // int32 str_perception = 29;
  void clear_str_perception();
  int32_t str_perception() const;
  void set_str_perception(int32_t value);
  private:
  int32_t _internal_str_perception() const;
  void _internal_set_str_perception(int32_t value);
  public:

  // int32 con_perception = 30;
  void clear_con_perception();
  int32_t con_perception() const;
  void set_con_perception(int32_t value);
  private:
  int32_t _internal_con_perception() const;
  void _internal_set_con_perception(int32_t value);
  public:

  // int32 dex_perception = 31;
  void clear_dex_perception();
  int32_t dex_perception() const;
  void set_dex_perception(int32_t value);
  private:
  int32_t _internal_dex_perception() const;
  void _internal_set_dex_perception(int32_t value);
  public:

  // int32 int_perception = 32;
  void clear_int_perception();
  int32_t int_perception() const;
  void set_int_perception(int32_t value);
  private:
  int32_t _internal_int_perception() const;
  void _internal_set_int_perception(int32_t value);
  public:

  // int32 str_perception_limit = 33;
  void clear_str_perception_limit();
  int32_t str_perception_limit() const;
  void set_str_perception_limit(int32_t value);
  private:
  int32_t _internal_str_perception_limit() const;
  void _internal_set_str_perception_limit(int32_t value);
  public:

  // int32 con_perception_limit = 34;
  void clear_con_perception_limit();
  int32_t con_perception_limit() const;
  void set_con_perception_limit(int32_t value);
  private:
  int32_t _internal_con_perception_limit() const;
  void _internal_set_con_perception_limit(int32_t value);
  public:

  // int32 dex_perception_limit = 35;
  void clear_dex_perception_limit();
  int32_t dex_perception_limit() const;
  void set_dex_perception_limit(int32_t value);
  private:
  int32_t _internal_dex_perception_limit() const;
  void _internal_set_dex_perception_limit(int32_t value);
  public:

  // int32 int_perception_limit = 36;
  void clear_int_perception_limit();
  int32_t int_perception_limit() const;
  void set_int_perception_limit(int32_t value);
  private:
  int32_t _internal_int_perception_limit() const;
  void _internal_set_int_perception_limit(int32_t value);
  public:

  // int32 strength = 37;
  void clear_strength();
  int32_t strength() const;
  void set_strength(int32_t value);
  private:
  int32_t _internal_strength() const;
  void _internal_set_strength(int32_t value);
  public:

  // int32 con = 38;
  void clear_con();
  int32_t con() const;
  void set_con(int32_t value);
  private:
  int32_t _internal_con() const;
  void _internal_set_con(int32_t value);
  public:

  // int32 dex = 39;
  void clear_dex();
  int32_t dex() const;
  void set_dex(int32_t value);
  private:
  int32_t _internal_dex() const;
  void _internal_set_dex(int32_t value);
  public:

  // int32 intelligence = 40;
  void clear_intelligence();
  int32_t intelligence() const;
  void set_intelligence(int32_t value);
  private:
  int32_t _internal_intelligence() const;
  void _internal_set_intelligence(int32_t value);
  public:

  // int32 grow_rate = 41;
  void clear_grow_rate();
  int32_t grow_rate() const;
  void set_grow_rate(int32_t value);
  private:
  int32_t _internal_grow_rate() const;
  void _internal_set_grow_rate(int32_t value);
  public:

  // int32 remain_point = 42;
  void clear_remain_point();
  int32_t remain_point() const;
  void set_remain_point(int32_t value);
  private:
  int32_t _internal_remain_point() const;
  void _internal_set_remain_point(int32_t value);
  public:

  // int32 strength_point = 43;
  void clear_strength_point();
  int32_t strength_point() const;
  void set_strength_point(int32_t value);
  private:
  int32_t _internal_strength_point() const;
  void _internal_set_strength_point(int32_t value);
  public:

  // int32 smartness_point = 44;
  void clear_smartness_point();
  int32_t smartness_point() const;
  void set_smartness_point(int32_t value);
  private:
  int32_t _internal_smartness_point() const;
  void _internal_set_smartness_point(int32_t value);
  public:

  // int32 mind_point = 45;
  void clear_mind_point();
  int32_t mind_point() const;
  void set_mind_point(int32_t value);
  private:
  int32_t _internal_mind_point() const;
  void _internal_set_mind_point(int32_t value);
  public:

  // int32 constitution_point = 46;
  void clear_constitution_point();
  int32_t constitution_point() const;
  void set_constitution_point(int32_t value);
  private:
  int32_t _internal_constitution_point() const;
  void _internal_set_constitution_point(int32_t value);
  public:

  // int32 index = 47;
  void clear_index();
  int32_t index() const;
  void set_index(int32_t value);
  private:
  int32_t _internal_index() const;
  void _internal_set_index(int32_t value);
  public:

  // int32 stall_order = 48;
  void clear_stall_order();
  int32_t stall_order() const;
  void set_stall_order(int32_t value);
  private:
  int32_t _internal_stall_order() const;
  void _internal_set_stall_order(int32_t value);
  public:

  // int32 pet_lock = 49;
  void clear_pet_lock();
  int32_t pet_lock() const;
  void set_pet_lock(int32_t value);
  private:
  int32_t _internal_pet_lock() const;
  void _internal_set_pet_lock(int32_t value);
  public:

  // int32 unlock_time = 50;
  void clear_unlock_time();
  int32_t unlock_time() const;
  void set_unlock_time(int32_t value);
  private:
  int32_t _internal_unlock_time() const;
  void _internal_set_unlock_time(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:servermessage.ServerMsgDetailAttribPet)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::base::HorseSkill > skills_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr extra_data_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr nickname_;
    ::base::Flag64* flags_;
    ::base::SHorseGuid* horse_guid_;
    int32_t map_id_;
    int32_t trade_index_;
    int32_t data_id_;
    int32_t ai_type_;
    int32_t level_;
    int32_t exp_;
    int32_t hp_;
    int32_t hp_max_;
    int32_t horse_state_;
    int32_t generation_;
    int32_t happiness_;
    int32_t attr_near_;
    int32_t attr_far_;
    int32_t attr_magic_;
    int32_t def_near_;
    int32_t def_far_;
    int32_t def_magic_;
    int32_t hit_;
    int32_t miss_;
    int32_t critical_;
    int32_t model_id_;
    int32_t mount_id_;
    int32_t str_perception_;
    int32_t con_perception_;
    int32_t dex_perception_;
    int32_t int_perception_;
    int32_t str_perception_limit_;
    int32_t con_perception_limit_;
    int32_t dex_perception_limit_;
    int32_t int_perception_limit_;
    int32_t strength_;
    int32_t con_;
    int32_t dex_;
    int32_t intelligence_;
    int32_t grow_rate_;
    int32_t remain_point_;
    int32_t strength_point_;
    int32_t smartness_point_;
    int32_t mind_point_;
    int32_t constitution_point_;
    int32_t index_;
    int32_t stall_order_;
    int32_t pet_lock_;
    int32_t unlock_time_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_server_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class ServerMsgDetailBuff final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:servermessage.ServerMsgDetailBuff) */ {
 public:
  inline ServerMsgDetailBuff() : ServerMsgDetailBuff(nullptr) {}
  ~ServerMsgDetailBuff() override;
  explicit PROTOBUF_CONSTEXPR ServerMsgDetailBuff(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ServerMsgDetailBuff(const ServerMsgDetailBuff& from);
  ServerMsgDetailBuff(ServerMsgDetailBuff&& from) noexcept
    : ServerMsgDetailBuff() {
    *this = ::std::move(from);
  }

  inline ServerMsgDetailBuff& operator=(const ServerMsgDetailBuff& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServerMsgDetailBuff& operator=(ServerMsgDetailBuff&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ServerMsgDetailBuff& default_instance() {
    return *internal_default_instance();
  }
  static inline const ServerMsgDetailBuff* internal_default_instance() {
    return reinterpret_cast<const ServerMsgDetailBuff*>(
               &_ServerMsgDetailBuff_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(ServerMsgDetailBuff& a, ServerMsgDetailBuff& b) {
    a.Swap(&b);
  }
  inline void Swap(ServerMsgDetailBuff* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ServerMsgDetailBuff* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ServerMsgDetailBuff* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ServerMsgDetailBuff>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ServerMsgDetailBuff& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ServerMsgDetailBuff& from) {
    ServerMsgDetailBuff::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServerMsgDetailBuff* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "servermessage.ServerMsgDetailBuff";
  }
  protected:
  explicit ServerMsgDetailBuff(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObjectIdFieldNumber = 1,
    kReceiverIdFieldNumber = 2,
    kSenderIdFieldNumber = 3,
    kEnableFieldNumber = 4,
    kSkillIdFieldNumber = 5,
    kSnFieldNumber = 6,
    kBuffIdFieldNumber = 7,
    kContinuanceFieldNumber = 8,
    kDelayTimeFieldNumber = 9,
    kSenderLogicCountFieldNumber = 10,
  };
  // int32 object_id = 1;
  void clear_object_id();
  int32_t object_id() const;
  void set_object_id(int32_t value);
  private:
  int32_t _internal_object_id() const;
  void _internal_set_object_id(int32_t value);
  public:

  // int32 receiver_id = 2;
  void clear_receiver_id();
  int32_t receiver_id() const;
  void set_receiver_id(int32_t value);
  private:
  int32_t _internal_receiver_id() const;
  void _internal_set_receiver_id(int32_t value);
  public:

  // int32 sender_id = 3;
  void clear_sender_id();
  int32_t sender_id() const;
  void set_sender_id(int32_t value);
  private:
  int32_t _internal_sender_id() const;
  void _internal_set_sender_id(int32_t value);
  public:

  // bool enable = 4;
  void clear_enable();
  bool enable() const;
  void set_enable(bool value);
  private:
  bool _internal_enable() const;
  void _internal_set_enable(bool value);
  public:

  // int32 skill_id = 5;
  void clear_skill_id();
  int32_t skill_id() const;
  void set_skill_id(int32_t value);
  private:
  int32_t _internal_skill_id() const;
  void _internal_set_skill_id(int32_t value);
  public:

  // int32 sn = 6;
  void clear_sn();
  int32_t sn() const;
  void set_sn(int32_t value);
  private:
  int32_t _internal_sn() const;
  void _internal_set_sn(int32_t value);
  public:

  // int32 buff_id = 7;
  void clear_buff_id();
  int32_t buff_id() const;
  void set_buff_id(int32_t value);
  private:
  int32_t _internal_buff_id() const;
  void _internal_set_buff_id(int32_t value);
  public:

  // int32 continuance = 8;
  void clear_continuance();
  int32_t continuance() const;
  void set_continuance(int32_t value);
  private:
  int32_t _internal_continuance() const;
  void _internal_set_continuance(int32_t value);
  public:

  // int32 delay_time = 9;
  void clear_delay_time();
  int32_t delay_time() const;
  void set_delay_time(int32_t value);
  private:
  int32_t _internal_delay_time() const;
  void _internal_set_delay_time(int32_t value);
  public:

  // int32 sender_logic_count = 10;
  void clear_sender_logic_count();
  int32_t sender_logic_count() const;
  void set_sender_logic_count(int32_t value);
  private:
  int32_t _internal_sender_logic_count() const;
  void _internal_set_sender_logic_count(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:servermessage.ServerMsgDetailBuff)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int32_t object_id_;
    int32_t receiver_id_;
    int32_t sender_id_;
    bool enable_;
    int32_t skill_id_;
    int32_t sn_;
    int32_t buff_id_;
    int32_t continuance_;
    int32_t delay_time_;
    int32_t sender_logic_count_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_server_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class ServerMsgDetailEquipList final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:servermessage.ServerMsgDetailEquipList) */ {
 public:
  inline ServerMsgDetailEquipList() : ServerMsgDetailEquipList(nullptr) {}
  ~ServerMsgDetailEquipList() override;
  explicit PROTOBUF_CONSTEXPR ServerMsgDetailEquipList(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ServerMsgDetailEquipList(const ServerMsgDetailEquipList& from);
  ServerMsgDetailEquipList(ServerMsgDetailEquipList&& from) noexcept
    : ServerMsgDetailEquipList() {
    *this = ::std::move(from);
  }

  inline ServerMsgDetailEquipList& operator=(const ServerMsgDetailEquipList& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServerMsgDetailEquipList& operator=(ServerMsgDetailEquipList&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ServerMsgDetailEquipList& default_instance() {
    return *internal_default_instance();
  }
  static inline const ServerMsgDetailEquipList* internal_default_instance() {
    return reinterpret_cast<const ServerMsgDetailEquipList*>(
               &_ServerMsgDetailEquipList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(ServerMsgDetailEquipList& a, ServerMsgDetailEquipList& b) {
    a.Swap(&b);
  }
  inline void Swap(ServerMsgDetailEquipList* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ServerMsgDetailEquipList* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ServerMsgDetailEquipList* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ServerMsgDetailEquipList>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ServerMsgDetailEquipList& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ServerMsgDetailEquipList& from) {
    ServerMsgDetailEquipList::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServerMsgDetailEquipList* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "servermessage.ServerMsgDetailEquipList";
  }
  protected:
  explicit ServerMsgDetailEquipList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemsFieldNumber = 2,
    kObjectIdFieldNumber = 1,
  };
  // repeated .base.SItem items = 2;
  int items_size() const;
  private:
  int _internal_items_size() const;
  public:
  void clear_items();
  ::base::SItem* mutable_items(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::base::SItem >*
      mutable_items();
  private:
  const ::base::SItem& _internal_items(int index) const;
  ::base::SItem* _internal_add_items();
  public:
  const ::base::SItem& items(int index) const;
  ::base::SItem* add_items();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::base::SItem >&
      items() const;

  // int32 object_id = 1;
  void clear_object_id();
  int32_t object_id() const;
  void set_object_id(int32_t value);
  private:
  int32_t _internal_object_id() const;
  void _internal_set_object_id(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:servermessage.ServerMsgDetailEquipList)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::base::SItem > items_;
    int32_t object_id_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_server_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class ServerMsgDetailDetailItemList final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:servermessage.ServerMsgDetailDetailItemList) */ {
 public:
  inline ServerMsgDetailDetailItemList() : ServerMsgDetailDetailItemList(nullptr) {}
  ~ServerMsgDetailDetailItemList() override;
  explicit PROTOBUF_CONSTEXPR ServerMsgDetailDetailItemList(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ServerMsgDetailDetailItemList(const ServerMsgDetailDetailItemList& from);
  ServerMsgDetailDetailItemList(ServerMsgDetailDetailItemList&& from) noexcept
    : ServerMsgDetailDetailItemList() {
    *this = ::std::move(from);
  }

  inline ServerMsgDetailDetailItemList& operator=(const ServerMsgDetailDetailItemList& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServerMsgDetailDetailItemList& operator=(ServerMsgDetailDetailItemList&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ServerMsgDetailDetailItemList& default_instance() {
    return *internal_default_instance();
  }
  static inline const ServerMsgDetailDetailItemList* internal_default_instance() {
    return reinterpret_cast<const ServerMsgDetailDetailItemList*>(
               &_ServerMsgDetailDetailItemList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(ServerMsgDetailDetailItemList& a, ServerMsgDetailDetailItemList& b) {
    a.Swap(&b);
  }
  inline void Swap(ServerMsgDetailDetailItemList* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ServerMsgDetailDetailItemList* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ServerMsgDetailDetailItemList* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ServerMsgDetailDetailItemList>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ServerMsgDetailDetailItemList& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ServerMsgDetailDetailItemList& from) {
    ServerMsgDetailDetailItemList::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServerMsgDetailDetailItemList* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "servermessage.ServerMsgDetailDetailItemList";
  }
  protected:
  explicit ServerMsgDetailDetailItemList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemsFieldNumber = 2,
    kObjectIdFieldNumber = 1,
  };
  // repeated .base.SItem items = 2;
  int items_size() const;
  private:
  int _internal_items_size() const;
  public:
  void clear_items();
  ::base::SItem* mutable_items(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::base::SItem >*
      mutable_items();
  private:
  const ::base::SItem& _internal_items(int index) const;
  ::base::SItem* _internal_add_items();
  public:
  const ::base::SItem& items(int index) const;
  ::base::SItem* add_items();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::base::SItem >&
      items() const;

  // int32 object_id = 1;
  void clear_object_id();
  int32_t object_id() const;
  void set_object_id(int32_t value);
  private:
  int32_t _internal_object_id() const;
  void _internal_set_object_id(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:servermessage.ServerMsgDetailDetailItemList)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::base::SItem > items_;
    int32_t object_id_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_server_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class ServerMsgDetailSkillList final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:servermessage.ServerMsgDetailSkillList) */ {
 public:
  inline ServerMsgDetailSkillList() : ServerMsgDetailSkillList(nullptr) {}
  ~ServerMsgDetailSkillList() override;
  explicit PROTOBUF_CONSTEXPR ServerMsgDetailSkillList(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ServerMsgDetailSkillList(const ServerMsgDetailSkillList& from);
  ServerMsgDetailSkillList(ServerMsgDetailSkillList&& from) noexcept
    : ServerMsgDetailSkillList() {
    *this = ::std::move(from);
  }

  inline ServerMsgDetailSkillList& operator=(const ServerMsgDetailSkillList& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServerMsgDetailSkillList& operator=(ServerMsgDetailSkillList&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ServerMsgDetailSkillList& default_instance() {
    return *internal_default_instance();
  }
  static inline const ServerMsgDetailSkillList* internal_default_instance() {
    return reinterpret_cast<const ServerMsgDetailSkillList*>(
               &_ServerMsgDetailSkillList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(ServerMsgDetailSkillList& a, ServerMsgDetailSkillList& b) {
    a.Swap(&b);
  }
  inline void Swap(ServerMsgDetailSkillList* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ServerMsgDetailSkillList* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ServerMsgDetailSkillList* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ServerMsgDetailSkillList>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ServerMsgDetailSkillList& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ServerMsgDetailSkillList& from) {
    ServerMsgDetailSkillList::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServerMsgDetailSkillList* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "servermessage.ServerMsgDetailSkillList";
  }
  protected:
  explicit ServerMsgDetailSkillList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSkillsFieldNumber = 2,
    kPlayerIdFieldNumber = 1,
  };
  // repeated .base.PlayerSpell skills = 2;
  int skills_size() const;
  private:
  int _internal_skills_size() const;
  public:
  void clear_skills();
  ::base::PlayerSpell* mutable_skills(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::base::PlayerSpell >*
      mutable_skills();
  private:
  const ::base::PlayerSpell& _internal_skills(int index) const;
  ::base::PlayerSpell* _internal_add_skills();
  public:
  const ::base::PlayerSpell& skills(int index) const;
  ::base::PlayerSpell* add_skills();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::base::PlayerSpell >&
      skills() const;

  // int32 player_id = 1;
  void clear_player_id();
  int32_t player_id() const;
  void set_player_id(int32_t value);
  private:
  int32_t _internal_player_id() const;
  void _internal_set_player_id(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:servermessage.ServerMsgDetailSkillList)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::base::PlayerSpell > skills_;
    int32_t player_id_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_server_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class ServerMsgEnterMap final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:servermessage.ServerMsgEnterMap) */ {
 public:
  inline ServerMsgEnterMap() : ServerMsgEnterMap(nullptr) {}
  ~ServerMsgEnterMap() override;
  explicit PROTOBUF_CONSTEXPR ServerMsgEnterMap(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ServerMsgEnterMap(const ServerMsgEnterMap& from);
  ServerMsgEnterMap(ServerMsgEnterMap&& from) noexcept
    : ServerMsgEnterMap() {
    *this = ::std::move(from);
  }

  inline ServerMsgEnterMap& operator=(const ServerMsgEnterMap& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServerMsgEnterMap& operator=(ServerMsgEnterMap&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ServerMsgEnterMap& default_instance() {
    return *internal_default_instance();
  }
  static inline const ServerMsgEnterMap* internal_default_instance() {
    return reinterpret_cast<const ServerMsgEnterMap*>(
               &_ServerMsgEnterMap_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  friend void swap(ServerMsgEnterMap& a, ServerMsgEnterMap& b) {
    a.Swap(&b);
  }
  inline void Swap(ServerMsgEnterMap* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ServerMsgEnterMap* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ServerMsgEnterMap* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ServerMsgEnterMap>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ServerMsgEnterMap& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ServerMsgEnterMap& from) {
    ServerMsgEnterMap::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServerMsgEnterMap* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "servermessage.ServerMsgEnterMap";
  }
  protected:
  explicit ServerMsgEnterMap(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSceneIdFieldNumber = 1,
    kPositionXFieldNumber = 2,
    kPositionYFieldNumber = 3,
    kGuidFieldNumber = 4,
    kObjectIdFieldNumber = 5,
  };
  // uint32 scene_id = 1;
  void clear_scene_id();
  uint32_t scene_id() const;
  void set_scene_id(uint32_t value);
  private:
  uint32_t _internal_scene_id() const;
  void _internal_set_scene_id(uint32_t value);
  public:

  // float position_x = 2;
  void clear_position_x();
  float position_x() const;
  void set_position_x(float value);
  private:
  float _internal_position_x() const;
  void _internal_set_position_x(float value);
  public:

  // float position_y = 3;
  void clear_position_y();
  float position_y() const;
  void set_position_y(float value);
  private:
  float _internal_position_y() const;
  void _internal_set_position_y(float value);
  public:

  // int32 guid = 4;
  void clear_guid();
  int32_t guid() const;
  void set_guid(int32_t value);
  private:
  int32_t _internal_guid() const;
  void _internal_set_guid(int32_t value);
  public:

  // int32 object_id = 5;
  void clear_object_id();
  int32_t object_id() const;
  void set_object_id(int32_t value);
  private:
  int32_t _internal_object_id() const;
  void _internal_set_object_id(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:servermessage.ServerMsgEnterMap)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    uint32_t scene_id_;
    float position_x_;
    float position_y_;
    int32_t guid_;
    int32_t object_id_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_server_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class ServerMsgItemInfo final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:servermessage.ServerMsgItemInfo) */ {
 public:
  inline ServerMsgItemInfo() : ServerMsgItemInfo(nullptr) {}
  ~ServerMsgItemInfo() override;
  explicit PROTOBUF_CONSTEXPR ServerMsgItemInfo(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ServerMsgItemInfo(const ServerMsgItemInfo& from);
  ServerMsgItemInfo(ServerMsgItemInfo&& from) noexcept
    : ServerMsgItemInfo() {
    *this = ::std::move(from);
  }

  inline ServerMsgItemInfo& operator=(const ServerMsgItemInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServerMsgItemInfo& operator=(ServerMsgItemInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ServerMsgItemInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const ServerMsgItemInfo* internal_default_instance() {
    return reinterpret_cast<const ServerMsgItemInfo*>(
               &_ServerMsgItemInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  friend void swap(ServerMsgItemInfo& a, ServerMsgItemInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(ServerMsgItemInfo* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ServerMsgItemInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ServerMsgItemInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ServerMsgItemInfo>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ServerMsgItemInfo& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ServerMsgItemInfo& from) {
    ServerMsgItemInfo::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServerMsgItemInfo* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "servermessage.ServerMsgItemInfo";
  }
  protected:
  explicit ServerMsgItemInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemFieldNumber = 2,
    kBagIndexFieldNumber = 1,
    kNullFieldNumber = 3,
    kTipsFieldNumber = 4,
  };
  // .base.SItem item = 2;
  bool has_item() const;
  private:
  bool _internal_has_item() const;
  public:
  void clear_item();
  const ::base::SItem& item() const;
  PROTOBUF_NODISCARD ::base::SItem* release_item();
  ::base::SItem* mutable_item();
  void set_allocated_item(::base::SItem* item);
  private:
  const ::base::SItem& _internal_item() const;
  ::base::SItem* _internal_mutable_item();
  public:
  void unsafe_arena_set_allocated_item(
      ::base::SItem* item);
  ::base::SItem* unsafe_arena_release_item();

  // int32 bag_index = 1;
  void clear_bag_index();
  int32_t bag_index() const;
  void set_bag_index(int32_t value);
  private:
  int32_t _internal_bag_index() const;
  void _internal_set_bag_index(int32_t value);
  public:

  // bool null = 3;
  void clear_null();
  bool null() const;
  void set_null(bool value);
  private:
  bool _internal_null() const;
  void _internal_set_null(bool value);
  public:

  // int32 tips = 4;
  void clear_tips();
  int32_t tips() const;
  void set_tips(int32_t value);
  private:
  int32_t _internal_tips() const;
  void _internal_set_tips(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:servermessage.ServerMsgItemInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::base::SItem* item_;
    int32_t bag_index_;
    bool null_;
    int32_t tips_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_server_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class ServerMsgManipulatePetResult final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:servermessage.ServerMsgManipulatePetResult) */ {
 public:
  inline ServerMsgManipulatePetResult() : ServerMsgManipulatePetResult(nullptr) {}
  ~ServerMsgManipulatePetResult() override;
  explicit PROTOBUF_CONSTEXPR ServerMsgManipulatePetResult(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ServerMsgManipulatePetResult(const ServerMsgManipulatePetResult& from);
  ServerMsgManipulatePetResult(ServerMsgManipulatePetResult&& from) noexcept
    : ServerMsgManipulatePetResult() {
    *this = ::std::move(from);
  }

  inline ServerMsgManipulatePetResult& operator=(const ServerMsgManipulatePetResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServerMsgManipulatePetResult& operator=(ServerMsgManipulatePetResult&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ServerMsgManipulatePetResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const ServerMsgManipulatePetResult* internal_default_instance() {
    return reinterpret_cast<const ServerMsgManipulatePetResult*>(
               &_ServerMsgManipulatePetResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  friend void swap(ServerMsgManipulatePetResult& a, ServerMsgManipulatePetResult& b) {
    a.Swap(&b);
  }
  inline void Swap(ServerMsgManipulatePetResult* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ServerMsgManipulatePetResult* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ServerMsgManipulatePetResult* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ServerMsgManipulatePetResult>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ServerMsgManipulatePetResult& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ServerMsgManipulatePetResult& from) {
    ServerMsgManipulatePetResult::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServerMsgManipulatePetResult* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "servermessage.ServerMsgManipulatePetResult";
  }
  protected:
  explicit ServerMsgManipulatePetResult(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
    kObjectIdFieldNumber = 2,
    kSceneIdFieldNumber = 3,
  };
  // int32 result = 1;
  void clear_result();
  int32_t result() const;
  void set_result(int32_t value);
  private:
  int32_t _internal_result() const;
  void _internal_set_result(int32_t value);
  public:

  // int32 object_id = 2;
  void clear_object_id();
  int32_t object_id() const;
  void set_object_id(int32_t value);
  private:
  int32_t _internal_object_id() const;
  void _internal_set_object_id(int32_t value);
  public:

  // int32 scene_id = 3;
  void clear_scene_id();
  int32_t scene_id() const;
  void set_scene_id(int32_t value);
  private:
  int32_t _internal_scene_id() const;
  void _internal_set_scene_id(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:servermessage.ServerMsgManipulatePetResult)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int32_t result_;
    int32_t object_id_;
    int32_t scene_id_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_server_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class ServerMsgModifyQuest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:servermessage.ServerMsgModifyQuest) */ {
 public:
  inline ServerMsgModifyQuest() : ServerMsgModifyQuest(nullptr) {}
  ~ServerMsgModifyQuest() override;
  explicit PROTOBUF_CONSTEXPR ServerMsgModifyQuest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ServerMsgModifyQuest(const ServerMsgModifyQuest& from);
  ServerMsgModifyQuest(ServerMsgModifyQuest&& from) noexcept
    : ServerMsgModifyQuest() {
    *this = ::std::move(from);
  }

  inline ServerMsgModifyQuest& operator=(const ServerMsgModifyQuest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServerMsgModifyQuest& operator=(ServerMsgModifyQuest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ServerMsgModifyQuest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ServerMsgModifyQuest* internal_default_instance() {
    return reinterpret_cast<const ServerMsgModifyQuest*>(
               &_ServerMsgModifyQuest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  friend void swap(ServerMsgModifyQuest& a, ServerMsgModifyQuest& b) {
    a.Swap(&b);
  }
  inline void Swap(ServerMsgModifyQuest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ServerMsgModifyQuest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ServerMsgModifyQuest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ServerMsgModifyQuest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ServerMsgModifyQuest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ServerMsgModifyQuest& from) {
    ServerMsgModifyQuest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServerMsgModifyQuest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "servermessage.ServerMsgModifyQuest";
  }
  protected:
  explicit ServerMsgModifyQuest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kQuestFieldNumber = 5,
    kPlayerIdFieldNumber = 1,
    kQuestIdFieldNumber = 2,
    kFlagFieldNumber = 3,
    kFlag32FieldNumber = 4,
  };
  // .base.Quest quest = 5;
  bool has_quest() const;
  private:
  bool _internal_has_quest() const;
  public:
  void clear_quest();
  const ::base::Quest& quest() const;
  PROTOBUF_NODISCARD ::base::Quest* release_quest();
  ::base::Quest* mutable_quest();
  void set_allocated_quest(::base::Quest* quest);
  private:
  const ::base::Quest& _internal_quest() const;
  ::base::Quest* _internal_mutable_quest();
  public:
  void unsafe_arena_set_allocated_quest(
      ::base::Quest* quest);
  ::base::Quest* unsafe_arena_release_quest();

  // int32 player_id = 1;
  void clear_player_id();
  int32_t player_id() const;
  void set_player_id(int32_t value);
  private:
  int32_t _internal_player_id() const;
  void _internal_set_player_id(int32_t value);
  public:

  // int32 quest_id = 2;
  void clear_quest_id();
  int32_t quest_id() const;
  void set_quest_id(int32_t value);
  private:
  int32_t _internal_quest_id() const;
  void _internal_set_quest_id(int32_t value);
  public:

  // int32 flag = 3;
  void clear_flag();
  int32_t flag() const;
  void set_flag(int32_t value);
  private:
  int32_t _internal_flag() const;
  void _internal_set_flag(int32_t value);
  public:

  // uint32 flag32 = 4;
  void clear_flag32();
  uint32_t flag32() const;
  void set_flag32(uint32_t value);
  private:
  uint32_t _internal_flag32() const;
  void _internal_set_flag32(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:servermessage.ServerMsgModifyQuest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::base::Quest* quest_;
    int32_t player_id_;
    int32_t quest_id_;
    int32_t flag_;
    uint32_t flag32_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_server_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class ServerMsgMonsterAttribute final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:servermessage.ServerMsgMonsterAttribute) */ {
 public:
  inline ServerMsgMonsterAttribute() : ServerMsgMonsterAttribute(nullptr) {}
  ~ServerMsgMonsterAttribute() override;
  explicit PROTOBUF_CONSTEXPR ServerMsgMonsterAttribute(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ServerMsgMonsterAttribute(const ServerMsgMonsterAttribute& from);
  ServerMsgMonsterAttribute(ServerMsgMonsterAttribute&& from) noexcept
    : ServerMsgMonsterAttribute() {
    *this = ::std::move(from);
  }

  inline ServerMsgMonsterAttribute& operator=(const ServerMsgMonsterAttribute& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServerMsgMonsterAttribute& operator=(ServerMsgMonsterAttribute&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ServerMsgMonsterAttribute& default_instance() {
    return *internal_default_instance();
  }
  static inline const ServerMsgMonsterAttribute* internal_default_instance() {
    return reinterpret_cast<const ServerMsgMonsterAttribute*>(
               &_ServerMsgMonsterAttribute_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  friend void swap(ServerMsgMonsterAttribute& a, ServerMsgMonsterAttribute& b) {
    a.Swap(&b);
  }
  inline void Swap(ServerMsgMonsterAttribute* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ServerMsgMonsterAttribute* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ServerMsgMonsterAttribute* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ServerMsgMonsterAttribute>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ServerMsgMonsterAttribute& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ServerMsgMonsterAttribute& from) {
    ServerMsgMonsterAttribute::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServerMsgMonsterAttribute* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "servermessage.ServerMsgMonsterAttribute";
  }
  protected:
  explicit ServerMsgMonsterAttribute(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 16,
    kCountryTitleFieldNumber = 17,
    kGuildTitleFieldNumber = 18,
    kNormalTitleFieldNumber = 19,
    kFlagsFieldNumber = 2,
    kCampDataFieldNumber = 11,
    kRefreshFieldNumber = 1,
    kObjectIdFieldNumber = 3,
    kDataIdFieldNumber = 4,
    kLevelFieldNumber = 5,
    kHpPercentFieldNumber = 6,
    kStealLevelFieldNumber = 7,
    kMoodStateFieldNumber = 8,
    kMoveSpeedFieldNumber = 9,
    kAttackSpeedFieldNumber = 10,
    kPortraitIdFieldNumber = 12,
    kModelIdFieldNumber = 13,
    kMountIdFieldNumber = 14,
    kAiTypeFieldNumber = 15,
    kCountryTitleTypeFieldNumber = 20,
    kGuildTitleTypeFieldNumber = 21,
    kNormalTitleTypeFieldNumber = 22,
    kOccupantGuidFieldNumber = 23,
    kOwnerIdFieldNumber = 24,
    kTargetIdFieldNumber = 25,
    kDirFieldNumber = 26,
    kCtrlStateFieldNumber = 27,
    kScaleFieldNumber = 28,
  };
  // string name = 16;
  void clear_name();
  const std::string& name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // string country_title = 17;
  void clear_country_title();
  const std::string& country_title() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_country_title(ArgT0&& arg0, ArgT... args);
  std::string* mutable_country_title();
  PROTOBUF_NODISCARD std::string* release_country_title();
  void set_allocated_country_title(std::string* country_title);
  private:
  const std::string& _internal_country_title() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_country_title(const std::string& value);
  std::string* _internal_mutable_country_title();
  public:

  // string guild_title = 18;
  void clear_guild_title();
  const std::string& guild_title() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_guild_title(ArgT0&& arg0, ArgT... args);
  std::string* mutable_guild_title();
  PROTOBUF_NODISCARD std::string* release_guild_title();
  void set_allocated_guild_title(std::string* guild_title);
  private:
  const std::string& _internal_guild_title() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_guild_title(const std::string& value);
  std::string* _internal_mutable_guild_title();
  public:

  // string normal_title = 19;
  void clear_normal_title();
  const std::string& normal_title() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_normal_title(ArgT0&& arg0, ArgT... args);
  std::string* mutable_normal_title();
  PROTOBUF_NODISCARD std::string* release_normal_title();
  void set_allocated_normal_title(std::string* normal_title);
  private:
  const std::string& _internal_normal_title() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_normal_title(const std::string& value);
  std::string* _internal_mutable_normal_title();
  public:

  // .base.Flag64 flags = 2;
  bool has_flags() const;
  private:
  bool _internal_has_flags() const;
  public:
  void clear_flags();
  const ::base::Flag64& flags() const;
  PROTOBUF_NODISCARD ::base::Flag64* release_flags();
  ::base::Flag64* mutable_flags();
  void set_allocated_flags(::base::Flag64* flags);
  private:
  const ::base::Flag64& _internal_flags() const;
  ::base::Flag64* _internal_mutable_flags();
  public:
  void unsafe_arena_set_allocated_flags(
      ::base::Flag64* flags);
  ::base::Flag64* unsafe_arena_release_flags();

  // .base.SCampData camp_data = 11;
  bool has_camp_data() const;
  private:
  bool _internal_has_camp_data() const;
  public:
  void clear_camp_data();
  const ::base::SCampData& camp_data() const;
  PROTOBUF_NODISCARD ::base::SCampData* release_camp_data();
  ::base::SCampData* mutable_camp_data();
  void set_allocated_camp_data(::base::SCampData* camp_data);
  private:
  const ::base::SCampData& _internal_camp_data() const;
  ::base::SCampData* _internal_mutable_camp_data();
  public:
  void unsafe_arena_set_allocated_camp_data(
      ::base::SCampData* camp_data);
  ::base::SCampData* unsafe_arena_release_camp_data();

  // int32 refresh = 1;
  void clear_refresh();
  int32_t refresh() const;
  void set_refresh(int32_t value);
  private:
  int32_t _internal_refresh() const;
  void _internal_set_refresh(int32_t value);
  public:

  // int32 object_id = 3;
  void clear_object_id();
  int32_t object_id() const;
  void set_object_id(int32_t value);
  private:
  int32_t _internal_object_id() const;
  void _internal_set_object_id(int32_t value);
  public:

  // uint32 data_id = 4;
  void clear_data_id();
  uint32_t data_id() const;
  void set_data_id(uint32_t value);
  private:
  uint32_t _internal_data_id() const;
  void _internal_set_data_id(uint32_t value);
  public:

  // int32 level = 5;
  void clear_level();
  int32_t level() const;
  void set_level(int32_t value);
  private:
  int32_t _internal_level() const;
  void _internal_set_level(int32_t value);
  public:

  // int32 hp_percent = 6;
  void clear_hp_percent();
  int32_t hp_percent() const;
  void set_hp_percent(int32_t value);
  private:
  int32_t _internal_hp_percent() const;
  void _internal_set_hp_percent(int32_t value);
  public:

  // int32 steal_level = 7;
  void clear_steal_level();
  int32_t steal_level() const;
  void set_steal_level(int32_t value);
  private:
  int32_t _internal_steal_level() const;
  void _internal_set_steal_level(int32_t value);
  public:

  // int32 mood_state = 8;
  void clear_mood_state();
  int32_t mood_state() const;
  void set_mood_state(int32_t value);
  private:
  int32_t _internal_mood_state() const;
  void _internal_set_mood_state(int32_t value);
  public:

  // float move_speed = 9;
  void clear_move_speed();
  float move_speed() const;
  void set_move_speed(float value);
  private:
  float _internal_move_speed() const;
  void _internal_set_move_speed(float value);
  public:

  // float attack_speed = 10;
  void clear_attack_speed();
  float attack_speed() const;
  void set_attack_speed(float value);
  private:
  float _internal_attack_speed() const;
  void _internal_set_attack_speed(float value);
  public:

  // int32 portrait_id = 12;
  void clear_portrait_id();
  int32_t portrait_id() const;
  void set_portrait_id(int32_t value);
  private:
  int32_t _internal_portrait_id() const;
  void _internal_set_portrait_id(int32_t value);
  public:

  // int32 model_id = 13;
  void clear_model_id();
  int32_t model_id() const;
  void set_model_id(int32_t value);
  private:
  int32_t _internal_model_id() const;
  void _internal_set_model_id(int32_t value);
  public:

  // int32 mount_id = 14;
  void clear_mount_id();
  int32_t mount_id() const;
  void set_mount_id(int32_t value);
  private:
  int32_t _internal_mount_id() const;
  void _internal_set_mount_id(int32_t value);
  public:

  // int32 ai_type = 15;
  void clear_ai_type();
  int32_t ai_type() const;
  void set_ai_type(int32_t value);
  private:
  int32_t _internal_ai_type() const;
  void _internal_set_ai_type(int32_t value);
  public:

  // int32 country_title_type = 20;
  void clear_country_title_type();
  int32_t country_title_type() const;
  void set_country_title_type(int32_t value);
  private:
  int32_t _internal_country_title_type() const;
  void _internal_set_country_title_type(int32_t value);
  public:

  // int32 guild_title_type = 21;
  void clear_guild_title_type();
  int32_t guild_title_type() const;
  void set_guild_title_type(int32_t value);
  private:
  int32_t _internal_guild_title_type() const;
  void _internal_set_guild_title_type(int32_t value);
  public:

  // int32 normal_title_type = 22;
  void clear_normal_title_type();
  int32_t normal_title_type() const;
  void set_normal_title_type(int32_t value);
  private:
  int32_t _internal_normal_title_type() const;
  void _internal_set_normal_title_type(int32_t value);
  public:

  // uint32 occupant_guid = 23;
  void clear_occupant_guid();
  uint32_t occupant_guid() const;
  void set_occupant_guid(uint32_t value);
  private:
  uint32_t _internal_occupant_guid() const;
  void _internal_set_occupant_guid(uint32_t value);
  public:

  // int32 owner_id = 24;
  void clear_owner_id();
  int32_t owner_id() const;
  void set_owner_id(int32_t value);
  private:
  int32_t _internal_owner_id() const;
  void _internal_set_owner_id(int32_t value);
  public:

  // int32 target_id = 25;
  void clear_target_id();
  int32_t target_id() const;
  void set_target_id(int32_t value);
  private:
  int32_t _internal_target_id() const;
  void _internal_set_target_id(int32_t value);
  public:

  // float dir = 26;
  void clear_dir();
  float dir() const;
  void set_dir(float value);
  private:
  float _internal_dir() const;
  void _internal_set_dir(float value);
  public:

  // int32 ctrl_state = 27;
  void clear_ctrl_state();
  int32_t ctrl_state() const;
  void set_ctrl_state(int32_t value);
  private:
  int32_t _internal_ctrl_state() const;
  void _internal_set_ctrl_state(int32_t value);
  public:

  // float scale = 28;
  void clear_scale();
  float scale() const;
  void set_scale(float value);
  private:
  float _internal_scale() const;
  void _internal_set_scale(float value);
  public:

  // @@protoc_insertion_point(class_scope:servermessage.ServerMsgMonsterAttribute)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr country_title_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr guild_title_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr normal_title_;
    ::base::Flag64* flags_;
    ::base::SCampData* camp_data_;
    int32_t refresh_;
    int32_t object_id_;
    uint32_t data_id_;
    int32_t level_;
    int32_t hp_percent_;
    int32_t steal_level_;
    int32_t mood_state_;
    float move_speed_;
    float attack_speed_;
    int32_t portrait_id_;
    int32_t model_id_;
    int32_t mount_id_;
    int32_t ai_type_;
    int32_t country_title_type_;
    int32_t guild_title_type_;
    int32_t normal_title_type_;
    uint32_t occupant_guid_;
    int32_t owner_id_;
    int32_t target_id_;
    float dir_;
    int32_t ctrl_state_;
    float scale_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_server_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class ServerMsgNewBeastie final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:servermessage.ServerMsgNewBeastie) */ {
 public:
  inline ServerMsgNewBeastie() : ServerMsgNewBeastie(nullptr) {}
  ~ServerMsgNewBeastie() override;
  explicit PROTOBUF_CONSTEXPR ServerMsgNewBeastie(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ServerMsgNewBeastie(const ServerMsgNewBeastie& from);
  ServerMsgNewBeastie(ServerMsgNewBeastie&& from) noexcept
    : ServerMsgNewBeastie() {
    *this = ::std::move(from);
  }

  inline ServerMsgNewBeastie& operator=(const ServerMsgNewBeastie& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServerMsgNewBeastie& operator=(ServerMsgNewBeastie&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ServerMsgNewBeastie& default_instance() {
    return *internal_default_instance();
  }
  static inline const ServerMsgNewBeastie* internal_default_instance() {
    return reinterpret_cast<const ServerMsgNewBeastie*>(
               &_ServerMsgNewBeastie_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  friend void swap(ServerMsgNewBeastie& a, ServerMsgNewBeastie& b) {
    a.Swap(&b);
  }
  inline void Swap(ServerMsgNewBeastie* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ServerMsgNewBeastie* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ServerMsgNewBeastie* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ServerMsgNewBeastie>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ServerMsgNewBeastie& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ServerMsgNewBeastie& from) {
    ServerMsgNewBeastie::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServerMsgNewBeastie* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "servermessage.ServerMsgNewBeastie";
  }
  protected:
  explicit ServerMsgNewBeastie(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 2,
    kObjectIdFieldNumber = 1,
    kPositionXFieldNumber = 3,
    kPositionZFieldNumber = 4,
    kDirFieldNumber = 5,
    kMoveSpeedFieldNumber = 6,
    kMovingFieldNumber = 7,
    kHandleIdFieldNumber = 8,
    kTargetXFieldNumber = 9,
    kTargetZFieldNumber = 10,
  };
  // string name = 2;
  void clear_name();
  const std::string& name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // uint32 object_id = 1;
  void clear_object_id();
  uint32_t object_id() const;
  void set_object_id(uint32_t value);
  private:
  uint32_t _internal_object_id() const;
  void _internal_set_object_id(uint32_t value);
  public:

  // float position_x = 3;
  void clear_position_x();
  float position_x() const;
  void set_position_x(float value);
  private:
  float _internal_position_x() const;
  void _internal_set_position_x(float value);
  public:

  // float position_z = 4;
  void clear_position_z();
  float position_z() const;
  void set_position_z(float value);
  private:
  float _internal_position_z() const;
  void _internal_set_position_z(float value);
  public:

  // float dir = 5;
  void clear_dir();
  float dir() const;
  void set_dir(float value);
  private:
  float _internal_dir() const;
  void _internal_set_dir(float value);
  public:

  // float move_speed = 6;
  void clear_move_speed();
  float move_speed() const;
  void set_move_speed(float value);
  private:
  float _internal_move_speed() const;
  void _internal_set_move_speed(float value);
  public:

  // bool moving = 7;
  void clear_moving();
  bool moving() const;
  void set_moving(bool value);
  private:
  bool _internal_moving() const;
  void _internal_set_moving(bool value);
  public:

  // int32 handle_id = 8;
  void clear_handle_id();
  int32_t handle_id() const;
  void set_handle_id(int32_t value);
  private:
  int32_t _internal_handle_id() const;
  void _internal_set_handle_id(int32_t value);
  public:

  // float target_x = 9;
  void clear_target_x();
  float target_x() const;
  void set_target_x(float value);
  private:
  float _internal_target_x() const;
  void _internal_set_target_x(float value);
  public:

  // float target_z = 10;
  void clear_target_z();
  float target_z() const;
  void set_target_z(float value);
  private:
  float _internal_target_z() const;
  void _internal_set_target_z(float value);
  public:

  // @@protoc_insertion_point(class_scope:servermessage.ServerMsgNewBeastie)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
    uint32_t object_id_;
    float position_x_;
    float position_z_;
    float dir_;
    float move_speed_;
    bool moving_;
    int32_t handle_id_;
    float target_x_;
    float target_z_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_server_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class ServerMsgNewItem final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:servermessage.ServerMsgNewItem) */ {
 public:
  inline ServerMsgNewItem() : ServerMsgNewItem(nullptr) {}
  ~ServerMsgNewItem() override;
  explicit PROTOBUF_CONSTEXPR ServerMsgNewItem(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ServerMsgNewItem(const ServerMsgNewItem& from);
  ServerMsgNewItem(ServerMsgNewItem&& from) noexcept
    : ServerMsgNewItem() {
    *this = ::std::move(from);
  }

  inline ServerMsgNewItem& operator=(const ServerMsgNewItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServerMsgNewItem& operator=(ServerMsgNewItem&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ServerMsgNewItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const ServerMsgNewItem* internal_default_instance() {
    return reinterpret_cast<const ServerMsgNewItem*>(
               &_ServerMsgNewItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  friend void swap(ServerMsgNewItem& a, ServerMsgNewItem& b) {
    a.Swap(&b);
  }
  inline void Swap(ServerMsgNewItem* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ServerMsgNewItem* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ServerMsgNewItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ServerMsgNewItem>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ServerMsgNewItem& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ServerMsgNewItem& from) {
    ServerMsgNewItem::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServerMsgNewItem* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "servermessage.ServerMsgNewItem";
  }
  protected:
  explicit ServerMsgNewItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObjectIdFieldNumber = 1,
    kSceneIdFieldNumber = 2,
    kItemIndexFieldNumber = 3,
    kItemCountFieldNumber = 4,
    kPositionXFieldNumber = 5,
    kPositionZFieldNumber = 6,
  };
  // int32 object_id = 1;
  void clear_object_id();
  int32_t object_id() const;
  void set_object_id(int32_t value);
  private:
  int32_t _internal_object_id() const;
  void _internal_set_object_id(int32_t value);
  public:

  // int32 scene_id = 2;
  void clear_scene_id();
  int32_t scene_id() const;
  void set_scene_id(int32_t value);
  private:
  int32_t _internal_scene_id() const;
  void _internal_set_scene_id(int32_t value);
  public:

  // int32 item_index = 3;
  void clear_item_index();
  int32_t item_index() const;
  void set_item_index(int32_t value);
  private:
  int32_t _internal_item_index() const;
  void _internal_set_item_index(int32_t value);
  public:

  // int32 item_count = 4;
  void clear_item_count();
  int32_t item_count() const;
  void set_item_count(int32_t value);
  private:
  int32_t _internal_item_count() const;
  void _internal_set_item_count(int32_t value);
  public:

  // float position_x = 5;
  void clear_position_x();
  float position_x() const;
  void set_position_x(float value);
  private:
  float _internal_position_x() const;
  void _internal_set_position_x(float value);
  public:

  // float position_z = 6;
  void clear_position_z();
  float position_z() const;
  void set_position_z(float value);
  private:
  float _internal_position_z() const;
  void _internal_set_position_z(float value);
  public:

  // @@protoc_insertion_point(class_scope:servermessage.ServerMsgNewItem)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int32_t object_id_;
    int32_t scene_id_;
    int32_t item_index_;
    int32_t item_count_;
    float position_x_;
    float position_z_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_server_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class ServerMsgNewItemBox final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:servermessage.ServerMsgNewItemBox) */ {
 public:
  inline ServerMsgNewItemBox() : ServerMsgNewItemBox(nullptr) {}
  ~ServerMsgNewItemBox() override;
  explicit PROTOBUF_CONSTEXPR ServerMsgNewItemBox(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ServerMsgNewItemBox(const ServerMsgNewItemBox& from);
  ServerMsgNewItemBox(ServerMsgNewItemBox&& from) noexcept
    : ServerMsgNewItemBox() {
    *this = ::std::move(from);
  }

  inline ServerMsgNewItemBox& operator=(const ServerMsgNewItemBox& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServerMsgNewItemBox& operator=(ServerMsgNewItemBox&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ServerMsgNewItemBox& default_instance() {
    return *internal_default_instance();
  }
  static inline const ServerMsgNewItemBox* internal_default_instance() {
    return reinterpret_cast<const ServerMsgNewItemBox*>(
               &_ServerMsgNewItemBox_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  friend void swap(ServerMsgNewItemBox& a, ServerMsgNewItemBox& b) {
    a.Swap(&b);
  }
  inline void Swap(ServerMsgNewItemBox* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ServerMsgNewItemBox* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ServerMsgNewItemBox* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ServerMsgNewItemBox>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ServerMsgNewItemBox& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ServerMsgNewItemBox& from) {
    ServerMsgNewItemBox::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServerMsgNewItemBox* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "servermessage.ServerMsgNewItemBox";
  }
  protected:
  explicit ServerMsgNewItemBox(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPosFieldNumber = 5,
    kObjectIdFieldNumber = 1,
    kTypeFieldNumber = 2,
    kOwnerIdFieldNumber = 3,
    kSceneIdFieldNumber = 4,
    kDropMonsterIdFieldNumber = 6,
  };
  // .base.GLPos pos = 5;
  bool has_pos() const;
  private:
  bool _internal_has_pos() const;
  public:
  void clear_pos();
  const ::base::GLPos& pos() const;
  PROTOBUF_NODISCARD ::base::GLPos* release_pos();
  ::base::GLPos* mutable_pos();
  void set_allocated_pos(::base::GLPos* pos);
  private:
  const ::base::GLPos& _internal_pos() const;
  ::base::GLPos* _internal_mutable_pos();
  public:
  void unsafe_arena_set_allocated_pos(
      ::base::GLPos* pos);
  ::base::GLPos* unsafe_arena_release_pos();

  // int32 object_id = 1;
  void clear_object_id();
  int32_t object_id() const;
  void set_object_id(int32_t value);
  private:
  int32_t _internal_object_id() const;
  void _internal_set_object_id(int32_t value);
  public:

  // int32 type = 2;
  void clear_type();
  int32_t type() const;
  void set_type(int32_t value);
  private:
  int32_t _internal_type() const;
  void _internal_set_type(int32_t value);
  public:

  // uint32 owner_id = 3;
  void clear_owner_id();
  uint32_t owner_id() const;
  void set_owner_id(uint32_t value);
  private:
  uint32_t _internal_owner_id() const;
  void _internal_set_owner_id(uint32_t value);
  public:

  // int32 scene_id = 4;
  void clear_scene_id();
  int32_t scene_id() const;
  void set_scene_id(int32_t value);
  private:
  int32_t _internal_scene_id() const;
  void _internal_set_scene_id(int32_t value);
  public:

  // int32 drop_monster_id = 6;
  void clear_drop_monster_id();
  int32_t drop_monster_id() const;
  void set_drop_monster_id(int32_t value);
  private:
  int32_t _internal_drop_monster_id() const;
  void _internal_set_drop_monster_id(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:servermessage.ServerMsgNewItemBox)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::base::GLPos* pos_;
    int32_t object_id_;
    int32_t type_;
    uint32_t owner_id_;
    int32_t scene_id_;
    int32_t drop_monster_id_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_server_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class ServerMsgNewMonster final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:servermessage.ServerMsgNewMonster) */ {
 public:
  inline ServerMsgNewMonster() : ServerMsgNewMonster(nullptr) {}
  ~ServerMsgNewMonster() override;
  explicit PROTOBUF_CONSTEXPR ServerMsgNewMonster(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ServerMsgNewMonster(const ServerMsgNewMonster& from);
  ServerMsgNewMonster(ServerMsgNewMonster&& from) noexcept
    : ServerMsgNewMonster() {
    *this = ::std::move(from);
  }

  inline ServerMsgNewMonster& operator=(const ServerMsgNewMonster& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServerMsgNewMonster& operator=(ServerMsgNewMonster&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ServerMsgNewMonster& default_instance() {
    return *internal_default_instance();
  }
  static inline const ServerMsgNewMonster* internal_default_instance() {
    return reinterpret_cast<const ServerMsgNewMonster*>(
               &_ServerMsgNewMonster_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  friend void swap(ServerMsgNewMonster& a, ServerMsgNewMonster& b) {
    a.Swap(&b);
  }
  inline void Swap(ServerMsgNewMonster* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ServerMsgNewMonster* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ServerMsgNewMonster* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ServerMsgNewMonster>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ServerMsgNewMonster& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ServerMsgNewMonster& from) {
    ServerMsgNewMonster::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServerMsgNewMonster* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "servermessage.ServerMsgNewMonster";
  }
  protected:
  explicit ServerMsgNewMonster(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 2,
    kObjectIdFieldNumber = 1,
    kPositionXFieldNumber = 3,
    kPositiionYFieldNumber = 4,
    kDirFieldNumber = 5,
    kMoveSpeedFieldNumber = 6,
    kHorseIdFieldNumber = 7,
    kWeaponIdFieldNumber = 8,
    kMonsterTypeFieldNumber = 9,
    kGuidFieldNumber = 10,
    kRaceIdFieldNumber = 11,
    kCampIdFieldNumber = 12,
  };
  // string name = 2;
  void clear_name();
  const std::string& name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // uint32 object_id = 1;
  void clear_object_id();
  uint32_t object_id() const;
  void set_object_id(uint32_t value);
  private:
  uint32_t _internal_object_id() const;
  void _internal_set_object_id(uint32_t value);
  public:

  // float position_x = 3;
  void clear_position_x();
  float position_x() const;
  void set_position_x(float value);
  private:
  float _internal_position_x() const;
  void _internal_set_position_x(float value);
  public:

  // float positiion_y = 4;
  void clear_positiion_y();
  float positiion_y() const;
  void set_positiion_y(float value);
  private:
  float _internal_positiion_y() const;
  void _internal_set_positiion_y(float value);
  public:

  // float dir = 5;
  void clear_dir();
  float dir() const;
  void set_dir(float value);
  private:
  float _internal_dir() const;
  void _internal_set_dir(float value);
  public:

  // float move_speed = 6;
  void clear_move_speed();
  float move_speed() const;
  void set_move_speed(float value);
  private:
  float _internal_move_speed() const;
  void _internal_set_move_speed(float value);
  public:

  // float horse_id = 7;
  void clear_horse_id();
  float horse_id() const;
  void set_horse_id(float value);
  private:
  float _internal_horse_id() const;
  void _internal_set_horse_id(float value);
  public:

  // float weapon_id = 8;
  void clear_weapon_id();
  float weapon_id() const;
  void set_weapon_id(float value);
  private:
  float _internal_weapon_id() const;
  void _internal_set_weapon_id(float value);
  public:

  // int32 monster_type = 9;
  void clear_monster_type();
  int32_t monster_type() const;
  void set_monster_type(int32_t value);
  private:
  int32_t _internal_monster_type() const;
  void _internal_set_monster_type(int32_t value);
  public:

  // uint32 guid = 10;
  void clear_guid();
  uint32_t guid() const;
  void set_guid(uint32_t value);
  private:
  uint32_t _internal_guid() const;
  void _internal_set_guid(uint32_t value);
  public:

  // int32 race_id = 11;
  void clear_race_id();
  int32_t race_id() const;
  void set_race_id(int32_t value);
  private:
  int32_t _internal_race_id() const;
  void _internal_set_race_id(int32_t value);
  public:

  // int32 camp_id = 12;
  void clear_camp_id();
  int32_t camp_id() const;
  void set_camp_id(int32_t value);
  private:
  int32_t _internal_camp_id() const;
  void _internal_set_camp_id(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:servermessage.ServerMsgNewMonster)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
    uint32_t object_id_;
    float position_x_;
    float positiion_y_;
    float dir_;
    float move_speed_;
    float horse_id_;
    float weapon_id_;
    int32_t monster_type_;
    uint32_t guid_;
    int32_t race_id_;
    int32_t camp_id_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_server_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class ServerMsgNotifyEquip final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:servermessage.ServerMsgNotifyEquip) */ {
 public:
  inline ServerMsgNotifyEquip() : ServerMsgNotifyEquip(nullptr) {}
  ~ServerMsgNotifyEquip() override;
  explicit PROTOBUF_CONSTEXPR ServerMsgNotifyEquip(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ServerMsgNotifyEquip(const ServerMsgNotifyEquip& from);
  ServerMsgNotifyEquip(ServerMsgNotifyEquip&& from) noexcept
    : ServerMsgNotifyEquip() {
    *this = ::std::move(from);
  }

  inline ServerMsgNotifyEquip& operator=(const ServerMsgNotifyEquip& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServerMsgNotifyEquip& operator=(ServerMsgNotifyEquip&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ServerMsgNotifyEquip& default_instance() {
    return *internal_default_instance();
  }
  static inline const ServerMsgNotifyEquip* internal_default_instance() {
    return reinterpret_cast<const ServerMsgNotifyEquip*>(
               &_ServerMsgNotifyEquip_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  friend void swap(ServerMsgNotifyEquip& a, ServerMsgNotifyEquip& b) {
    a.Swap(&b);
  }
  inline void Swap(ServerMsgNotifyEquip* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ServerMsgNotifyEquip* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ServerMsgNotifyEquip* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ServerMsgNotifyEquip>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ServerMsgNotifyEquip& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ServerMsgNotifyEquip& from) {
    ServerMsgNotifyEquip::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServerMsgNotifyEquip* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "servermessage.ServerMsgNotifyEquip";
  }
  protected:
  explicit ServerMsgNotifyEquip(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemFieldNumber = 2,
    kBagIndexFieldNumber = 1,
  };
  // .base.SItem item = 2;
  bool has_item() const;
  private:
  bool _internal_has_item() const;
  public:
  void clear_item();
  const ::base::SItem& item() const;
  PROTOBUF_NODISCARD ::base::SItem* release_item();
  ::base::SItem* mutable_item();
  void set_allocated_item(::base::SItem* item);
  private:
  const ::base::SItem& _internal_item() const;
  ::base::SItem* _internal_mutable_item();
  public:
  void unsafe_arena_set_allocated_item(
      ::base::SItem* item);
  ::base::SItem* unsafe_arena_release_item();

  // int32 bag_index = 1;
  void clear_bag_index();
  int32_t bag_index() const;
  void set_bag_index(int32_t value);
  private:
  int32_t _internal_bag_index() const;
  void _internal_set_bag_index(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:servermessage.ServerMsgNotifyEquip)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::base::SItem* item_;
    int32_t bag_index_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_server_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class ServerMsgOperateResult final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:servermessage.ServerMsgOperateResult) */ {
 public:
  inline ServerMsgOperateResult() : ServerMsgOperateResult(nullptr) {}
  ~ServerMsgOperateResult() override;
  explicit PROTOBUF_CONSTEXPR ServerMsgOperateResult(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ServerMsgOperateResult(const ServerMsgOperateResult& from);
  ServerMsgOperateResult(ServerMsgOperateResult&& from) noexcept
    : ServerMsgOperateResult() {
    *this = ::std::move(from);
  }

  inline ServerMsgOperateResult& operator=(const ServerMsgOperateResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServerMsgOperateResult& operator=(ServerMsgOperateResult&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ServerMsgOperateResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const ServerMsgOperateResult* internal_default_instance() {
    return reinterpret_cast<const ServerMsgOperateResult*>(
               &_ServerMsgOperateResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  friend void swap(ServerMsgOperateResult& a, ServerMsgOperateResult& b) {
    a.Swap(&b);
  }
  inline void Swap(ServerMsgOperateResult* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ServerMsgOperateResult* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ServerMsgOperateResult* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ServerMsgOperateResult>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ServerMsgOperateResult& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ServerMsgOperateResult& from) {
    ServerMsgOperateResult::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServerMsgOperateResult* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "servermessage.ServerMsgOperateResult";
  }
  protected:
  explicit ServerMsgOperateResult(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerIdFieldNumber = 1,
    kMapIdFieldNumber = 2,
    kResTypeFieldNumber = 3,
    kResultCodeFieldNumber = 4,
  };
  // int32 player_id = 1;
  void clear_player_id();
  int32_t player_id() const;
  void set_player_id(int32_t value);
  private:
  int32_t _internal_player_id() const;
  void _internal_set_player_id(int32_t value);
  public:

  // int32 map_id = 2;
  void clear_map_id();
  int32_t map_id() const;
  void set_map_id(int32_t value);
  private:
  int32_t _internal_map_id() const;
  void _internal_set_map_id(int32_t value);
  public:

  // int32 res_type = 3;
  void clear_res_type();
  int32_t res_type() const;
  void set_res_type(int32_t value);
  private:
  int32_t _internal_res_type() const;
  void _internal_set_res_type(int32_t value);
  public:

  // int32 result_code = 4;
  void clear_result_code();
  int32_t result_code() const;
  void set_result_code(int32_t value);
  private:
  int32_t _internal_result_code() const;
  void _internal_set_result_code(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:servermessage.ServerMsgOperateResult)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int32_t player_id_;
    int32_t map_id_;
    int32_t res_type_;
    int32_t result_code_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_server_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class ServerMsgPickItemResult final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:servermessage.ServerMsgPickItemResult) */ {
 public:
  inline ServerMsgPickItemResult() : ServerMsgPickItemResult(nullptr) {}
  ~ServerMsgPickItemResult() override;
  explicit PROTOBUF_CONSTEXPR ServerMsgPickItemResult(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ServerMsgPickItemResult(const ServerMsgPickItemResult& from);
  ServerMsgPickItemResult(ServerMsgPickItemResult&& from) noexcept
    : ServerMsgPickItemResult() {
    *this = ::std::move(from);
  }

  inline ServerMsgPickItemResult& operator=(const ServerMsgPickItemResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServerMsgPickItemResult& operator=(ServerMsgPickItemResult&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ServerMsgPickItemResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const ServerMsgPickItemResult* internal_default_instance() {
    return reinterpret_cast<const ServerMsgPickItemResult*>(
               &_ServerMsgPickItemResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    35;

  friend void swap(ServerMsgPickItemResult& a, ServerMsgPickItemResult& b) {
    a.Swap(&b);
  }
  inline void Swap(ServerMsgPickItemResult* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ServerMsgPickItemResult* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ServerMsgPickItemResult* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ServerMsgPickItemResult>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ServerMsgPickItemResult& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ServerMsgPickItemResult& from) {
    ServerMsgPickItemResult::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServerMsgPickItemResult* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "servermessage.ServerMsgPickItemResult";
  }
  protected:
  explicit ServerMsgPickItemResult(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObjectIdFieldNumber = 1,
    kResultCodeFieldNumber = 2,
  };
  // int32 object_id = 1;
  void clear_object_id();
  int32_t object_id() const;
  void set_object_id(int32_t value);
  private:
  int32_t _internal_object_id() const;
  void _internal_set_object_id(int32_t value);
  public:

  // int32 result_code = 2;
  void clear_result_code();
  int32_t result_code() const;
  void set_result_code(int32_t value);
  private:
  int32_t _internal_result_code() const;
  void _internal_set_result_code(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:servermessage.ServerMsgPickItemResult)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int32_t object_id_;
    int32_t result_code_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_server_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class ServerMsgQueryEventResult final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:servermessage.ServerMsgQueryEventResult) */ {
 public:
  inline ServerMsgQueryEventResult() : ServerMsgQueryEventResult(nullptr) {}
  ~ServerMsgQueryEventResult() override;
  explicit PROTOBUF_CONSTEXPR ServerMsgQueryEventResult(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ServerMsgQueryEventResult(const ServerMsgQueryEventResult& from);
  ServerMsgQueryEventResult(ServerMsgQueryEventResult&& from) noexcept
    : ServerMsgQueryEventResult() {
    *this = ::std::move(from);
  }

  inline ServerMsgQueryEventResult& operator=(const ServerMsgQueryEventResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServerMsgQueryEventResult& operator=(ServerMsgQueryEventResult&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ServerMsgQueryEventResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const ServerMsgQueryEventResult* internal_default_instance() {
    return reinterpret_cast<const ServerMsgQueryEventResult*>(
               &_ServerMsgQueryEventResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    36;

  friend void swap(ServerMsgQueryEventResult& a, ServerMsgQueryEventResult& b) {
    a.Swap(&b);
  }
  inline void Swap(ServerMsgQueryEventResult* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ServerMsgQueryEventResult* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ServerMsgQueryEventResult* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ServerMsgQueryEventResult>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ServerMsgQueryEventResult& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ServerMsgQueryEventResult& from) {
    ServerMsgQueryEventResult::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServerMsgQueryEventResult* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "servermessage.ServerMsgQueryEventResult";
  }
  protected:
  explicit ServerMsgQueryEventResult(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObjectIdFieldNumber = 1,
  };
  // uint32 object_id = 1;
  void clear_object_id();
  uint32_t object_id() const;
  void set_object_id(uint32_t value);
  private:
  uint32_t _internal_object_id() const;
  void _internal_set_object_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:servermessage.ServerMsgQueryEventResult)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    uint32_t object_id_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_server_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class ServerMsgQuestList final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:servermessage.ServerMsgQuestList) */ {
 public:
  inline ServerMsgQuestList() : ServerMsgQuestList(nullptr) {}
  ~ServerMsgQuestList() override;
  explicit PROTOBUF_CONSTEXPR ServerMsgQuestList(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ServerMsgQuestList(const ServerMsgQuestList& from);
  ServerMsgQuestList(ServerMsgQuestList&& from) noexcept
    : ServerMsgQuestList() {
    *this = ::std::move(from);
  }

  inline ServerMsgQuestList& operator=(const ServerMsgQuestList& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServerMsgQuestList& operator=(ServerMsgQuestList&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ServerMsgQuestList& default_instance() {
    return *internal_default_instance();
  }
  static inline const ServerMsgQuestList* internal_default_instance() {
    return reinterpret_cast<const ServerMsgQuestList*>(
               &_ServerMsgQuestList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    37;

  friend void swap(ServerMsgQuestList& a, ServerMsgQuestList& b) {
    a.Swap(&b);
  }
  inline void Swap(ServerMsgQuestList* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ServerMsgQuestList* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ServerMsgQuestList* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ServerMsgQuestList>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ServerMsgQuestList& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ServerMsgQuestList& from) {
    ServerMsgQuestList::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServerMsgQuestList* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "servermessage.ServerMsgQuestList";
  }
  protected:
  explicit ServerMsgQuestList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kQuestListFieldNumber = 2,
    kPlayerIdFieldNumber = 1,
  };
  // .base.SArchiveLoader_Quest quest_list = 2;
  bool has_quest_list() const;
  private:
  bool _internal_has_quest_list() const;
  public:
  void clear_quest_list();
  const ::base::SArchiveLoader_Quest& quest_list() const;
  PROTOBUF_NODISCARD ::base::SArchiveLoader_Quest* release_quest_list();
  ::base::SArchiveLoader_Quest* mutable_quest_list();
  void set_allocated_quest_list(::base::SArchiveLoader_Quest* quest_list);
  private:
  const ::base::SArchiveLoader_Quest& _internal_quest_list() const;
  ::base::SArchiveLoader_Quest* _internal_mutable_quest_list();
  public:
  void unsafe_arena_set_allocated_quest_list(
      ::base::SArchiveLoader_Quest* quest_list);
  ::base::SArchiveLoader_Quest* unsafe_arena_release_quest_list();

  // int32 player_id = 1;
  void clear_player_id();
  int32_t player_id() const;
  void set_player_id(int32_t value);
  private:
  int32_t _internal_player_id() const;
  void _internal_set_player_id(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:servermessage.ServerMsgQuestList)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::base::SArchiveLoader_Quest* quest_list_;
    int32_t player_id_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_server_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class ServerMsgQuestListRefresh final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:servermessage.ServerMsgQuestListRefresh) */ {
 public:
  inline ServerMsgQuestListRefresh() : ServerMsgQuestListRefresh(nullptr) {}
  ~ServerMsgQuestListRefresh() override;
  explicit PROTOBUF_CONSTEXPR ServerMsgQuestListRefresh(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ServerMsgQuestListRefresh(const ServerMsgQuestListRefresh& from);
  ServerMsgQuestListRefresh(ServerMsgQuestListRefresh&& from) noexcept
    : ServerMsgQuestListRefresh() {
    *this = ::std::move(from);
  }

  inline ServerMsgQuestListRefresh& operator=(const ServerMsgQuestListRefresh& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServerMsgQuestListRefresh& operator=(ServerMsgQuestListRefresh&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ServerMsgQuestListRefresh& default_instance() {
    return *internal_default_instance();
  }
  static inline const ServerMsgQuestListRefresh* internal_default_instance() {
    return reinterpret_cast<const ServerMsgQuestListRefresh*>(
               &_ServerMsgQuestListRefresh_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    38;

  friend void swap(ServerMsgQuestListRefresh& a, ServerMsgQuestListRefresh& b) {
    a.Swap(&b);
  }
  inline void Swap(ServerMsgQuestListRefresh* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ServerMsgQuestListRefresh* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ServerMsgQuestListRefresh* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ServerMsgQuestListRefresh>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ServerMsgQuestListRefresh& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ServerMsgQuestListRefresh& from) {
    ServerMsgQuestListRefresh::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServerMsgQuestListRefresh* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "servermessage.ServerMsgQuestListRefresh";
  }
  protected:
  explicit ServerMsgQuestListRefresh(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObjectIdFieldNumber = 1,
    kSceneIdFieldNumber = 2,
  };
  // int32 object_id = 1;
  void clear_object_id();
  int32_t object_id() const;
  void set_object_id(int32_t value);
  private:
  int32_t _internal_object_id() const;
  void _internal_set_object_id(int32_t value);
  public:

  // int32 scene_id = 2;
  void clear_scene_id();
  int32_t scene_id() const;
  void set_scene_id(int32_t value);
  private:
  int32_t _internal_scene_id() const;
  void _internal_set_scene_id(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:servermessage.ServerMsgQuestListRefresh)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int32_t object_id_;
    int32_t scene_id_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_server_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class ServerMsgSkillSettingResult final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:servermessage.ServerMsgSkillSettingResult) */ {
 public:
  inline ServerMsgSkillSettingResult() : ServerMsgSkillSettingResult(nullptr) {}
  ~ServerMsgSkillSettingResult() override;
  explicit PROTOBUF_CONSTEXPR ServerMsgSkillSettingResult(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ServerMsgSkillSettingResult(const ServerMsgSkillSettingResult& from);
  ServerMsgSkillSettingResult(ServerMsgSkillSettingResult&& from) noexcept
    : ServerMsgSkillSettingResult() {
    *this = ::std::move(from);
  }

  inline ServerMsgSkillSettingResult& operator=(const ServerMsgSkillSettingResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServerMsgSkillSettingResult& operator=(ServerMsgSkillSettingResult&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ServerMsgSkillSettingResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const ServerMsgSkillSettingResult* internal_default_instance() {
    return reinterpret_cast<const ServerMsgSkillSettingResult*>(
               &_ServerMsgSkillSettingResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    39;

  friend void swap(ServerMsgSkillSettingResult& a, ServerMsgSkillSettingResult& b) {
    a.Swap(&b);
  }
  inline void Swap(ServerMsgSkillSettingResult* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ServerMsgSkillSettingResult* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ServerMsgSkillSettingResult* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ServerMsgSkillSettingResult>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ServerMsgSkillSettingResult& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ServerMsgSkillSettingResult& from) {
    ServerMsgSkillSettingResult::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServerMsgSkillSettingResult* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "servermessage.ServerMsgSkillSettingResult";
  }
  protected:
  explicit ServerMsgSkillSettingResult(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSettingFieldNumber = 2,
    kObjectIdFieldNumber = 1,
    kIndexFieldNumber = 3,
  };
  // .base.Player_Setting setting = 2;
  bool has_setting() const;
  private:
  bool _internal_has_setting() const;
  public:
  void clear_setting();
  const ::base::Player_Setting& setting() const;
  PROTOBUF_NODISCARD ::base::Player_Setting* release_setting();
  ::base::Player_Setting* mutable_setting();
  void set_allocated_setting(::base::Player_Setting* setting);
  private:
  const ::base::Player_Setting& _internal_setting() const;
  ::base::Player_Setting* _internal_mutable_setting();
  public:
  void unsafe_arena_set_allocated_setting(
      ::base::Player_Setting* setting);
  ::base::Player_Setting* unsafe_arena_release_setting();

  // int32 object_id = 1;
  void clear_object_id();
  int32_t object_id() const;
  void set_object_id(int32_t value);
  private:
  int32_t _internal_object_id() const;
  void _internal_set_object_id(int32_t value);
  public:

  // int32 index = 3;
  void clear_index();
  int32_t index() const;
  void set_index(int32_t value);
  private:
  int32_t _internal_index() const;
  void _internal_set_index(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:servermessage.ServerMsgSkillSettingResult)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::base::Player_Setting* setting_;
    int32_t object_id_;
    int32_t index_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_server_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class ServerMsgScriptCommand final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:servermessage.ServerMsgScriptCommand) */ {
 public:
  inline ServerMsgScriptCommand() : ServerMsgScriptCommand(nullptr) {}
  ~ServerMsgScriptCommand() override;
  explicit PROTOBUF_CONSTEXPR ServerMsgScriptCommand(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ServerMsgScriptCommand(const ServerMsgScriptCommand& from);
  ServerMsgScriptCommand(ServerMsgScriptCommand&& from) noexcept
    : ServerMsgScriptCommand() {
    *this = ::std::move(from);
  }

  inline ServerMsgScriptCommand& operator=(const ServerMsgScriptCommand& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServerMsgScriptCommand& operator=(ServerMsgScriptCommand&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ServerMsgScriptCommand& default_instance() {
    return *internal_default_instance();
  }
  static inline const ServerMsgScriptCommand* internal_default_instance() {
    return reinterpret_cast<const ServerMsgScriptCommand*>(
               &_ServerMsgScriptCommand_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    40;

  friend void swap(ServerMsgScriptCommand& a, ServerMsgScriptCommand& b) {
    a.Swap(&b);
  }
  inline void Swap(ServerMsgScriptCommand* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ServerMsgScriptCommand* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ServerMsgScriptCommand* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ServerMsgScriptCommand>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ServerMsgScriptCommand& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ServerMsgScriptCommand& from) {
    ServerMsgScriptCommand::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServerMsgScriptCommand* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "servermessage.ServerMsgScriptCommand";
  }
  protected:
  explicit ServerMsgScriptCommand(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kQuestTipsFieldNumber = 6,
    kSettingFieldNumber = 2,
    kContinueParamFieldNumber = 4,
    kQuestInfoFieldNumber = 5,
    kCmdIdFieldNumber = 1,
    kIndexFieldNumber = 3,
  };
  // string quest_tips = 6;
  void clear_quest_tips();
  const std::string& quest_tips() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_quest_tips(ArgT0&& arg0, ArgT... args);
  std::string* mutable_quest_tips();
  PROTOBUF_NODISCARD std::string* release_quest_tips();
  void set_allocated_quest_tips(std::string* quest_tips);
  private:
  const std::string& _internal_quest_tips() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_quest_tips(const std::string& value);
  std::string* _internal_mutable_quest_tips();
  public:

  // .base.Player_Setting setting = 2;
  bool has_setting() const;
  private:
  bool _internal_has_setting() const;
  public:
  void clear_setting();
  const ::base::Player_Setting& setting() const;
  PROTOBUF_NODISCARD ::base::Player_Setting* release_setting();
  ::base::Player_Setting* mutable_setting();
  void set_allocated_setting(::base::Player_Setting* setting);
  private:
  const ::base::Player_Setting& _internal_setting() const;
  ::base::Player_Setting* _internal_mutable_setting();
  public:
  void unsafe_arena_set_allocated_setting(
      ::base::Player_Setting* setting);
  ::base::Player_Setting* unsafe_arena_release_setting();

  // .base.ScriptParam_QuestInfo continue_param = 4;
  bool has_continue_param() const;
  private:
  bool _internal_has_continue_param() const;
  public:
  void clear_continue_param();
  const ::base::ScriptParam_QuestInfo& continue_param() const;
  PROTOBUF_NODISCARD ::base::ScriptParam_QuestInfo* release_continue_param();
  ::base::ScriptParam_QuestInfo* mutable_continue_param();
  void set_allocated_continue_param(::base::ScriptParam_QuestInfo* continue_param);
  private:
  const ::base::ScriptParam_QuestInfo& _internal_continue_param() const;
  ::base::ScriptParam_QuestInfo* _internal_mutable_continue_param();
  public:
  void unsafe_arena_set_allocated_continue_param(
      ::base::ScriptParam_QuestInfo* continue_param);
  ::base::ScriptParam_QuestInfo* unsafe_arena_release_continue_param();

  // .base.ScriptParam_QuestInfo quest_info = 5;
  bool has_quest_info() const;
  private:
  bool _internal_has_quest_info() const;
  public:
  void clear_quest_info();
  const ::base::ScriptParam_QuestInfo& quest_info() const;
  PROTOBUF_NODISCARD ::base::ScriptParam_QuestInfo* release_quest_info();
  ::base::ScriptParam_QuestInfo* mutable_quest_info();
  void set_allocated_quest_info(::base::ScriptParam_QuestInfo* quest_info);
  private:
  const ::base::ScriptParam_QuestInfo& _internal_quest_info() const;
  ::base::ScriptParam_QuestInfo* _internal_mutable_quest_info();
  public:
  void unsafe_arena_set_allocated_quest_info(
      ::base::ScriptParam_QuestInfo* quest_info);
  ::base::ScriptParam_QuestInfo* unsafe_arena_release_quest_info();

  // int32 cmd_id = 1;
  void clear_cmd_id();
  int32_t cmd_id() const;
  void set_cmd_id(int32_t value);
  private:
  int32_t _internal_cmd_id() const;
  void _internal_set_cmd_id(int32_t value);
  public:

  // int32 index = 3;
  void clear_index();
  int32_t index() const;
  void set_index(int32_t value);
  private:
  int32_t _internal_index() const;
  void _internal_set_index(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:servermessage.ServerMsgScriptCommand)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr quest_tips_;
    ::base::Player_Setting* setting_;
    ::base::ScriptParam_QuestInfo* continue_param_;
    ::base::ScriptParam_QuestInfo* quest_info_;
    int32_t cmd_id_;
    int32_t index_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_server_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class ServerMsgSkillUpgrade final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:servermessage.ServerMsgSkillUpgrade) */ {
 public:
  inline ServerMsgSkillUpgrade() : ServerMsgSkillUpgrade(nullptr) {}
  ~ServerMsgSkillUpgrade() override;
  explicit PROTOBUF_CONSTEXPR ServerMsgSkillUpgrade(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ServerMsgSkillUpgrade(const ServerMsgSkillUpgrade& from);
  ServerMsgSkillUpgrade(ServerMsgSkillUpgrade&& from) noexcept
    : ServerMsgSkillUpgrade() {
    *this = ::std::move(from);
  }

  inline ServerMsgSkillUpgrade& operator=(const ServerMsgSkillUpgrade& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServerMsgSkillUpgrade& operator=(ServerMsgSkillUpgrade&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ServerMsgSkillUpgrade& default_instance() {
    return *internal_default_instance();
  }
  static inline const ServerMsgSkillUpgrade* internal_default_instance() {
    return reinterpret_cast<const ServerMsgSkillUpgrade*>(
               &_ServerMsgSkillUpgrade_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    41;

  friend void swap(ServerMsgSkillUpgrade& a, ServerMsgSkillUpgrade& b) {
    a.Swap(&b);
  }
  inline void Swap(ServerMsgSkillUpgrade* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ServerMsgSkillUpgrade* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ServerMsgSkillUpgrade* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ServerMsgSkillUpgrade>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ServerMsgSkillUpgrade& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ServerMsgSkillUpgrade& from) {
    ServerMsgSkillUpgrade::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServerMsgSkillUpgrade* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "servermessage.ServerMsgSkillUpgrade";
  }
  protected:
  explicit ServerMsgSkillUpgrade(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObjectIdFieldNumber = 1,
    kSkillIdFieldNumber = 2,
    kSkillLevelFieldNumber = 3,
    kSucessFieldNumber = 4,
    kTypeFieldNumber = 5,
  };
  // int32 object_id = 1;
  void clear_object_id();
  int32_t object_id() const;
  void set_object_id(int32_t value);
  private:
  int32_t _internal_object_id() const;
  void _internal_set_object_id(int32_t value);
  public:

  // int32 skill_id = 2;
  void clear_skill_id();
  int32_t skill_id() const;
  void set_skill_id(int32_t value);
  private:
  int32_t _internal_skill_id() const;
  void _internal_set_skill_id(int32_t value);
  public:

  // int32 skill_level = 3;
  void clear_skill_level();
  int32_t skill_level() const;
  void set_skill_level(int32_t value);
  private:
  int32_t _internal_skill_level() const;
  void _internal_set_skill_level(int32_t value);
  public:

  // bool sucess = 4;
  void clear_sucess();
  bool sucess() const;
  void set_sucess(bool value);
  private:
  bool _internal_sucess() const;
  void _internal_set_sucess(bool value);
  public:

  // int32 type = 5;
  void clear_type();
  int32_t type() const;
  void set_type(int32_t value);
  private:
  int32_t _internal_type() const;
  void _internal_set_type(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:servermessage.ServerMsgSkillUpgrade)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int32_t object_id_;
    int32_t skill_id_;
    int32_t skill_level_;
    bool sucess_;
    int32_t type_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_server_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class ServerMsgSwapItem final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:servermessage.ServerMsgSwapItem) */ {
 public:
  inline ServerMsgSwapItem() : ServerMsgSwapItem(nullptr) {}
  ~ServerMsgSwapItem() override;
  explicit PROTOBUF_CONSTEXPR ServerMsgSwapItem(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ServerMsgSwapItem(const ServerMsgSwapItem& from);
  ServerMsgSwapItem(ServerMsgSwapItem&& from) noexcept
    : ServerMsgSwapItem() {
    *this = ::std::move(from);
  }

  inline ServerMsgSwapItem& operator=(const ServerMsgSwapItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServerMsgSwapItem& operator=(ServerMsgSwapItem&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ServerMsgSwapItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const ServerMsgSwapItem* internal_default_instance() {
    return reinterpret_cast<const ServerMsgSwapItem*>(
               &_ServerMsgSwapItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    42;

  friend void swap(ServerMsgSwapItem& a, ServerMsgSwapItem& b) {
    a.Swap(&b);
  }
  inline void Swap(ServerMsgSwapItem* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ServerMsgSwapItem* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ServerMsgSwapItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ServerMsgSwapItem>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ServerMsgSwapItem& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ServerMsgSwapItem& from) {
    ServerMsgSwapItem::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServerMsgSwapItem* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "servermessage.ServerMsgSwapItem";
  }
  protected:
  explicit ServerMsgSwapItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
    kSourcePosFieldNumber = 2,
    kDestPosFieldNumber = 3,
  };
  // int32 result = 1;
  void clear_result();
  int32_t result() const;
  void set_result(int32_t value);
  private:
  int32_t _internal_result() const;
  void _internal_set_result(int32_t value);
  public:

  // int32 source_pos = 2;
  void clear_source_pos();
  int32_t source_pos() const;
  void set_source_pos(int32_t value);
  private:
  int32_t _internal_source_pos() const;
  void _internal_set_source_pos(int32_t value);
  public:

  // int32 dest_pos = 3;
  void clear_dest_pos();
  int32_t dest_pos() const;
  void set_dest_pos(int32_t value);
  private:
  int32_t _internal_dest_pos() const;
  void _internal_set_dest_pos(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:servermessage.ServerMsgSwapItem)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int32_t result_;
    int32_t source_pos_;
    int32_t dest_pos_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_server_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class ServerMsgTargetListAndHitFlags final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:servermessage.ServerMsgTargetListAndHitFlags) */ {
 public:
  inline ServerMsgTargetListAndHitFlags() : ServerMsgTargetListAndHitFlags(nullptr) {}
  ~ServerMsgTargetListAndHitFlags() override;
  explicit PROTOBUF_CONSTEXPR ServerMsgTargetListAndHitFlags(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ServerMsgTargetListAndHitFlags(const ServerMsgTargetListAndHitFlags& from);
  ServerMsgTargetListAndHitFlags(ServerMsgTargetListAndHitFlags&& from) noexcept
    : ServerMsgTargetListAndHitFlags() {
    *this = ::std::move(from);
  }

  inline ServerMsgTargetListAndHitFlags& operator=(const ServerMsgTargetListAndHitFlags& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServerMsgTargetListAndHitFlags& operator=(ServerMsgTargetListAndHitFlags&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ServerMsgTargetListAndHitFlags& default_instance() {
    return *internal_default_instance();
  }
  static inline const ServerMsgTargetListAndHitFlags* internal_default_instance() {
    return reinterpret_cast<const ServerMsgTargetListAndHitFlags*>(
               &_ServerMsgTargetListAndHitFlags_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    43;

  friend void swap(ServerMsgTargetListAndHitFlags& a, ServerMsgTargetListAndHitFlags& b) {
    a.Swap(&b);
  }
  inline void Swap(ServerMsgTargetListAndHitFlags* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ServerMsgTargetListAndHitFlags* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ServerMsgTargetListAndHitFlags* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ServerMsgTargetListAndHitFlags>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ServerMsgTargetListAndHitFlags& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ServerMsgTargetListAndHitFlags& from) {
    ServerMsgTargetListAndHitFlags::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServerMsgTargetListAndHitFlags* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "servermessage.ServerMsgTargetListAndHitFlags";
  }
  protected:
  explicit ServerMsgTargetListAndHitFlags(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTargetListFieldNumber = 4,
    kObjectIdFieldNumber = 1,
    kLogicCountFieldNumber = 2,
    kSkillIdFieldNumber = 3,
    kPositionXFieldNumber = 5,
    kPositionZFieldNumber = 6,
  };
  // repeated int32 target_list = 4;
  int target_list_size() const;
  private:
  int _internal_target_list_size() const;
  public:
  void clear_target_list();
  private:
  int32_t _internal_target_list(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      _internal_target_list() const;
  void _internal_add_target_list(int32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      _internal_mutable_target_list();
  public:
  int32_t target_list(int index) const;
  void set_target_list(int index, int32_t value);
  void add_target_list(int32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      target_list() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      mutable_target_list();

  // int32 object_id = 1;
  void clear_object_id();
  int32_t object_id() const;
  void set_object_id(int32_t value);
  private:
  int32_t _internal_object_id() const;
  void _internal_set_object_id(int32_t value);
  public:

  // int32 logic_count = 2;
  void clear_logic_count();
  int32_t logic_count() const;
  void set_logic_count(int32_t value);
  private:
  int32_t _internal_logic_count() const;
  void _internal_set_logic_count(int32_t value);
  public:

  // int32 skill_id = 3;
  void clear_skill_id();
  int32_t skill_id() const;
  void set_skill_id(int32_t value);
  private:
  int32_t _internal_skill_id() const;
  void _internal_set_skill_id(int32_t value);
  public:

  // float position_x = 5;
  void clear_position_x();
  float position_x() const;
  void set_position_x(float value);
  private:
  float _internal_position_x() const;
  void _internal_set_position_x(float value);
  public:

  // float position_z = 6;
  void clear_position_z();
  float position_z() const;
  void set_position_z(float value);
  private:
  float _internal_position_z() const;
  void _internal_set_position_z(float value);
  public:

  // @@protoc_insertion_point(class_scope:servermessage.ServerMsgTargetListAndHitFlags)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t > target_list_;
    mutable std::atomic<int> _target_list_cached_byte_size_;
    int32_t object_id_;
    int32_t logic_count_;
    int32_t skill_id_;
    float position_x_;
    float position_z_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_server_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class ServerMsgTaskDownEquipResult final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:servermessage.ServerMsgTaskDownEquipResult) */ {
 public:
  inline ServerMsgTaskDownEquipResult() : ServerMsgTaskDownEquipResult(nullptr) {}
  ~ServerMsgTaskDownEquipResult() override;
  explicit PROTOBUF_CONSTEXPR ServerMsgTaskDownEquipResult(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ServerMsgTaskDownEquipResult(const ServerMsgTaskDownEquipResult& from);
  ServerMsgTaskDownEquipResult(ServerMsgTaskDownEquipResult&& from) noexcept
    : ServerMsgTaskDownEquipResult() {
    *this = ::std::move(from);
  }

  inline ServerMsgTaskDownEquipResult& operator=(const ServerMsgTaskDownEquipResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServerMsgTaskDownEquipResult& operator=(ServerMsgTaskDownEquipResult&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ServerMsgTaskDownEquipResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const ServerMsgTaskDownEquipResult* internal_default_instance() {
    return reinterpret_cast<const ServerMsgTaskDownEquipResult*>(
               &_ServerMsgTaskDownEquipResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    44;

  friend void swap(ServerMsgTaskDownEquipResult& a, ServerMsgTaskDownEquipResult& b) {
    a.Swap(&b);
  }
  inline void Swap(ServerMsgTaskDownEquipResult* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ServerMsgTaskDownEquipResult* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ServerMsgTaskDownEquipResult* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ServerMsgTaskDownEquipResult>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ServerMsgTaskDownEquipResult& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ServerMsgTaskDownEquipResult& from) {
    ServerMsgTaskDownEquipResult::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServerMsgTaskDownEquipResult* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "servermessage.ServerMsgTaskDownEquipResult";
  }
  protected:
  explicit ServerMsgTaskDownEquipResult(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
    kPlayerIdFieldNumber = 2,
    kMapIdFieldNumber = 3,
    kEquipPointFieldNumber = 4,
    kBagIndexFieldNumber = 5,
  };
  // int32 result = 1;
  void clear_result();
  int32_t result() const;
  void set_result(int32_t value);
  private:
  int32_t _internal_result() const;
  void _internal_set_result(int32_t value);
  public:

  // int32 player_id = 2;
  void clear_player_id();
  int32_t player_id() const;
  void set_player_id(int32_t value);
  private:
  int32_t _internal_player_id() const;
  void _internal_set_player_id(int32_t value);
  public:

  // int32 map_id = 3;
  void clear_map_id();
  int32_t map_id() const;
  void set_map_id(int32_t value);
  private:
  int32_t _internal_map_id() const;
  void _internal_set_map_id(int32_t value);
  public:

  // int32 equip_point = 4;
  void clear_equip_point();
  int32_t equip_point() const;
  void set_equip_point(int32_t value);
  private:
  int32_t _internal_equip_point() const;
  void _internal_set_equip_point(int32_t value);
  public:

  // int32 bag_index = 5;
  void clear_bag_index();
  int32_t bag_index() const;
  void set_bag_index(int32_t value);
  private:
  int32_t _internal_bag_index() const;
  void _internal_set_bag_index(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:servermessage.ServerMsgTaskDownEquipResult)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int32_t result_;
    int32_t player_id_;
    int32_t map_id_;
    int32_t equip_point_;
    int32_t bag_index_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_server_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class ServerMsgUseEquipResult final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:servermessage.ServerMsgUseEquipResult) */ {
 public:
  inline ServerMsgUseEquipResult() : ServerMsgUseEquipResult(nullptr) {}
  ~ServerMsgUseEquipResult() override;
  explicit PROTOBUF_CONSTEXPR ServerMsgUseEquipResult(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ServerMsgUseEquipResult(const ServerMsgUseEquipResult& from);
  ServerMsgUseEquipResult(ServerMsgUseEquipResult&& from) noexcept
    : ServerMsgUseEquipResult() {
    *this = ::std::move(from);
  }

  inline ServerMsgUseEquipResult& operator=(const ServerMsgUseEquipResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServerMsgUseEquipResult& operator=(ServerMsgUseEquipResult&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ServerMsgUseEquipResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const ServerMsgUseEquipResult* internal_default_instance() {
    return reinterpret_cast<const ServerMsgUseEquipResult*>(
               &_ServerMsgUseEquipResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    45;

  friend void swap(ServerMsgUseEquipResult& a, ServerMsgUseEquipResult& b) {
    a.Swap(&b);
  }
  inline void Swap(ServerMsgUseEquipResult* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ServerMsgUseEquipResult* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ServerMsgUseEquipResult* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ServerMsgUseEquipResult>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ServerMsgUseEquipResult& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ServerMsgUseEquipResult& from) {
    ServerMsgUseEquipResult::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServerMsgUseEquipResult* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "servermessage.ServerMsgUseEquipResult";
  }
  protected:
  explicit ServerMsgUseEquipResult(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
    kEquipPointFieldNumber = 2,
    kBagIndexFieldNumber = 3,
  };
  // int32 result = 1;
  void clear_result();
  int32_t result() const;
  void set_result(int32_t value);
  private:
  int32_t _internal_result() const;
  void _internal_set_result(int32_t value);
  public:

  // int32 equip_point = 2;
  void clear_equip_point();
  int32_t equip_point() const;
  void set_equip_point(int32_t value);
  private:
  int32_t _internal_equip_point() const;
  void _internal_set_equip_point(int32_t value);
  public:

  // int32 bag_index = 3;
  void clear_bag_index();
  int32_t bag_index() const;
  void set_bag_index(int32_t value);
  private:
  int32_t _internal_bag_index() const;
  void _internal_set_bag_index(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:servermessage.ServerMsgUseEquipResult)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int32_t result_;
    int32_t equip_point_;
    int32_t bag_index_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_server_5fmessage_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ServerMsgAbilityAction

// int32 object_id = 1;
inline void ServerMsgAbilityAction::clear_object_id() {
  _impl_.object_id_ = 0;
}
inline int32_t ServerMsgAbilityAction::_internal_object_id() const {
  return _impl_.object_id_;
}
inline int32_t ServerMsgAbilityAction::object_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgAbilityAction.object_id)
  return _internal_object_id();
}
inline void ServerMsgAbilityAction::_internal_set_object_id(int32_t value) {
  
  _impl_.object_id_ = value;
}
inline void ServerMsgAbilityAction::set_object_id(int32_t value) {
  _internal_set_object_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgAbilityAction.object_id)
}

// int32 logic_count = 2;
inline void ServerMsgAbilityAction::clear_logic_count() {
  _impl_.logic_count_ = 0;
}
inline int32_t ServerMsgAbilityAction::_internal_logic_count() const {
  return _impl_.logic_count_;
}
inline int32_t ServerMsgAbilityAction::logic_count() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgAbilityAction.logic_count)
  return _internal_logic_count();
}
inline void ServerMsgAbilityAction::_internal_set_logic_count(int32_t value) {
  
  _impl_.logic_count_ = value;
}
inline void ServerMsgAbilityAction::set_logic_count(int32_t value) {
  _internal_set_logic_count(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgAbilityAction.logic_count)
}

// int32 ability_id = 3;
inline void ServerMsgAbilityAction::clear_ability_id() {
  _impl_.ability_id_ = 0;
}
inline int32_t ServerMsgAbilityAction::_internal_ability_id() const {
  return _impl_.ability_id_;
}
inline int32_t ServerMsgAbilityAction::ability_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgAbilityAction.ability_id)
  return _internal_ability_id();
}
inline void ServerMsgAbilityAction::_internal_set_ability_id(int32_t value) {
  
  _impl_.ability_id_ = value;
}
inline void ServerMsgAbilityAction::set_ability_id(int32_t value) {
  _internal_set_ability_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgAbilityAction.ability_id)
}

// int32 prescription_id = 4;
inline void ServerMsgAbilityAction::clear_prescription_id() {
  _impl_.prescription_id_ = 0;
}
inline int32_t ServerMsgAbilityAction::_internal_prescription_id() const {
  return _impl_.prescription_id_;
}
inline int32_t ServerMsgAbilityAction::prescription_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgAbilityAction.prescription_id)
  return _internal_prescription_id();
}
inline void ServerMsgAbilityAction::_internal_set_prescription_id(int32_t value) {
  
  _impl_.prescription_id_ = value;
}
inline void ServerMsgAbilityAction::set_prescription_id(int32_t value) {
  _internal_set_prescription_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgAbilityAction.prescription_id)
}

// int32 target_id = 5;
inline void ServerMsgAbilityAction::clear_target_id() {
  _impl_.target_id_ = 0;
}
inline int32_t ServerMsgAbilityAction::_internal_target_id() const {
  return _impl_.target_id_;
}
inline int32_t ServerMsgAbilityAction::target_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgAbilityAction.target_id)
  return _internal_target_id();
}
inline void ServerMsgAbilityAction::_internal_set_target_id(int32_t value) {
  
  _impl_.target_id_ = value;
}
inline void ServerMsgAbilityAction::set_target_id(int32_t value) {
  _internal_set_target_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgAbilityAction.target_id)
}

// int32 begin_end = 6;
inline void ServerMsgAbilityAction::clear_begin_end() {
  _impl_.begin_end_ = 0;
}
inline int32_t ServerMsgAbilityAction::_internal_begin_end() const {
  return _impl_.begin_end_;
}
inline int32_t ServerMsgAbilityAction::begin_end() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgAbilityAction.begin_end)
  return _internal_begin_end();
}
inline void ServerMsgAbilityAction::_internal_set_begin_end(int32_t value) {
  
  _impl_.begin_end_ = value;
}
inline void ServerMsgAbilityAction::set_begin_end(int32_t value) {
  _internal_set_begin_end(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgAbilityAction.begin_end)
}

// -------------------------------------------------------------------

// ServerMsgAbilityResult

// int32 player_id = 1;
inline void ServerMsgAbilityResult::clear_player_id() {
  _impl_.player_id_ = 0;
}
inline int32_t ServerMsgAbilityResult::_internal_player_id() const {
  return _impl_.player_id_;
}
inline int32_t ServerMsgAbilityResult::player_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgAbilityResult.player_id)
  return _internal_player_id();
}
inline void ServerMsgAbilityResult::_internal_set_player_id(int32_t value) {
  
  _impl_.player_id_ = value;
}
inline void ServerMsgAbilityResult::set_player_id(int32_t value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgAbilityResult.player_id)
}

// int32 map_id = 2;
inline void ServerMsgAbilityResult::clear_map_id() {
  _impl_.map_id_ = 0;
}
inline int32_t ServerMsgAbilityResult::_internal_map_id() const {
  return _impl_.map_id_;
}
inline int32_t ServerMsgAbilityResult::map_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgAbilityResult.map_id)
  return _internal_map_id();
}
inline void ServerMsgAbilityResult::_internal_set_map_id(int32_t value) {
  
  _impl_.map_id_ = value;
}
inline void ServerMsgAbilityResult::set_map_id(int32_t value) {
  _internal_set_map_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgAbilityResult.map_id)
}

// int32 ability_id = 3;
inline void ServerMsgAbilityResult::clear_ability_id() {
  _impl_.ability_id_ = 0;
}
inline int32_t ServerMsgAbilityResult::_internal_ability_id() const {
  return _impl_.ability_id_;
}
inline int32_t ServerMsgAbilityResult::ability_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgAbilityResult.ability_id)
  return _internal_ability_id();
}
inline void ServerMsgAbilityResult::_internal_set_ability_id(int32_t value) {
  
  _impl_.ability_id_ = value;
}
inline void ServerMsgAbilityResult::set_ability_id(int32_t value) {
  _internal_set_ability_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgAbilityResult.ability_id)
}

// int32 prescription_id = 4;
inline void ServerMsgAbilityResult::clear_prescription_id() {
  _impl_.prescription_id_ = 0;
}
inline int32_t ServerMsgAbilityResult::_internal_prescription_id() const {
  return _impl_.prescription_id_;
}
inline int32_t ServerMsgAbilityResult::prescription_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgAbilityResult.prescription_id)
  return _internal_prescription_id();
}
inline void ServerMsgAbilityResult::_internal_set_prescription_id(int32_t value) {
  
  _impl_.prescription_id_ = value;
}
inline void ServerMsgAbilityResult::set_prescription_id(int32_t value) {
  _internal_set_prescription_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgAbilityResult.prescription_id)
}

// int32 result_code = 5;
inline void ServerMsgAbilityResult::clear_result_code() {
  _impl_.result_code_ = 0;
}
inline int32_t ServerMsgAbilityResult::_internal_result_code() const {
  return _impl_.result_code_;
}
inline int32_t ServerMsgAbilityResult::result_code() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgAbilityResult.result_code)
  return _internal_result_code();
}
inline void ServerMsgAbilityResult::_internal_set_result_code(int32_t value) {
  
  _impl_.result_code_ = value;
}
inline void ServerMsgAbilityResult::set_result_code(int32_t value) {
  _internal_set_result_code(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgAbilityResult.result_code)
}

// -------------------------------------------------------------------

// ServerMsgAbilitySuccess

// int32 player_id = 1;
inline void ServerMsgAbilitySuccess::clear_player_id() {
  _impl_.player_id_ = 0;
}
inline int32_t ServerMsgAbilitySuccess::_internal_player_id() const {
  return _impl_.player_id_;
}
inline int32_t ServerMsgAbilitySuccess::player_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgAbilitySuccess.player_id)
  return _internal_player_id();
}
inline void ServerMsgAbilitySuccess::_internal_set_player_id(int32_t value) {
  
  _impl_.player_id_ = value;
}
inline void ServerMsgAbilitySuccess::set_player_id(int32_t value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgAbilitySuccess.player_id)
}

// int32 map_id = 2;
inline void ServerMsgAbilitySuccess::clear_map_id() {
  _impl_.map_id_ = 0;
}
inline int32_t ServerMsgAbilitySuccess::_internal_map_id() const {
  return _impl_.map_id_;
}
inline int32_t ServerMsgAbilitySuccess::map_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgAbilitySuccess.map_id)
  return _internal_map_id();
}
inline void ServerMsgAbilitySuccess::_internal_set_map_id(int32_t value) {
  
  _impl_.map_id_ = value;
}
inline void ServerMsgAbilitySuccess::set_map_id(int32_t value) {
  _internal_set_map_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgAbilitySuccess.map_id)
}

// int32 ability_id = 3;
inline void ServerMsgAbilitySuccess::clear_ability_id() {
  _impl_.ability_id_ = 0;
}
inline int32_t ServerMsgAbilitySuccess::_internal_ability_id() const {
  return _impl_.ability_id_;
}
inline int32_t ServerMsgAbilitySuccess::ability_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgAbilitySuccess.ability_id)
  return _internal_ability_id();
}
inline void ServerMsgAbilitySuccess::_internal_set_ability_id(int32_t value) {
  
  _impl_.ability_id_ = value;
}
inline void ServerMsgAbilitySuccess::set_ability_id(int32_t value) {
  _internal_set_ability_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgAbilitySuccess.ability_id)
}

// int32 prescription_id = 4;
inline void ServerMsgAbilitySuccess::clear_prescription_id() {
  _impl_.prescription_id_ = 0;
}
inline int32_t ServerMsgAbilitySuccess::_internal_prescription_id() const {
  return _impl_.prescription_id_;
}
inline int32_t ServerMsgAbilitySuccess::prescription_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgAbilitySuccess.prescription_id)
  return _internal_prescription_id();
}
inline void ServerMsgAbilitySuccess::_internal_set_prescription_id(int32_t value) {
  
  _impl_.prescription_id_ = value;
}
inline void ServerMsgAbilitySuccess::set_prescription_id(int32_t value) {
  _internal_set_prescription_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgAbilitySuccess.prescription_id)
}

// int32 result_code = 5;
inline void ServerMsgAbilitySuccess::clear_result_code() {
  _impl_.result_code_ = 0;
}
inline int32_t ServerMsgAbilitySuccess::_internal_result_code() const {
  return _impl_.result_code_;
}
inline int32_t ServerMsgAbilitySuccess::result_code() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgAbilitySuccess.result_code)
  return _internal_result_code();
}
inline void ServerMsgAbilitySuccess::_internal_set_result_code(int32_t value) {
  
  _impl_.result_code_ = value;
}
inline void ServerMsgAbilitySuccess::set_result_code(int32_t value) {
  _internal_set_result_code(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgAbilitySuccess.result_code)
}

// int32 item_serial = 6;
inline void ServerMsgAbilitySuccess::clear_item_serial() {
  _impl_.item_serial_ = 0;
}
inline int32_t ServerMsgAbilitySuccess::_internal_item_serial() const {
  return _impl_.item_serial_;
}
inline int32_t ServerMsgAbilitySuccess::item_serial() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgAbilitySuccess.item_serial)
  return _internal_item_serial();
}
inline void ServerMsgAbilitySuccess::_internal_set_item_serial(int32_t value) {
  
  _impl_.item_serial_ = value;
}
inline void ServerMsgAbilitySuccess::set_item_serial(int32_t value) {
  _internal_set_item_serial(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgAbilitySuccess.item_serial)
}

// -------------------------------------------------------------------

// ServerMsgAddQuest

// int32 player_id = 1;
inline void ServerMsgAddQuest::clear_player_id() {
  _impl_.player_id_ = 0;
}
inline int32_t ServerMsgAddQuest::_internal_player_id() const {
  return _impl_.player_id_;
}
inline int32_t ServerMsgAddQuest::player_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgAddQuest.player_id)
  return _internal_player_id();
}
inline void ServerMsgAddQuest::_internal_set_player_id(int32_t value) {
  
  _impl_.player_id_ = value;
}
inline void ServerMsgAddQuest::set_player_id(int32_t value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgAddQuest.player_id)
}

// .base.Quest quest = 2;
inline bool ServerMsgAddQuest::_internal_has_quest() const {
  return this != internal_default_instance() && _impl_.quest_ != nullptr;
}
inline bool ServerMsgAddQuest::has_quest() const {
  return _internal_has_quest();
}
inline const ::base::Quest& ServerMsgAddQuest::_internal_quest() const {
  const ::base::Quest* p = _impl_.quest_;
  return p != nullptr ? *p : reinterpret_cast<const ::base::Quest&>(
      ::base::_Quest_default_instance_);
}
inline const ::base::Quest& ServerMsgAddQuest::quest() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgAddQuest.quest)
  return _internal_quest();
}
inline void ServerMsgAddQuest::unsafe_arena_set_allocated_quest(
    ::base::Quest* quest) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.quest_);
  }
  _impl_.quest_ = quest;
  if (quest) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:servermessage.ServerMsgAddQuest.quest)
}
inline ::base::Quest* ServerMsgAddQuest::release_quest() {
  
  ::base::Quest* temp = _impl_.quest_;
  _impl_.quest_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::base::Quest* ServerMsgAddQuest::unsafe_arena_release_quest() {
  // @@protoc_insertion_point(field_release:servermessage.ServerMsgAddQuest.quest)
  
  ::base::Quest* temp = _impl_.quest_;
  _impl_.quest_ = nullptr;
  return temp;
}
inline ::base::Quest* ServerMsgAddQuest::_internal_mutable_quest() {
  
  if (_impl_.quest_ == nullptr) {
    auto* p = CreateMaybeMessage<::base::Quest>(GetArenaForAllocation());
    _impl_.quest_ = p;
  }
  return _impl_.quest_;
}
inline ::base::Quest* ServerMsgAddQuest::mutable_quest() {
  ::base::Quest* _msg = _internal_mutable_quest();
  // @@protoc_insertion_point(field_mutable:servermessage.ServerMsgAddQuest.quest)
  return _msg;
}
inline void ServerMsgAddQuest::set_allocated_quest(::base::Quest* quest) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.quest_);
  }
  if (quest) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(quest));
    if (message_arena != submessage_arena) {
      quest = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, quest, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.quest_ = quest;
  // @@protoc_insertion_point(field_set_allocated:servermessage.ServerMsgAddQuest.quest)
}

// -------------------------------------------------------------------

// ServerMsgAddSkillToSkillList

// int32 object_id = 1;
inline void ServerMsgAddSkillToSkillList::clear_object_id() {
  _impl_.object_id_ = 0;
}
inline int32_t ServerMsgAddSkillToSkillList::_internal_object_id() const {
  return _impl_.object_id_;
}
inline int32_t ServerMsgAddSkillToSkillList::object_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgAddSkillToSkillList.object_id)
  return _internal_object_id();
}
inline void ServerMsgAddSkillToSkillList::_internal_set_object_id(int32_t value) {
  
  _impl_.object_id_ = value;
}
inline void ServerMsgAddSkillToSkillList::set_object_id(int32_t value) {
  _internal_set_object_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgAddSkillToSkillList.object_id)
}

// int32 skill_id = 2;
inline void ServerMsgAddSkillToSkillList::clear_skill_id() {
  _impl_.skill_id_ = 0;
}
inline int32_t ServerMsgAddSkillToSkillList::_internal_skill_id() const {
  return _impl_.skill_id_;
}
inline int32_t ServerMsgAddSkillToSkillList::skill_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgAddSkillToSkillList.skill_id)
  return _internal_skill_id();
}
inline void ServerMsgAddSkillToSkillList::_internal_set_skill_id(int32_t value) {
  
  _impl_.skill_id_ = value;
}
inline void ServerMsgAddSkillToSkillList::set_skill_id(int32_t value) {
  _internal_set_skill_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgAddSkillToSkillList.skill_id)
}

// int32 skill_state = 3;
inline void ServerMsgAddSkillToSkillList::clear_skill_state() {
  _impl_.skill_state_ = 0;
}
inline int32_t ServerMsgAddSkillToSkillList::_internal_skill_state() const {
  return _impl_.skill_state_;
}
inline int32_t ServerMsgAddSkillToSkillList::skill_state() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgAddSkillToSkillList.skill_state)
  return _internal_skill_state();
}
inline void ServerMsgAddSkillToSkillList::_internal_set_skill_state(int32_t value) {
  
  _impl_.skill_state_ = value;
}
inline void ServerMsgAddSkillToSkillList::set_skill_state(int32_t value) {
  _internal_set_skill_state(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgAddSkillToSkillList.skill_state)
}

// int32 skill_level = 4;
inline void ServerMsgAddSkillToSkillList::clear_skill_level() {
  _impl_.skill_level_ = 0;
}
inline int32_t ServerMsgAddSkillToSkillList::_internal_skill_level() const {
  return _impl_.skill_level_;
}
inline int32_t ServerMsgAddSkillToSkillList::skill_level() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgAddSkillToSkillList.skill_level)
  return _internal_skill_level();
}
inline void ServerMsgAddSkillToSkillList::_internal_set_skill_level(int32_t value) {
  
  _impl_.skill_level_ = value;
}
inline void ServerMsgAddSkillToSkillList::set_skill_level(int32_t value) {
  _internal_set_skill_level(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgAddSkillToSkillList.skill_level)
}

// -------------------------------------------------------------------

// ServerMsgCharEquipment

// int32 object_id = 1;
inline void ServerMsgCharEquipment::clear_object_id() {
  _impl_.object_id_ = 0;
}
inline int32_t ServerMsgCharEquipment::_internal_object_id() const {
  return _impl_.object_id_;
}
inline int32_t ServerMsgCharEquipment::object_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgCharEquipment.object_id)
  return _internal_object_id();
}
inline void ServerMsgCharEquipment::_internal_set_object_id(int32_t value) {
  
  _impl_.object_id_ = value;
}
inline void ServerMsgCharEquipment::set_object_id(int32_t value) {
  _internal_set_object_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgCharEquipment.object_id)
}

// int32 scene_id = 2;
inline void ServerMsgCharEquipment::clear_scene_id() {
  _impl_.scene_id_ = 0;
}
inline int32_t ServerMsgCharEquipment::_internal_scene_id() const {
  return _impl_.scene_id_;
}
inline int32_t ServerMsgCharEquipment::scene_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgCharEquipment.scene_id)
  return _internal_scene_id();
}
inline void ServerMsgCharEquipment::_internal_set_scene_id(int32_t value) {
  
  _impl_.scene_id_ = value;
}
inline void ServerMsgCharEquipment::set_scene_id(int32_t value) {
  _internal_set_scene_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgCharEquipment.scene_id)
}

// -------------------------------------------------------------------

// ServerHumanBaseAttrib

// int32 player_id = 1;
inline void ServerHumanBaseAttrib::clear_player_id() {
  _impl_.player_id_ = 0;
}
inline int32_t ServerHumanBaseAttrib::_internal_player_id() const {
  return _impl_.player_id_;
}
inline int32_t ServerHumanBaseAttrib::player_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerHumanBaseAttrib.player_id)
  return _internal_player_id();
}
inline void ServerHumanBaseAttrib::_internal_set_player_id(int32_t value) {
  
  _impl_.player_id_ = value;
}
inline void ServerHumanBaseAttrib::set_player_id(int32_t value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerHumanBaseAttrib.player_id)
}

// .base.Flag64 flags = 2;
inline bool ServerHumanBaseAttrib::_internal_has_flags() const {
  return this != internal_default_instance() && _impl_.flags_ != nullptr;
}
inline bool ServerHumanBaseAttrib::has_flags() const {
  return _internal_has_flags();
}
inline const ::base::Flag64& ServerHumanBaseAttrib::_internal_flags() const {
  const ::base::Flag64* p = _impl_.flags_;
  return p != nullptr ? *p : reinterpret_cast<const ::base::Flag64&>(
      ::base::_Flag64_default_instance_);
}
inline const ::base::Flag64& ServerHumanBaseAttrib::flags() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerHumanBaseAttrib.flags)
  return _internal_flags();
}
inline void ServerHumanBaseAttrib::unsafe_arena_set_allocated_flags(
    ::base::Flag64* flags) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.flags_);
  }
  _impl_.flags_ = flags;
  if (flags) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:servermessage.ServerHumanBaseAttrib.flags)
}
inline ::base::Flag64* ServerHumanBaseAttrib::release_flags() {
  
  ::base::Flag64* temp = _impl_.flags_;
  _impl_.flags_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::base::Flag64* ServerHumanBaseAttrib::unsafe_arena_release_flags() {
  // @@protoc_insertion_point(field_release:servermessage.ServerHumanBaseAttrib.flags)
  
  ::base::Flag64* temp = _impl_.flags_;
  _impl_.flags_ = nullptr;
  return temp;
}
inline ::base::Flag64* ServerHumanBaseAttrib::_internal_mutable_flags() {
  
  if (_impl_.flags_ == nullptr) {
    auto* p = CreateMaybeMessage<::base::Flag64>(GetArenaForAllocation());
    _impl_.flags_ = p;
  }
  return _impl_.flags_;
}
inline ::base::Flag64* ServerHumanBaseAttrib::mutable_flags() {
  ::base::Flag64* _msg = _internal_mutable_flags();
  // @@protoc_insertion_point(field_mutable:servermessage.ServerHumanBaseAttrib.flags)
  return _msg;
}
inline void ServerHumanBaseAttrib::set_allocated_flags(::base::Flag64* flags) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.flags_);
  }
  if (flags) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(flags));
    if (message_arena != submessage_arena) {
      flags = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, flags, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.flags_ = flags;
  // @@protoc_insertion_point(field_set_allocated:servermessage.ServerHumanBaseAttrib.flags)
}

// int32 job = 3;
inline void ServerHumanBaseAttrib::clear_job() {
  _impl_.job_ = 0;
}
inline int32_t ServerHumanBaseAttrib::_internal_job() const {
  return _impl_.job_;
}
inline int32_t ServerHumanBaseAttrib::job() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerHumanBaseAttrib.job)
  return _internal_job();
}
inline void ServerHumanBaseAttrib::_internal_set_job(int32_t value) {
  
  _impl_.job_ = value;
}
inline void ServerHumanBaseAttrib::set_job(int32_t value) {
  _internal_set_job(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerHumanBaseAttrib.job)
}

// int32 country = 4;
inline void ServerHumanBaseAttrib::clear_country() {
  _impl_.country_ = 0;
}
inline int32_t ServerHumanBaseAttrib::_internal_country() const {
  return _impl_.country_;
}
inline int32_t ServerHumanBaseAttrib::country() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerHumanBaseAttrib.country)
  return _internal_country();
}
inline void ServerHumanBaseAttrib::_internal_set_country(int32_t value) {
  
  _impl_.country_ = value;
}
inline void ServerHumanBaseAttrib::set_country(int32_t value) {
  _internal_set_country(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerHumanBaseAttrib.country)
}

// int32 data_id = 5;
inline void ServerHumanBaseAttrib::clear_data_id() {
  _impl_.data_id_ = 0;
}
inline int32_t ServerHumanBaseAttrib::_internal_data_id() const {
  return _impl_.data_id_;
}
inline int32_t ServerHumanBaseAttrib::data_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerHumanBaseAttrib.data_id)
  return _internal_data_id();
}
inline void ServerHumanBaseAttrib::_internal_set_data_id(int32_t value) {
  
  _impl_.data_id_ = value;
}
inline void ServerHumanBaseAttrib::set_data_id(int32_t value) {
  _internal_set_data_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerHumanBaseAttrib.data_id)
}

// int32 level = 6;
inline void ServerHumanBaseAttrib::clear_level() {
  _impl_.level_ = 0;
}
inline int32_t ServerHumanBaseAttrib::_internal_level() const {
  return _impl_.level_;
}
inline int32_t ServerHumanBaseAttrib::level() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerHumanBaseAttrib.level)
  return _internal_level();
}
inline void ServerHumanBaseAttrib::_internal_set_level(int32_t value) {
  
  _impl_.level_ = value;
}
inline void ServerHumanBaseAttrib::set_level(int32_t value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerHumanBaseAttrib.level)
}

// int32 hair_mesh_id = 7;
inline void ServerHumanBaseAttrib::clear_hair_mesh_id() {
  _impl_.hair_mesh_id_ = 0;
}
inline int32_t ServerHumanBaseAttrib::_internal_hair_mesh_id() const {
  return _impl_.hair_mesh_id_;
}
inline int32_t ServerHumanBaseAttrib::hair_mesh_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerHumanBaseAttrib.hair_mesh_id)
  return _internal_hair_mesh_id();
}
inline void ServerHumanBaseAttrib::_internal_set_hair_mesh_id(int32_t value) {
  
  _impl_.hair_mesh_id_ = value;
}
inline void ServerHumanBaseAttrib::set_hair_mesh_id(int32_t value) {
  _internal_set_hair_mesh_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerHumanBaseAttrib.hair_mesh_id)
}

// int32 face_mesh_id = 8;
inline void ServerHumanBaseAttrib::clear_face_mesh_id() {
  _impl_.face_mesh_id_ = 0;
}
inline int32_t ServerHumanBaseAttrib::_internal_face_mesh_id() const {
  return _impl_.face_mesh_id_;
}
inline int32_t ServerHumanBaseAttrib::face_mesh_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerHumanBaseAttrib.face_mesh_id)
  return _internal_face_mesh_id();
}
inline void ServerHumanBaseAttrib::_internal_set_face_mesh_id(int32_t value) {
  
  _impl_.face_mesh_id_ = value;
}
inline void ServerHumanBaseAttrib::set_face_mesh_id(int32_t value) {
  _internal_set_face_mesh_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerHumanBaseAttrib.face_mesh_id)
}

// int32 hp_percent = 9;
inline void ServerHumanBaseAttrib::clear_hp_percent() {
  _impl_.hp_percent_ = 0;
}
inline int32_t ServerHumanBaseAttrib::_internal_hp_percent() const {
  return _impl_.hp_percent_;
}
inline int32_t ServerHumanBaseAttrib::hp_percent() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerHumanBaseAttrib.hp_percent)
  return _internal_hp_percent();
}
inline void ServerHumanBaseAttrib::_internal_set_hp_percent(int32_t value) {
  
  _impl_.hp_percent_ = value;
}
inline void ServerHumanBaseAttrib::set_hp_percent(int32_t value) {
  _internal_set_hp_percent(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerHumanBaseAttrib.hp_percent)
}

// int32 hp = 10;
inline void ServerHumanBaseAttrib::clear_hp() {
  _impl_.hp_ = 0;
}
inline int32_t ServerHumanBaseAttrib::_internal_hp() const {
  return _impl_.hp_;
}
inline int32_t ServerHumanBaseAttrib::hp() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerHumanBaseAttrib.hp)
  return _internal_hp();
}
inline void ServerHumanBaseAttrib::_internal_set_hp(int32_t value) {
  
  _impl_.hp_ = value;
}
inline void ServerHumanBaseAttrib::set_hp(int32_t value) {
  _internal_set_hp(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerHumanBaseAttrib.hp)
}

// int32 hp_max = 11;
inline void ServerHumanBaseAttrib::clear_hp_max() {
  _impl_.hp_max_ = 0;
}
inline int32_t ServerHumanBaseAttrib::_internal_hp_max() const {
  return _impl_.hp_max_;
}
inline int32_t ServerHumanBaseAttrib::hp_max() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerHumanBaseAttrib.hp_max)
  return _internal_hp_max();
}
inline void ServerHumanBaseAttrib::_internal_set_hp_max(int32_t value) {
  
  _impl_.hp_max_ = value;
}
inline void ServerHumanBaseAttrib::set_hp_max(int32_t value) {
  _internal_set_hp_max(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerHumanBaseAttrib.hp_max)
}

// int32 rage = 12;
inline void ServerHumanBaseAttrib::clear_rage() {
  _impl_.rage_ = 0;
}
inline int32_t ServerHumanBaseAttrib::_internal_rage() const {
  return _impl_.rage_;
}
inline int32_t ServerHumanBaseAttrib::rage() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerHumanBaseAttrib.rage)
  return _internal_rage();
}
inline void ServerHumanBaseAttrib::_internal_set_rage(int32_t value) {
  
  _impl_.rage_ = value;
}
inline void ServerHumanBaseAttrib::set_rage(int32_t value) {
  _internal_set_rage(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerHumanBaseAttrib.rage)
}

// int32 max_rage = 13;
inline void ServerHumanBaseAttrib::clear_max_rage() {
  _impl_.max_rage_ = 0;
}
inline int32_t ServerHumanBaseAttrib::_internal_max_rage() const {
  return _impl_.max_rage_;
}
inline int32_t ServerHumanBaseAttrib::max_rage() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerHumanBaseAttrib.max_rage)
  return _internal_max_rage();
}
inline void ServerHumanBaseAttrib::_internal_set_max_rage(int32_t value) {
  
  _impl_.max_rage_ = value;
}
inline void ServerHumanBaseAttrib::set_max_rage(int32_t value) {
  _internal_set_max_rage(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerHumanBaseAttrib.max_rage)
}

// int32 steal_level = 14;
inline void ServerHumanBaseAttrib::clear_steal_level() {
  _impl_.steal_level_ = 0;
}
inline int32_t ServerHumanBaseAttrib::_internal_steal_level() const {
  return _impl_.steal_level_;
}
inline int32_t ServerHumanBaseAttrib::steal_level() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerHumanBaseAttrib.steal_level)
  return _internal_steal_level();
}
inline void ServerHumanBaseAttrib::_internal_set_steal_level(int32_t value) {
  
  _impl_.steal_level_ = value;
}
inline void ServerHumanBaseAttrib::set_steal_level(int32_t value) {
  _internal_set_steal_level(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerHumanBaseAttrib.steal_level)
}

// int32 mood_state = 15;
inline void ServerHumanBaseAttrib::clear_mood_state() {
  _impl_.mood_state_ = 0;
}
inline int32_t ServerHumanBaseAttrib::_internal_mood_state() const {
  return _impl_.mood_state_;
}
inline int32_t ServerHumanBaseAttrib::mood_state() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerHumanBaseAttrib.mood_state)
  return _internal_mood_state();
}
inline void ServerHumanBaseAttrib::_internal_set_mood_state(int32_t value) {
  
  _impl_.mood_state_ = value;
}
inline void ServerHumanBaseAttrib::set_mood_state(int32_t value) {
  _internal_set_mood_state(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerHumanBaseAttrib.mood_state)
}

// float move_speed = 16;
inline void ServerHumanBaseAttrib::clear_move_speed() {
  _impl_.move_speed_ = 0;
}
inline float ServerHumanBaseAttrib::_internal_move_speed() const {
  return _impl_.move_speed_;
}
inline float ServerHumanBaseAttrib::move_speed() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerHumanBaseAttrib.move_speed)
  return _internal_move_speed();
}
inline void ServerHumanBaseAttrib::_internal_set_move_speed(float value) {
  
  _impl_.move_speed_ = value;
}
inline void ServerHumanBaseAttrib::set_move_speed(float value) {
  _internal_set_move_speed(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerHumanBaseAttrib.move_speed)
}

// float attack_speed = 17;
inline void ServerHumanBaseAttrib::clear_attack_speed() {
  _impl_.attack_speed_ = 0;
}
inline float ServerHumanBaseAttrib::_internal_attack_speed() const {
  return _impl_.attack_speed_;
}
inline float ServerHumanBaseAttrib::attack_speed() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerHumanBaseAttrib.attack_speed)
  return _internal_attack_speed();
}
inline void ServerHumanBaseAttrib::_internal_set_attack_speed(float value) {
  
  _impl_.attack_speed_ = value;
}
inline void ServerHumanBaseAttrib::set_attack_speed(float value) {
  _internal_set_attack_speed(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerHumanBaseAttrib.attack_speed)
}

// .base.SCampData camp_data = 18;
inline bool ServerHumanBaseAttrib::_internal_has_camp_data() const {
  return this != internal_default_instance() && _impl_.camp_data_ != nullptr;
}
inline bool ServerHumanBaseAttrib::has_camp_data() const {
  return _internal_has_camp_data();
}
inline const ::base::SCampData& ServerHumanBaseAttrib::_internal_camp_data() const {
  const ::base::SCampData* p = _impl_.camp_data_;
  return p != nullptr ? *p : reinterpret_cast<const ::base::SCampData&>(
      ::base::_SCampData_default_instance_);
}
inline const ::base::SCampData& ServerHumanBaseAttrib::camp_data() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerHumanBaseAttrib.camp_data)
  return _internal_camp_data();
}
inline void ServerHumanBaseAttrib::unsafe_arena_set_allocated_camp_data(
    ::base::SCampData* camp_data) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.camp_data_);
  }
  _impl_.camp_data_ = camp_data;
  if (camp_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:servermessage.ServerHumanBaseAttrib.camp_data)
}
inline ::base::SCampData* ServerHumanBaseAttrib::release_camp_data() {
  
  ::base::SCampData* temp = _impl_.camp_data_;
  _impl_.camp_data_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::base::SCampData* ServerHumanBaseAttrib::unsafe_arena_release_camp_data() {
  // @@protoc_insertion_point(field_release:servermessage.ServerHumanBaseAttrib.camp_data)
  
  ::base::SCampData* temp = _impl_.camp_data_;
  _impl_.camp_data_ = nullptr;
  return temp;
}
inline ::base::SCampData* ServerHumanBaseAttrib::_internal_mutable_camp_data() {
  
  if (_impl_.camp_data_ == nullptr) {
    auto* p = CreateMaybeMessage<::base::SCampData>(GetArenaForAllocation());
    _impl_.camp_data_ = p;
  }
  return _impl_.camp_data_;
}
inline ::base::SCampData* ServerHumanBaseAttrib::mutable_camp_data() {
  ::base::SCampData* _msg = _internal_mutable_camp_data();
  // @@protoc_insertion_point(field_mutable:servermessage.ServerHumanBaseAttrib.camp_data)
  return _msg;
}
inline void ServerHumanBaseAttrib::set_allocated_camp_data(::base::SCampData* camp_data) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.camp_data_);
  }
  if (camp_data) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(camp_data));
    if (message_arena != submessage_arena) {
      camp_data = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, camp_data, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.camp_data_ = camp_data;
  // @@protoc_insertion_point(field_set_allocated:servermessage.ServerHumanBaseAttrib.camp_data)
}

// int32 portrait_id = 19;
inline void ServerHumanBaseAttrib::clear_portrait_id() {
  _impl_.portrait_id_ = 0;
}
inline int32_t ServerHumanBaseAttrib::_internal_portrait_id() const {
  return _impl_.portrait_id_;
}
inline int32_t ServerHumanBaseAttrib::portrait_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerHumanBaseAttrib.portrait_id)
  return _internal_portrait_id();
}
inline void ServerHumanBaseAttrib::_internal_set_portrait_id(int32_t value) {
  
  _impl_.portrait_id_ = value;
}
inline void ServerHumanBaseAttrib::set_portrait_id(int32_t value) {
  _internal_set_portrait_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerHumanBaseAttrib.portrait_id)
}

// int32 model_id = 20;
inline void ServerHumanBaseAttrib::clear_model_id() {
  _impl_.model_id_ = 0;
}
inline int32_t ServerHumanBaseAttrib::_internal_model_id() const {
  return _impl_.model_id_;
}
inline int32_t ServerHumanBaseAttrib::model_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerHumanBaseAttrib.model_id)
  return _internal_model_id();
}
inline void ServerHumanBaseAttrib::_internal_set_model_id(int32_t value) {
  
  _impl_.model_id_ = value;
}
inline void ServerHumanBaseAttrib::set_model_id(int32_t value) {
  _internal_set_model_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerHumanBaseAttrib.model_id)
}

// int32 mount_id = 21;
inline void ServerHumanBaseAttrib::clear_mount_id() {
  _impl_.mount_id_ = 0;
}
inline int32_t ServerHumanBaseAttrib::_internal_mount_id() const {
  return _impl_.mount_id_;
}
inline int32_t ServerHumanBaseAttrib::mount_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerHumanBaseAttrib.mount_id)
  return _internal_mount_id();
}
inline void ServerHumanBaseAttrib::_internal_set_mount_id(int32_t value) {
  
  _impl_.mount_id_ = value;
}
inline void ServerHumanBaseAttrib::set_mount_id(int32_t value) {
  _internal_set_mount_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerHumanBaseAttrib.mount_id)
}

// string name = 22;
inline void ServerHumanBaseAttrib::clear_name() {
  _impl_.name_.ClearToEmpty();
}
inline const std::string& ServerHumanBaseAttrib::name() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerHumanBaseAttrib.name)
  return _internal_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void ServerHumanBaseAttrib::set_name(ArgT0&& arg0, ArgT... args) {
 
 _impl_.name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:servermessage.ServerHumanBaseAttrib.name)
}
inline std::string* ServerHumanBaseAttrib::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:servermessage.ServerHumanBaseAttrib.name)
  return _s;
}
inline const std::string& ServerHumanBaseAttrib::_internal_name() const {
  return _impl_.name_.Get();
}
inline void ServerHumanBaseAttrib::_internal_set_name(const std::string& value) {
  
  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* ServerHumanBaseAttrib::_internal_mutable_name() {
  
  return _impl_.name_.Mutable(GetArenaForAllocation());
}
inline std::string* ServerHumanBaseAttrib::release_name() {
  // @@protoc_insertion_point(field_release:servermessage.ServerHumanBaseAttrib.name)
  return _impl_.name_.Release();
}
inline void ServerHumanBaseAttrib::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  _impl_.name_.SetAllocated(name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:servermessage.ServerHumanBaseAttrib.name)
}

// string country_title = 23;
inline void ServerHumanBaseAttrib::clear_country_title() {
  _impl_.country_title_.ClearToEmpty();
}
inline const std::string& ServerHumanBaseAttrib::country_title() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerHumanBaseAttrib.country_title)
  return _internal_country_title();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void ServerHumanBaseAttrib::set_country_title(ArgT0&& arg0, ArgT... args) {
 
 _impl_.country_title_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:servermessage.ServerHumanBaseAttrib.country_title)
}
inline std::string* ServerHumanBaseAttrib::mutable_country_title() {
  std::string* _s = _internal_mutable_country_title();
  // @@protoc_insertion_point(field_mutable:servermessage.ServerHumanBaseAttrib.country_title)
  return _s;
}
inline const std::string& ServerHumanBaseAttrib::_internal_country_title() const {
  return _impl_.country_title_.Get();
}
inline void ServerHumanBaseAttrib::_internal_set_country_title(const std::string& value) {
  
  _impl_.country_title_.Set(value, GetArenaForAllocation());
}
inline std::string* ServerHumanBaseAttrib::_internal_mutable_country_title() {
  
  return _impl_.country_title_.Mutable(GetArenaForAllocation());
}
inline std::string* ServerHumanBaseAttrib::release_country_title() {
  // @@protoc_insertion_point(field_release:servermessage.ServerHumanBaseAttrib.country_title)
  return _impl_.country_title_.Release();
}
inline void ServerHumanBaseAttrib::set_allocated_country_title(std::string* country_title) {
  if (country_title != nullptr) {
    
  } else {
    
  }
  _impl_.country_title_.SetAllocated(country_title, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.country_title_.IsDefault()) {
    _impl_.country_title_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:servermessage.ServerHumanBaseAttrib.country_title)
}

// string guild_title = 24;
inline void ServerHumanBaseAttrib::clear_guild_title() {
  _impl_.guild_title_.ClearToEmpty();
}
inline const std::string& ServerHumanBaseAttrib::guild_title() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerHumanBaseAttrib.guild_title)
  return _internal_guild_title();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void ServerHumanBaseAttrib::set_guild_title(ArgT0&& arg0, ArgT... args) {
 
 _impl_.guild_title_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:servermessage.ServerHumanBaseAttrib.guild_title)
}
inline std::string* ServerHumanBaseAttrib::mutable_guild_title() {
  std::string* _s = _internal_mutable_guild_title();
  // @@protoc_insertion_point(field_mutable:servermessage.ServerHumanBaseAttrib.guild_title)
  return _s;
}
inline const std::string& ServerHumanBaseAttrib::_internal_guild_title() const {
  return _impl_.guild_title_.Get();
}
inline void ServerHumanBaseAttrib::_internal_set_guild_title(const std::string& value) {
  
  _impl_.guild_title_.Set(value, GetArenaForAllocation());
}
inline std::string* ServerHumanBaseAttrib::_internal_mutable_guild_title() {
  
  return _impl_.guild_title_.Mutable(GetArenaForAllocation());
}
inline std::string* ServerHumanBaseAttrib::release_guild_title() {
  // @@protoc_insertion_point(field_release:servermessage.ServerHumanBaseAttrib.guild_title)
  return _impl_.guild_title_.Release();
}
inline void ServerHumanBaseAttrib::set_allocated_guild_title(std::string* guild_title) {
  if (guild_title != nullptr) {
    
  } else {
    
  }
  _impl_.guild_title_.SetAllocated(guild_title, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.guild_title_.IsDefault()) {
    _impl_.guild_title_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:servermessage.ServerHumanBaseAttrib.guild_title)
}

// string normal_title = 25;
inline void ServerHumanBaseAttrib::clear_normal_title() {
  _impl_.normal_title_.ClearToEmpty();
}
inline const std::string& ServerHumanBaseAttrib::normal_title() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerHumanBaseAttrib.normal_title)
  return _internal_normal_title();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void ServerHumanBaseAttrib::set_normal_title(ArgT0&& arg0, ArgT... args) {
 
 _impl_.normal_title_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:servermessage.ServerHumanBaseAttrib.normal_title)
}
inline std::string* ServerHumanBaseAttrib::mutable_normal_title() {
  std::string* _s = _internal_mutable_normal_title();
  // @@protoc_insertion_point(field_mutable:servermessage.ServerHumanBaseAttrib.normal_title)
  return _s;
}
inline const std::string& ServerHumanBaseAttrib::_internal_normal_title() const {
  return _impl_.normal_title_.Get();
}
inline void ServerHumanBaseAttrib::_internal_set_normal_title(const std::string& value) {
  
  _impl_.normal_title_.Set(value, GetArenaForAllocation());
}
inline std::string* ServerHumanBaseAttrib::_internal_mutable_normal_title() {
  
  return _impl_.normal_title_.Mutable(GetArenaForAllocation());
}
inline std::string* ServerHumanBaseAttrib::release_normal_title() {
  // @@protoc_insertion_point(field_release:servermessage.ServerHumanBaseAttrib.normal_title)
  return _impl_.normal_title_.Release();
}
inline void ServerHumanBaseAttrib::set_allocated_normal_title(std::string* normal_title) {
  if (normal_title != nullptr) {
    
  } else {
    
  }
  _impl_.normal_title_.SetAllocated(normal_title, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.normal_title_.IsDefault()) {
    _impl_.normal_title_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:servermessage.ServerHumanBaseAttrib.normal_title)
}

// int32 country_title_type = 26;
inline void ServerHumanBaseAttrib::clear_country_title_type() {
  _impl_.country_title_type_ = 0;
}
inline int32_t ServerHumanBaseAttrib::_internal_country_title_type() const {
  return _impl_.country_title_type_;
}
inline int32_t ServerHumanBaseAttrib::country_title_type() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerHumanBaseAttrib.country_title_type)
  return _internal_country_title_type();
}
inline void ServerHumanBaseAttrib::_internal_set_country_title_type(int32_t value) {
  
  _impl_.country_title_type_ = value;
}
inline void ServerHumanBaseAttrib::set_country_title_type(int32_t value) {
  _internal_set_country_title_type(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerHumanBaseAttrib.country_title_type)
}

// int32 guild_title_type = 27;
inline void ServerHumanBaseAttrib::clear_guild_title_type() {
  _impl_.guild_title_type_ = 0;
}
inline int32_t ServerHumanBaseAttrib::_internal_guild_title_type() const {
  return _impl_.guild_title_type_;
}
inline int32_t ServerHumanBaseAttrib::guild_title_type() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerHumanBaseAttrib.guild_title_type)
  return _internal_guild_title_type();
}
inline void ServerHumanBaseAttrib::_internal_set_guild_title_type(int32_t value) {
  
  _impl_.guild_title_type_ = value;
}
inline void ServerHumanBaseAttrib::set_guild_title_type(int32_t value) {
  _internal_set_guild_title_type(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerHumanBaseAttrib.guild_title_type)
}

// int32 stall_is_open = 28;
inline void ServerHumanBaseAttrib::clear_stall_is_open() {
  _impl_.stall_is_open_ = 0;
}
inline int32_t ServerHumanBaseAttrib::_internal_stall_is_open() const {
  return _impl_.stall_is_open_;
}
inline int32_t ServerHumanBaseAttrib::stall_is_open() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerHumanBaseAttrib.stall_is_open)
  return _internal_stall_is_open();
}
inline void ServerHumanBaseAttrib::_internal_set_stall_is_open(int32_t value) {
  
  _impl_.stall_is_open_ = value;
}
inline void ServerHumanBaseAttrib::set_stall_is_open(int32_t value) {
  _internal_set_stall_is_open(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerHumanBaseAttrib.stall_is_open)
}

// int32 target_id = 29;
inline void ServerHumanBaseAttrib::clear_target_id() {
  _impl_.target_id_ = 0;
}
inline int32_t ServerHumanBaseAttrib::_internal_target_id() const {
  return _impl_.target_id_;
}
inline int32_t ServerHumanBaseAttrib::target_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerHumanBaseAttrib.target_id)
  return _internal_target_id();
}
inline void ServerHumanBaseAttrib::_internal_set_target_id(int32_t value) {
  
  _impl_.target_id_ = value;
}
inline void ServerHumanBaseAttrib::set_target_id(int32_t value) {
  _internal_set_target_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerHumanBaseAttrib.target_id)
}

// int32 pk_value = 30;
inline void ServerHumanBaseAttrib::clear_pk_value() {
  _impl_.pk_value_ = 0;
}
inline int32_t ServerHumanBaseAttrib::_internal_pk_value() const {
  return _impl_.pk_value_;
}
inline int32_t ServerHumanBaseAttrib::pk_value() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerHumanBaseAttrib.pk_value)
  return _internal_pk_value();
}
inline void ServerHumanBaseAttrib::_internal_set_pk_value(int32_t value) {
  
  _impl_.pk_value_ = value;
}
inline void ServerHumanBaseAttrib::set_pk_value(int32_t value) {
  _internal_set_pk_value(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerHumanBaseAttrib.pk_value)
}

// int32 generation = 31;
inline void ServerHumanBaseAttrib::clear_generation() {
  _impl_.generation_ = 0;
}
inline int32_t ServerHumanBaseAttrib::_internal_generation() const {
  return _impl_.generation_;
}
inline int32_t ServerHumanBaseAttrib::generation() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerHumanBaseAttrib.generation)
  return _internal_generation();
}
inline void ServerHumanBaseAttrib::_internal_set_generation(int32_t value) {
  
  _impl_.generation_ = value;
}
inline void ServerHumanBaseAttrib::set_generation(int32_t value) {
  _internal_set_generation(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerHumanBaseAttrib.generation)
}

// int32 world_id = 32;
inline void ServerHumanBaseAttrib::clear_world_id() {
  _impl_.world_id_ = 0;
}
inline int32_t ServerHumanBaseAttrib::_internal_world_id() const {
  return _impl_.world_id_;
}
inline int32_t ServerHumanBaseAttrib::world_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerHumanBaseAttrib.world_id)
  return _internal_world_id();
}
inline void ServerHumanBaseAttrib::_internal_set_world_id(int32_t value) {
  
  _impl_.world_id_ = value;
}
inline void ServerHumanBaseAttrib::set_world_id(int32_t value) {
  _internal_set_world_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerHumanBaseAttrib.world_id)
}

// uint32 inherence_exp = 33;
inline void ServerHumanBaseAttrib::clear_inherence_exp() {
  _impl_.inherence_exp_ = 0u;
}
inline uint32_t ServerHumanBaseAttrib::_internal_inherence_exp() const {
  return _impl_.inherence_exp_;
}
inline uint32_t ServerHumanBaseAttrib::inherence_exp() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerHumanBaseAttrib.inherence_exp)
  return _internal_inherence_exp();
}
inline void ServerHumanBaseAttrib::_internal_set_inherence_exp(uint32_t value) {
  
  _impl_.inherence_exp_ = value;
}
inline void ServerHumanBaseAttrib::set_inherence_exp(uint32_t value) {
  _internal_set_inherence_exp(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerHumanBaseAttrib.inherence_exp)
}

// uint32 inherence_level = 34;
inline void ServerHumanBaseAttrib::clear_inherence_level() {
  _impl_.inherence_level_ = 0u;
}
inline uint32_t ServerHumanBaseAttrib::_internal_inherence_level() const {
  return _impl_.inherence_level_;
}
inline uint32_t ServerHumanBaseAttrib::inherence_level() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerHumanBaseAttrib.inherence_level)
  return _internal_inherence_level();
}
inline void ServerHumanBaseAttrib::_internal_set_inherence_level(uint32_t value) {
  
  _impl_.inherence_level_ = value;
}
inline void ServerHumanBaseAttrib::set_inherence_level(uint32_t value) {
  _internal_set_inherence_level(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerHumanBaseAttrib.inherence_level)
}

// .base.SHorseGuid current_horse_guid = 35;
inline bool ServerHumanBaseAttrib::_internal_has_current_horse_guid() const {
  return this != internal_default_instance() && _impl_.current_horse_guid_ != nullptr;
}
inline bool ServerHumanBaseAttrib::has_current_horse_guid() const {
  return _internal_has_current_horse_guid();
}
inline const ::base::SHorseGuid& ServerHumanBaseAttrib::_internal_current_horse_guid() const {
  const ::base::SHorseGuid* p = _impl_.current_horse_guid_;
  return p != nullptr ? *p : reinterpret_cast<const ::base::SHorseGuid&>(
      ::base::_SHorseGuid_default_instance_);
}
inline const ::base::SHorseGuid& ServerHumanBaseAttrib::current_horse_guid() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerHumanBaseAttrib.current_horse_guid)
  return _internal_current_horse_guid();
}
inline void ServerHumanBaseAttrib::unsafe_arena_set_allocated_current_horse_guid(
    ::base::SHorseGuid* current_horse_guid) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.current_horse_guid_);
  }
  _impl_.current_horse_guid_ = current_horse_guid;
  if (current_horse_guid) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:servermessage.ServerHumanBaseAttrib.current_horse_guid)
}
inline ::base::SHorseGuid* ServerHumanBaseAttrib::release_current_horse_guid() {
  
  ::base::SHorseGuid* temp = _impl_.current_horse_guid_;
  _impl_.current_horse_guid_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::base::SHorseGuid* ServerHumanBaseAttrib::unsafe_arena_release_current_horse_guid() {
  // @@protoc_insertion_point(field_release:servermessage.ServerHumanBaseAttrib.current_horse_guid)
  
  ::base::SHorseGuid* temp = _impl_.current_horse_guid_;
  _impl_.current_horse_guid_ = nullptr;
  return temp;
}
inline ::base::SHorseGuid* ServerHumanBaseAttrib::_internal_mutable_current_horse_guid() {
  
  if (_impl_.current_horse_guid_ == nullptr) {
    auto* p = CreateMaybeMessage<::base::SHorseGuid>(GetArenaForAllocation());
    _impl_.current_horse_guid_ = p;
  }
  return _impl_.current_horse_guid_;
}
inline ::base::SHorseGuid* ServerHumanBaseAttrib::mutable_current_horse_guid() {
  ::base::SHorseGuid* _msg = _internal_mutable_current_horse_guid();
  // @@protoc_insertion_point(field_mutable:servermessage.ServerHumanBaseAttrib.current_horse_guid)
  return _msg;
}
inline void ServerHumanBaseAttrib::set_allocated_current_horse_guid(::base::SHorseGuid* current_horse_guid) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.current_horse_guid_);
  }
  if (current_horse_guid) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(current_horse_guid));
    if (message_arena != submessage_arena) {
      current_horse_guid = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, current_horse_guid, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.current_horse_guid_ = current_horse_guid;
  // @@protoc_insertion_point(field_set_allocated:servermessage.ServerHumanBaseAttrib.current_horse_guid)
}

// -------------------------------------------------------------------

// ServerMsgCharImpactListUpdate

// int32 owner_id = 1;
inline void ServerMsgCharImpactListUpdate::clear_owner_id() {
  _impl_.owner_id_ = 0;
}
inline int32_t ServerMsgCharImpactListUpdate::_internal_owner_id() const {
  return _impl_.owner_id_;
}
inline int32_t ServerMsgCharImpactListUpdate::owner_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgCharImpactListUpdate.owner_id)
  return _internal_owner_id();
}
inline void ServerMsgCharImpactListUpdate::_internal_set_owner_id(int32_t value) {
  
  _impl_.owner_id_ = value;
}
inline void ServerMsgCharImpactListUpdate::set_owner_id(int32_t value) {
  _internal_set_owner_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgCharImpactListUpdate.owner_id)
}

// int32 scene_id = 2;
inline void ServerMsgCharImpactListUpdate::clear_scene_id() {
  _impl_.scene_id_ = 0;
}
inline int32_t ServerMsgCharImpactListUpdate::_internal_scene_id() const {
  return _impl_.scene_id_;
}
inline int32_t ServerMsgCharImpactListUpdate::scene_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgCharImpactListUpdate.scene_id)
  return _internal_scene_id();
}
inline void ServerMsgCharImpactListUpdate::_internal_set_scene_id(int32_t value) {
  
  _impl_.scene_id_ = value;
}
inline void ServerMsgCharImpactListUpdate::set_scene_id(int32_t value) {
  _internal_set_scene_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgCharImpactListUpdate.scene_id)
}

// int32 impact_count = 3;
inline void ServerMsgCharImpactListUpdate::clear_impact_count() {
  _impl_.impact_count_ = 0;
}
inline int32_t ServerMsgCharImpactListUpdate::_internal_impact_count() const {
  return _impl_.impact_count_;
}
inline int32_t ServerMsgCharImpactListUpdate::impact_count() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgCharImpactListUpdate.impact_count)
  return _internal_impact_count();
}
inline void ServerMsgCharImpactListUpdate::_internal_set_impact_count(int32_t value) {
  
  _impl_.impact_count_ = value;
}
inline void ServerMsgCharImpactListUpdate::set_impact_count(int32_t value) {
  _internal_set_impact_count(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgCharImpactListUpdate.impact_count)
}

// uint32 last_sn = 4;
inline void ServerMsgCharImpactListUpdate::clear_last_sn() {
  _impl_.last_sn_ = 0u;
}
inline uint32_t ServerMsgCharImpactListUpdate::_internal_last_sn() const {
  return _impl_.last_sn_;
}
inline uint32_t ServerMsgCharImpactListUpdate::last_sn() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgCharImpactListUpdate.last_sn)
  return _internal_last_sn();
}
inline void ServerMsgCharImpactListUpdate::_internal_set_last_sn(uint32_t value) {
  
  _impl_.last_sn_ = value;
}
inline void ServerMsgCharImpactListUpdate::set_last_sn(uint32_t value) {
  _internal_set_last_sn(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgCharImpactListUpdate.last_sn)
}

// repeated .base.ImpactStruct a_impact = 5;
inline int ServerMsgCharImpactListUpdate::_internal_a_impact_size() const {
  return _impl_.a_impact_.size();
}
inline int ServerMsgCharImpactListUpdate::a_impact_size() const {
  return _internal_a_impact_size();
}
inline ::base::ImpactStruct* ServerMsgCharImpactListUpdate::mutable_a_impact(int index) {
  // @@protoc_insertion_point(field_mutable:servermessage.ServerMsgCharImpactListUpdate.a_impact)
  return _impl_.a_impact_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::base::ImpactStruct >*
ServerMsgCharImpactListUpdate::mutable_a_impact() {
  // @@protoc_insertion_point(field_mutable_list:servermessage.ServerMsgCharImpactListUpdate.a_impact)
  return &_impl_.a_impact_;
}
inline const ::base::ImpactStruct& ServerMsgCharImpactListUpdate::_internal_a_impact(int index) const {
  return _impl_.a_impact_.Get(index);
}
inline const ::base::ImpactStruct& ServerMsgCharImpactListUpdate::a_impact(int index) const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgCharImpactListUpdate.a_impact)
  return _internal_a_impact(index);
}
inline ::base::ImpactStruct* ServerMsgCharImpactListUpdate::_internal_add_a_impact() {
  return _impl_.a_impact_.Add();
}
inline ::base::ImpactStruct* ServerMsgCharImpactListUpdate::add_a_impact() {
  ::base::ImpactStruct* _add = _internal_add_a_impact();
  // @@protoc_insertion_point(field_add:servermessage.ServerMsgCharImpactListUpdate.a_impact)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::base::ImpactStruct >&
ServerMsgCharImpactListUpdate::a_impact() const {
  // @@protoc_insertion_point(field_list:servermessage.ServerMsgCharImpactListUpdate.a_impact)
  return _impl_.a_impact_;
}

// -------------------------------------------------------------------

// ServerMsgCharMove

// int32 object_id = 1;
inline void ServerMsgCharMove::clear_object_id() {
  _impl_.object_id_ = 0;
}
inline int32_t ServerMsgCharMove::_internal_object_id() const {
  return _impl_.object_id_;
}
inline int32_t ServerMsgCharMove::object_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgCharMove.object_id)
  return _internal_object_id();
}
inline void ServerMsgCharMove::_internal_set_object_id(int32_t value) {
  
  _impl_.object_id_ = value;
}
inline void ServerMsgCharMove::set_object_id(int32_t value) {
  _internal_set_object_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgCharMove.object_id)
}

// int32 handle_id = 2;
inline void ServerMsgCharMove::clear_handle_id() {
  _impl_.handle_id_ = 0;
}
inline int32_t ServerMsgCharMove::_internal_handle_id() const {
  return _impl_.handle_id_;
}
inline int32_t ServerMsgCharMove::handle_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgCharMove.handle_id)
  return _internal_handle_id();
}
inline void ServerMsgCharMove::_internal_set_handle_id(int32_t value) {
  
  _impl_.handle_id_ = value;
}
inline void ServerMsgCharMove::set_handle_id(int32_t value) {
  _internal_set_handle_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgCharMove.handle_id)
}

// int32 impact_count = 3;
inline void ServerMsgCharMove::clear_impact_count() {
  _impl_.impact_count_ = 0;
}
inline int32_t ServerMsgCharMove::_internal_impact_count() const {
  return _impl_.impact_count_;
}
inline int32_t ServerMsgCharMove::impact_count() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgCharMove.impact_count)
  return _internal_impact_count();
}
inline void ServerMsgCharMove::_internal_set_impact_count(int32_t value) {
  
  _impl_.impact_count_ = value;
}
inline void ServerMsgCharMove::set_impact_count(int32_t value) {
  _internal_set_impact_count(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgCharMove.impact_count)
}

// uint32 last_sn = 4;
inline void ServerMsgCharMove::clear_last_sn() {
  _impl_.last_sn_ = 0u;
}
inline uint32_t ServerMsgCharMove::_internal_last_sn() const {
  return _impl_.last_sn_;
}
inline uint32_t ServerMsgCharMove::last_sn() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgCharMove.last_sn)
  return _internal_last_sn();
}
inline void ServerMsgCharMove::_internal_set_last_sn(uint32_t value) {
  
  _impl_.last_sn_ = value;
}
inline void ServerMsgCharMove::set_last_sn(uint32_t value) {
  _internal_set_last_sn(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgCharMove.last_sn)
}

// repeated .base.ImpactStruct a_impact = 5;
inline int ServerMsgCharMove::_internal_a_impact_size() const {
  return _impl_.a_impact_.size();
}
inline int ServerMsgCharMove::a_impact_size() const {
  return _internal_a_impact_size();
}
inline ::base::ImpactStruct* ServerMsgCharMove::mutable_a_impact(int index) {
  // @@protoc_insertion_point(field_mutable:servermessage.ServerMsgCharMove.a_impact)
  return _impl_.a_impact_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::base::ImpactStruct >*
ServerMsgCharMove::mutable_a_impact() {
  // @@protoc_insertion_point(field_mutable_list:servermessage.ServerMsgCharMove.a_impact)
  return &_impl_.a_impact_;
}
inline const ::base::ImpactStruct& ServerMsgCharMove::_internal_a_impact(int index) const {
  return _impl_.a_impact_.Get(index);
}
inline const ::base::ImpactStruct& ServerMsgCharMove::a_impact(int index) const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgCharMove.a_impact)
  return _internal_a_impact(index);
}
inline ::base::ImpactStruct* ServerMsgCharMove::_internal_add_a_impact() {
  return _impl_.a_impact_.Add();
}
inline ::base::ImpactStruct* ServerMsgCharMove::add_a_impact() {
  ::base::ImpactStruct* _add = _internal_add_a_impact();
  // @@protoc_insertion_point(field_add:servermessage.ServerMsgCharMove.a_impact)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::base::ImpactStruct >&
ServerMsgCharMove::a_impact() const {
  // @@protoc_insertion_point(field_list:servermessage.ServerMsgCharMove.a_impact)
  return _impl_.a_impact_;
}

// optional .base.GLPos target_pos = 6;
inline bool ServerMsgCharMove::_internal_has_target_pos() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.target_pos_ != nullptr);
  return value;
}
inline bool ServerMsgCharMove::has_target_pos() const {
  return _internal_has_target_pos();
}
inline const ::base::GLPos& ServerMsgCharMove::_internal_target_pos() const {
  const ::base::GLPos* p = _impl_.target_pos_;
  return p != nullptr ? *p : reinterpret_cast<const ::base::GLPos&>(
      ::base::_GLPos_default_instance_);
}
inline const ::base::GLPos& ServerMsgCharMove::target_pos() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgCharMove.target_pos)
  return _internal_target_pos();
}
inline void ServerMsgCharMove::unsafe_arena_set_allocated_target_pos(
    ::base::GLPos* target_pos) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.target_pos_);
  }
  _impl_.target_pos_ = target_pos;
  if (target_pos) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:servermessage.ServerMsgCharMove.target_pos)
}
inline ::base::GLPos* ServerMsgCharMove::release_target_pos() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::base::GLPos* temp = _impl_.target_pos_;
  _impl_.target_pos_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::base::GLPos* ServerMsgCharMove::unsafe_arena_release_target_pos() {
  // @@protoc_insertion_point(field_release:servermessage.ServerMsgCharMove.target_pos)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::base::GLPos* temp = _impl_.target_pos_;
  _impl_.target_pos_ = nullptr;
  return temp;
}
inline ::base::GLPos* ServerMsgCharMove::_internal_mutable_target_pos() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.target_pos_ == nullptr) {
    auto* p = CreateMaybeMessage<::base::GLPos>(GetArenaForAllocation());
    _impl_.target_pos_ = p;
  }
  return _impl_.target_pos_;
}
inline ::base::GLPos* ServerMsgCharMove::mutable_target_pos() {
  ::base::GLPos* _msg = _internal_mutable_target_pos();
  // @@protoc_insertion_point(field_mutable:servermessage.ServerMsgCharMove.target_pos)
  return _msg;
}
inline void ServerMsgCharMove::set_allocated_target_pos(::base::GLPos* target_pos) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.target_pos_);
  }
  if (target_pos) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(target_pos));
    if (message_arena != submessage_arena) {
      target_pos = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, target_pos, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.target_pos_ = target_pos;
  // @@protoc_insertion_point(field_set_allocated:servermessage.ServerMsgCharMove.target_pos)
}

// optional .base.GLPos stop_pos = 7;
inline bool ServerMsgCharMove::_internal_has_stop_pos() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.stop_pos_ != nullptr);
  return value;
}
inline bool ServerMsgCharMove::has_stop_pos() const {
  return _internal_has_stop_pos();
}
inline const ::base::GLPos& ServerMsgCharMove::_internal_stop_pos() const {
  const ::base::GLPos* p = _impl_.stop_pos_;
  return p != nullptr ? *p : reinterpret_cast<const ::base::GLPos&>(
      ::base::_GLPos_default_instance_);
}
inline const ::base::GLPos& ServerMsgCharMove::stop_pos() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgCharMove.stop_pos)
  return _internal_stop_pos();
}
inline void ServerMsgCharMove::unsafe_arena_set_allocated_stop_pos(
    ::base::GLPos* stop_pos) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.stop_pos_);
  }
  _impl_.stop_pos_ = stop_pos;
  if (stop_pos) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:servermessage.ServerMsgCharMove.stop_pos)
}
inline ::base::GLPos* ServerMsgCharMove::release_stop_pos() {
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::base::GLPos* temp = _impl_.stop_pos_;
  _impl_.stop_pos_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::base::GLPos* ServerMsgCharMove::unsafe_arena_release_stop_pos() {
  // @@protoc_insertion_point(field_release:servermessage.ServerMsgCharMove.stop_pos)
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::base::GLPos* temp = _impl_.stop_pos_;
  _impl_.stop_pos_ = nullptr;
  return temp;
}
inline ::base::GLPos* ServerMsgCharMove::_internal_mutable_stop_pos() {
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.stop_pos_ == nullptr) {
    auto* p = CreateMaybeMessage<::base::GLPos>(GetArenaForAllocation());
    _impl_.stop_pos_ = p;
  }
  return _impl_.stop_pos_;
}
inline ::base::GLPos* ServerMsgCharMove::mutable_stop_pos() {
  ::base::GLPos* _msg = _internal_mutable_stop_pos();
  // @@protoc_insertion_point(field_mutable:servermessage.ServerMsgCharMove.stop_pos)
  return _msg;
}
inline void ServerMsgCharMove::set_allocated_stop_pos(::base::GLPos* stop_pos) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.stop_pos_);
  }
  if (stop_pos) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stop_pos));
    if (message_arena != submessage_arena) {
      stop_pos = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stop_pos, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.stop_pos_ = stop_pos;
  // @@protoc_insertion_point(field_set_allocated:servermessage.ServerMsgCharMove.stop_pos)
}

// -------------------------------------------------------------------

// ServerMsgCharSkillGather

// int32 object_id = 1;
inline void ServerMsgCharSkillGather::clear_object_id() {
  _impl_.object_id_ = 0;
}
inline int32_t ServerMsgCharSkillGather::_internal_object_id() const {
  return _impl_.object_id_;
}
inline int32_t ServerMsgCharSkillGather::object_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgCharSkillGather.object_id)
  return _internal_object_id();
}
inline void ServerMsgCharSkillGather::_internal_set_object_id(int32_t value) {
  
  _impl_.object_id_ = value;
}
inline void ServerMsgCharSkillGather::set_object_id(int32_t value) {
  _internal_set_object_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgCharSkillGather.object_id)
}

// int32 logic_count = 2;
inline void ServerMsgCharSkillGather::clear_logic_count() {
  _impl_.logic_count_ = 0;
}
inline int32_t ServerMsgCharSkillGather::_internal_logic_count() const {
  return _impl_.logic_count_;
}
inline int32_t ServerMsgCharSkillGather::logic_count() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgCharSkillGather.logic_count)
  return _internal_logic_count();
}
inline void ServerMsgCharSkillGather::_internal_set_logic_count(int32_t value) {
  
  _impl_.logic_count_ = value;
}
inline void ServerMsgCharSkillGather::set_logic_count(int32_t value) {
  _internal_set_logic_count(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgCharSkillGather.logic_count)
}

// int32 skill_data_id = 3;
inline void ServerMsgCharSkillGather::clear_skill_data_id() {
  _impl_.skill_data_id_ = 0;
}
inline int32_t ServerMsgCharSkillGather::_internal_skill_data_id() const {
  return _impl_.skill_data_id_;
}
inline int32_t ServerMsgCharSkillGather::skill_data_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgCharSkillGather.skill_data_id)
  return _internal_skill_data_id();
}
inline void ServerMsgCharSkillGather::_internal_set_skill_data_id(int32_t value) {
  
  _impl_.skill_data_id_ = value;
}
inline void ServerMsgCharSkillGather::set_skill_data_id(int32_t value) {
  _internal_set_skill_data_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgCharSkillGather.skill_data_id)
}

// .base.GLPos user_position = 4;
inline bool ServerMsgCharSkillGather::_internal_has_user_position() const {
  return this != internal_default_instance() && _impl_.user_position_ != nullptr;
}
inline bool ServerMsgCharSkillGather::has_user_position() const {
  return _internal_has_user_position();
}
inline const ::base::GLPos& ServerMsgCharSkillGather::_internal_user_position() const {
  const ::base::GLPos* p = _impl_.user_position_;
  return p != nullptr ? *p : reinterpret_cast<const ::base::GLPos&>(
      ::base::_GLPos_default_instance_);
}
inline const ::base::GLPos& ServerMsgCharSkillGather::user_position() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgCharSkillGather.user_position)
  return _internal_user_position();
}
inline void ServerMsgCharSkillGather::unsafe_arena_set_allocated_user_position(
    ::base::GLPos* user_position) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.user_position_);
  }
  _impl_.user_position_ = user_position;
  if (user_position) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:servermessage.ServerMsgCharSkillGather.user_position)
}
inline ::base::GLPos* ServerMsgCharSkillGather::release_user_position() {
  
  ::base::GLPos* temp = _impl_.user_position_;
  _impl_.user_position_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::base::GLPos* ServerMsgCharSkillGather::unsafe_arena_release_user_position() {
  // @@protoc_insertion_point(field_release:servermessage.ServerMsgCharSkillGather.user_position)
  
  ::base::GLPos* temp = _impl_.user_position_;
  _impl_.user_position_ = nullptr;
  return temp;
}
inline ::base::GLPos* ServerMsgCharSkillGather::_internal_mutable_user_position() {
  
  if (_impl_.user_position_ == nullptr) {
    auto* p = CreateMaybeMessage<::base::GLPos>(GetArenaForAllocation());
    _impl_.user_position_ = p;
  }
  return _impl_.user_position_;
}
inline ::base::GLPos* ServerMsgCharSkillGather::mutable_user_position() {
  ::base::GLPos* _msg = _internal_mutable_user_position();
  // @@protoc_insertion_point(field_mutable:servermessage.ServerMsgCharSkillGather.user_position)
  return _msg;
}
inline void ServerMsgCharSkillGather::set_allocated_user_position(::base::GLPos* user_position) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.user_position_);
  }
  if (user_position) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(user_position));
    if (message_arena != submessage_arena) {
      user_position = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, user_position, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.user_position_ = user_position;
  // @@protoc_insertion_point(field_set_allocated:servermessage.ServerMsgCharSkillGather.user_position)
}

// int32 target_id = 5;
inline void ServerMsgCharSkillGather::clear_target_id() {
  _impl_.target_id_ = 0;
}
inline int32_t ServerMsgCharSkillGather::_internal_target_id() const {
  return _impl_.target_id_;
}
inline int32_t ServerMsgCharSkillGather::target_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgCharSkillGather.target_id)
  return _internal_target_id();
}
inline void ServerMsgCharSkillGather::_internal_set_target_id(int32_t value) {
  
  _impl_.target_id_ = value;
}
inline void ServerMsgCharSkillGather::set_target_id(int32_t value) {
  _internal_set_target_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgCharSkillGather.target_id)
}

// .base.GLPos target_pos = 6;
inline bool ServerMsgCharSkillGather::_internal_has_target_pos() const {
  return this != internal_default_instance() && _impl_.target_pos_ != nullptr;
}
inline bool ServerMsgCharSkillGather::has_target_pos() const {
  return _internal_has_target_pos();
}
inline const ::base::GLPos& ServerMsgCharSkillGather::_internal_target_pos() const {
  const ::base::GLPos* p = _impl_.target_pos_;
  return p != nullptr ? *p : reinterpret_cast<const ::base::GLPos&>(
      ::base::_GLPos_default_instance_);
}
inline const ::base::GLPos& ServerMsgCharSkillGather::target_pos() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgCharSkillGather.target_pos)
  return _internal_target_pos();
}
inline void ServerMsgCharSkillGather::unsafe_arena_set_allocated_target_pos(
    ::base::GLPos* target_pos) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.target_pos_);
  }
  _impl_.target_pos_ = target_pos;
  if (target_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:servermessage.ServerMsgCharSkillGather.target_pos)
}
inline ::base::GLPos* ServerMsgCharSkillGather::release_target_pos() {
  
  ::base::GLPos* temp = _impl_.target_pos_;
  _impl_.target_pos_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::base::GLPos* ServerMsgCharSkillGather::unsafe_arena_release_target_pos() {
  // @@protoc_insertion_point(field_release:servermessage.ServerMsgCharSkillGather.target_pos)
  
  ::base::GLPos* temp = _impl_.target_pos_;
  _impl_.target_pos_ = nullptr;
  return temp;
}
inline ::base::GLPos* ServerMsgCharSkillGather::_internal_mutable_target_pos() {
  
  if (_impl_.target_pos_ == nullptr) {
    auto* p = CreateMaybeMessage<::base::GLPos>(GetArenaForAllocation());
    _impl_.target_pos_ = p;
  }
  return _impl_.target_pos_;
}
inline ::base::GLPos* ServerMsgCharSkillGather::mutable_target_pos() {
  ::base::GLPos* _msg = _internal_mutable_target_pos();
  // @@protoc_insertion_point(field_mutable:servermessage.ServerMsgCharSkillGather.target_pos)
  return _msg;
}
inline void ServerMsgCharSkillGather::set_allocated_target_pos(::base::GLPos* target_pos) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.target_pos_);
  }
  if (target_pos) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(target_pos));
    if (message_arena != submessage_arena) {
      target_pos = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, target_pos, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.target_pos_ = target_pos;
  // @@protoc_insertion_point(field_set_allocated:servermessage.ServerMsgCharSkillGather.target_pos)
}

// float dir = 7;
inline void ServerMsgCharSkillGather::clear_dir() {
  _impl_.dir_ = 0;
}
inline float ServerMsgCharSkillGather::_internal_dir() const {
  return _impl_.dir_;
}
inline float ServerMsgCharSkillGather::dir() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgCharSkillGather.dir)
  return _internal_dir();
}
inline void ServerMsgCharSkillGather::_internal_set_dir(float value) {
  
  _impl_.dir_ = value;
}
inline void ServerMsgCharSkillGather::set_dir(float value) {
  _internal_set_dir(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgCharSkillGather.dir)
}

// int32 total_time = 8;
inline void ServerMsgCharSkillGather::clear_total_time() {
  _impl_.total_time_ = 0;
}
inline int32_t ServerMsgCharSkillGather::_internal_total_time() const {
  return _impl_.total_time_;
}
inline int32_t ServerMsgCharSkillGather::total_time() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgCharSkillGather.total_time)
  return _internal_total_time();
}
inline void ServerMsgCharSkillGather::_internal_set_total_time(int32_t value) {
  
  _impl_.total_time_ = value;
}
inline void ServerMsgCharSkillGather::set_total_time(int32_t value) {
  _internal_set_total_time(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgCharSkillGather.total_time)
}

// -------------------------------------------------------------------

// ServerMsgCharStopAction

// int32 object_id = 1;
inline void ServerMsgCharStopAction::clear_object_id() {
  _impl_.object_id_ = 0;
}
inline int32_t ServerMsgCharStopAction::_internal_object_id() const {
  return _impl_.object_id_;
}
inline int32_t ServerMsgCharStopAction::object_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgCharStopAction.object_id)
  return _internal_object_id();
}
inline void ServerMsgCharStopAction::_internal_set_object_id(int32_t value) {
  
  _impl_.object_id_ = value;
}
inline void ServerMsgCharStopAction::set_object_id(int32_t value) {
  _internal_set_object_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgCharStopAction.object_id)
}

// int32 logic_count = 2;
inline void ServerMsgCharStopAction::clear_logic_count() {
  _impl_.logic_count_ = 0;
}
inline int32_t ServerMsgCharStopAction::_internal_logic_count() const {
  return _impl_.logic_count_;
}
inline int32_t ServerMsgCharStopAction::logic_count() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgCharStopAction.logic_count)
  return _internal_logic_count();
}
inline void ServerMsgCharStopAction::_internal_set_logic_count(int32_t value) {
  
  _impl_.logic_count_ = value;
}
inline void ServerMsgCharStopAction::set_logic_count(int32_t value) {
  _internal_set_logic_count(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgCharStopAction.logic_count)
}

// int32 stop_time = 3;
inline void ServerMsgCharStopAction::clear_stop_time() {
  _impl_.stop_time_ = 0;
}
inline int32_t ServerMsgCharStopAction::_internal_stop_time() const {
  return _impl_.stop_time_;
}
inline int32_t ServerMsgCharStopAction::stop_time() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgCharStopAction.stop_time)
  return _internal_stop_time();
}
inline void ServerMsgCharStopAction::_internal_set_stop_time(int32_t value) {
  
  _impl_.stop_time_ = value;
}
inline void ServerMsgCharStopAction::set_stop_time(int32_t value) {
  _internal_set_stop_time(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgCharStopAction.stop_time)
}

// -------------------------------------------------------------------

// ServerMsgChat

// int32 chat_type = 1;
inline void ServerMsgChat::clear_chat_type() {
  _impl_.chat_type_ = 0;
}
inline int32_t ServerMsgChat::_internal_chat_type() const {
  return _impl_.chat_type_;
}
inline int32_t ServerMsgChat::chat_type() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgChat.chat_type)
  return _internal_chat_type();
}
inline void ServerMsgChat::_internal_set_chat_type(int32_t value) {
  
  _impl_.chat_type_ = value;
}
inline void ServerMsgChat::set_chat_type(int32_t value) {
  _internal_set_chat_type(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgChat.chat_type)
}

// string chat_content = 2;
inline void ServerMsgChat::clear_chat_content() {
  _impl_.chat_content_.ClearToEmpty();
}
inline const std::string& ServerMsgChat::chat_content() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgChat.chat_content)
  return _internal_chat_content();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void ServerMsgChat::set_chat_content(ArgT0&& arg0, ArgT... args) {
 
 _impl_.chat_content_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgChat.chat_content)
}
inline std::string* ServerMsgChat::mutable_chat_content() {
  std::string* _s = _internal_mutable_chat_content();
  // @@protoc_insertion_point(field_mutable:servermessage.ServerMsgChat.chat_content)
  return _s;
}
inline const std::string& ServerMsgChat::_internal_chat_content() const {
  return _impl_.chat_content_.Get();
}
inline void ServerMsgChat::_internal_set_chat_content(const std::string& value) {
  
  _impl_.chat_content_.Set(value, GetArenaForAllocation());
}
inline std::string* ServerMsgChat::_internal_mutable_chat_content() {
  
  return _impl_.chat_content_.Mutable(GetArenaForAllocation());
}
inline std::string* ServerMsgChat::release_chat_content() {
  // @@protoc_insertion_point(field_release:servermessage.ServerMsgChat.chat_content)
  return _impl_.chat_content_.Release();
}
inline void ServerMsgChat::set_allocated_chat_content(std::string* chat_content) {
  if (chat_content != nullptr) {
    
  } else {
    
  }
  _impl_.chat_content_.SetAllocated(chat_content, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.chat_content_.IsDefault()) {
    _impl_.chat_content_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:servermessage.ServerMsgChat.chat_content)
}

// int32 show_position = 3;
inline void ServerMsgChat::clear_show_position() {
  _impl_.show_position_ = 0;
}
inline int32_t ServerMsgChat::_internal_show_position() const {
  return _impl_.show_position_;
}
inline int32_t ServerMsgChat::show_position() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgChat.show_position)
  return _internal_show_position();
}
inline void ServerMsgChat::_internal_set_show_position(int32_t value) {
  
  _impl_.show_position_ = value;
}
inline void ServerMsgChat::set_show_position(int32_t value) {
  _internal_set_show_position(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgChat.show_position)
}

// int32 cycle_count = 4;
inline void ServerMsgChat::clear_cycle_count() {
  _impl_.cycle_count_ = 0;
}
inline int32_t ServerMsgChat::_internal_cycle_count() const {
  return _impl_.cycle_count_;
}
inline int32_t ServerMsgChat::cycle_count() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgChat.cycle_count)
  return _internal_cycle_count();
}
inline void ServerMsgChat::_internal_set_cycle_count(int32_t value) {
  
  _impl_.cycle_count_ = value;
}
inline void ServerMsgChat::set_cycle_count(int32_t value) {
  _internal_set_cycle_count(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgChat.cycle_count)
}

// int32 animate_image = 5;
inline void ServerMsgChat::clear_animate_image() {
  _impl_.animate_image_ = 0;
}
inline int32_t ServerMsgChat::_internal_animate_image() const {
  return _impl_.animate_image_;
}
inline int32_t ServerMsgChat::animate_image() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgChat.animate_image)
  return _internal_animate_image();
}
inline void ServerMsgChat::_internal_set_animate_image(int32_t value) {
  
  _impl_.animate_image_ = value;
}
inline void ServerMsgChat::set_animate_image(int32_t value) {
  _internal_set_animate_image(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgChat.animate_image)
}

// -------------------------------------------------------------------

// ServerMsgCommand

// int32 ui_index = 1;
inline void ServerMsgCommand::clear_ui_index() {
  _impl_.ui_index_ = 0;
}
inline int32_t ServerMsgCommand::_internal_ui_index() const {
  return _impl_.ui_index_;
}
inline int32_t ServerMsgCommand::ui_index() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgCommand.ui_index)
  return _internal_ui_index();
}
inline void ServerMsgCommand::_internal_set_ui_index(int32_t value) {
  
  _impl_.ui_index_ = value;
}
inline void ServerMsgCommand::set_ui_index(int32_t value) {
  _internal_set_ui_index(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgCommand.ui_index)
}

// .base.SXParam sx_param = 2;
inline bool ServerMsgCommand::_internal_has_sx_param() const {
  return this != internal_default_instance() && _impl_.sx_param_ != nullptr;
}
inline bool ServerMsgCommand::has_sx_param() const {
  return _internal_has_sx_param();
}
inline const ::base::SXParam& ServerMsgCommand::_internal_sx_param() const {
  const ::base::SXParam* p = _impl_.sx_param_;
  return p != nullptr ? *p : reinterpret_cast<const ::base::SXParam&>(
      ::base::_SXParam_default_instance_);
}
inline const ::base::SXParam& ServerMsgCommand::sx_param() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgCommand.sx_param)
  return _internal_sx_param();
}
inline void ServerMsgCommand::unsafe_arena_set_allocated_sx_param(
    ::base::SXParam* sx_param) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.sx_param_);
  }
  _impl_.sx_param_ = sx_param;
  if (sx_param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:servermessage.ServerMsgCommand.sx_param)
}
inline ::base::SXParam* ServerMsgCommand::release_sx_param() {
  
  ::base::SXParam* temp = _impl_.sx_param_;
  _impl_.sx_param_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::base::SXParam* ServerMsgCommand::unsafe_arena_release_sx_param() {
  // @@protoc_insertion_point(field_release:servermessage.ServerMsgCommand.sx_param)
  
  ::base::SXParam* temp = _impl_.sx_param_;
  _impl_.sx_param_ = nullptr;
  return temp;
}
inline ::base::SXParam* ServerMsgCommand::_internal_mutable_sx_param() {
  
  if (_impl_.sx_param_ == nullptr) {
    auto* p = CreateMaybeMessage<::base::SXParam>(GetArenaForAllocation());
    _impl_.sx_param_ = p;
  }
  return _impl_.sx_param_;
}
inline ::base::SXParam* ServerMsgCommand::mutable_sx_param() {
  ::base::SXParam* _msg = _internal_mutable_sx_param();
  // @@protoc_insertion_point(field_mutable:servermessage.ServerMsgCommand.sx_param)
  return _msg;
}
inline void ServerMsgCommand::set_allocated_sx_param(::base::SXParam* sx_param) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.sx_param_);
  }
  if (sx_param) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(sx_param));
    if (message_arena != submessage_arena) {
      sx_param = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, sx_param, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.sx_param_ = sx_param;
  // @@protoc_insertion_point(field_set_allocated:servermessage.ServerMsgCommand.sx_param)
}

// -------------------------------------------------------------------

// ServerMsgCooldownUpdate

// int32 object_id = 1;
inline void ServerMsgCooldownUpdate::clear_object_id() {
  _impl_.object_id_ = 0;
}
inline int32_t ServerMsgCooldownUpdate::_internal_object_id() const {
  return _impl_.object_id_;
}
inline int32_t ServerMsgCooldownUpdate::object_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgCooldownUpdate.object_id)
  return _internal_object_id();
}
inline void ServerMsgCooldownUpdate::_internal_set_object_id(int32_t value) {
  
  _impl_.object_id_ = value;
}
inline void ServerMsgCooldownUpdate::set_object_id(int32_t value) {
  _internal_set_object_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgCooldownUpdate.object_id)
}

// int32 scene_id = 2;
inline void ServerMsgCooldownUpdate::clear_scene_id() {
  _impl_.scene_id_ = 0;
}
inline int32_t ServerMsgCooldownUpdate::_internal_scene_id() const {
  return _impl_.scene_id_;
}
inline int32_t ServerMsgCooldownUpdate::scene_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgCooldownUpdate.scene_id)
  return _internal_scene_id();
}
inline void ServerMsgCooldownUpdate::_internal_set_scene_id(int32_t value) {
  
  _impl_.scene_id_ = value;
}
inline void ServerMsgCooldownUpdate::set_scene_id(int32_t value) {
  _internal_set_scene_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgCooldownUpdate.scene_id)
}

// -------------------------------------------------------------------

// ServerMsgDelObject

// int32 object_id = 1;
inline void ServerMsgDelObject::clear_object_id() {
  _impl_.object_id_ = 0;
}
inline int32_t ServerMsgDelObject::_internal_object_id() const {
  return _impl_.object_id_;
}
inline int32_t ServerMsgDelObject::object_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDelObject.object_id)
  return _internal_object_id();
}
inline void ServerMsgDelObject::_internal_set_object_id(int32_t value) {
  
  _impl_.object_id_ = value;
}
inline void ServerMsgDelObject::set_object_id(int32_t value) {
  _internal_set_object_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDelObject.object_id)
}

// int32 scene_id = 2;
inline void ServerMsgDelObject::clear_scene_id() {
  _impl_.scene_id_ = 0;
}
inline int32_t ServerMsgDelObject::_internal_scene_id() const {
  return _impl_.scene_id_;
}
inline int32_t ServerMsgDelObject::scene_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDelObject.scene_id)
  return _internal_scene_id();
}
inline void ServerMsgDelObject::_internal_set_scene_id(int32_t value) {
  
  _impl_.scene_id_ = value;
}
inline void ServerMsgDelObject::set_scene_id(int32_t value) {
  _internal_set_scene_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDelObject.scene_id)
}

// -------------------------------------------------------------------

// ServerMsgDelQuest

// int32 player_id = 1;
inline void ServerMsgDelQuest::clear_player_id() {
  _impl_.player_id_ = 0;
}
inline int32_t ServerMsgDelQuest::_internal_player_id() const {
  return _impl_.player_id_;
}
inline int32_t ServerMsgDelQuest::player_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDelQuest.player_id)
  return _internal_player_id();
}
inline void ServerMsgDelQuest::_internal_set_player_id(int32_t value) {
  
  _impl_.player_id_ = value;
}
inline void ServerMsgDelQuest::set_player_id(int32_t value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDelQuest.player_id)
}

// int32 quest_id = 2;
inline void ServerMsgDelQuest::clear_quest_id() {
  _impl_.quest_id_ = 0;
}
inline int32_t ServerMsgDelQuest::_internal_quest_id() const {
  return _impl_.quest_id_;
}
inline int32_t ServerMsgDelQuest::quest_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDelQuest.quest_id)
  return _internal_quest_id();
}
inline void ServerMsgDelQuest::_internal_set_quest_id(int32_t value) {
  
  _impl_.quest_id_ = value;
}
inline void ServerMsgDelQuest::set_quest_id(int32_t value) {
  _internal_set_quest_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDelQuest.quest_id)
}

// -------------------------------------------------------------------

// ServerMsgDeltailOfHealsAndDamage

// int32 hp_modify = 1;
inline void ServerMsgDeltailOfHealsAndDamage::clear_hp_modify() {
  _impl_.hp_modify_ = 0;
}
inline int32_t ServerMsgDeltailOfHealsAndDamage::_internal_hp_modify() const {
  return _impl_.hp_modify_;
}
inline int32_t ServerMsgDeltailOfHealsAndDamage::hp_modify() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDeltailOfHealsAndDamage.hp_modify)
  return _internal_hp_modify();
}
inline void ServerMsgDeltailOfHealsAndDamage::_internal_set_hp_modify(int32_t value) {
  
  _impl_.hp_modify_ = value;
}
inline void ServerMsgDeltailOfHealsAndDamage::set_hp_modify(int32_t value) {
  _internal_set_hp_modify(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDeltailOfHealsAndDamage.hp_modify)
}

// int32 object_id = 2;
inline void ServerMsgDeltailOfHealsAndDamage::clear_object_id() {
  _impl_.object_id_ = 0;
}
inline int32_t ServerMsgDeltailOfHealsAndDamage::_internal_object_id() const {
  return _impl_.object_id_;
}
inline int32_t ServerMsgDeltailOfHealsAndDamage::object_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDeltailOfHealsAndDamage.object_id)
  return _internal_object_id();
}
inline void ServerMsgDeltailOfHealsAndDamage::_internal_set_object_id(int32_t value) {
  
  _impl_.object_id_ = value;
}
inline void ServerMsgDeltailOfHealsAndDamage::set_object_id(int32_t value) {
  _internal_set_object_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDeltailOfHealsAndDamage.object_id)
}

// int32 sender_id = 3;
inline void ServerMsgDeltailOfHealsAndDamage::clear_sender_id() {
  _impl_.sender_id_ = 0;
}
inline int32_t ServerMsgDeltailOfHealsAndDamage::_internal_sender_id() const {
  return _impl_.sender_id_;
}
inline int32_t ServerMsgDeltailOfHealsAndDamage::sender_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDeltailOfHealsAndDamage.sender_id)
  return _internal_sender_id();
}
inline void ServerMsgDeltailOfHealsAndDamage::_internal_set_sender_id(int32_t value) {
  
  _impl_.sender_id_ = value;
}
inline void ServerMsgDeltailOfHealsAndDamage::set_sender_id(int32_t value) {
  _internal_set_sender_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDeltailOfHealsAndDamage.sender_id)
}

// int32 sender_logic_count = 4;
inline void ServerMsgDeltailOfHealsAndDamage::clear_sender_logic_count() {
  _impl_.sender_logic_count_ = 0;
}
inline int32_t ServerMsgDeltailOfHealsAndDamage::_internal_sender_logic_count() const {
  return _impl_.sender_logic_count_;
}
inline int32_t ServerMsgDeltailOfHealsAndDamage::sender_logic_count() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDeltailOfHealsAndDamage.sender_logic_count)
  return _internal_sender_logic_count();
}
inline void ServerMsgDeltailOfHealsAndDamage::_internal_set_sender_logic_count(int32_t value) {
  
  _impl_.sender_logic_count_ = value;
}
inline void ServerMsgDeltailOfHealsAndDamage::set_sender_logic_count(int32_t value) {
  _internal_set_sender_logic_count(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDeltailOfHealsAndDamage.sender_logic_count)
}

// bool critical_hit = 5;
inline void ServerMsgDeltailOfHealsAndDamage::clear_critical_hit() {
  _impl_.critical_hit_ = false;
}
inline bool ServerMsgDeltailOfHealsAndDamage::_internal_critical_hit() const {
  return _impl_.critical_hit_;
}
inline bool ServerMsgDeltailOfHealsAndDamage::critical_hit() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDeltailOfHealsAndDamage.critical_hit)
  return _internal_critical_hit();
}
inline void ServerMsgDeltailOfHealsAndDamage::_internal_set_critical_hit(bool value) {
  
  _impl_.critical_hit_ = value;
}
inline void ServerMsgDeltailOfHealsAndDamage::set_critical_hit(bool value) {
  _internal_set_critical_hit(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDeltailOfHealsAndDamage.critical_hit)
}

// bool death_blow = 6;
inline void ServerMsgDeltailOfHealsAndDamage::clear_death_blow() {
  _impl_.death_blow_ = false;
}
inline bool ServerMsgDeltailOfHealsAndDamage::_internal_death_blow() const {
  return _impl_.death_blow_;
}
inline bool ServerMsgDeltailOfHealsAndDamage::death_blow() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDeltailOfHealsAndDamage.death_blow)
  return _internal_death_blow();
}
inline void ServerMsgDeltailOfHealsAndDamage::_internal_set_death_blow(bool value) {
  
  _impl_.death_blow_ = value;
}
inline void ServerMsgDeltailOfHealsAndDamage::set_death_blow(bool value) {
  _internal_set_death_blow(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDeltailOfHealsAndDamage.death_blow)
}

// -------------------------------------------------------------------

// ServerMsgDetailAbilityInfo

// int32 object_id = 1;
inline void ServerMsgDetailAbilityInfo::clear_object_id() {
  _impl_.object_id_ = 0;
}
inline int32_t ServerMsgDetailAbilityInfo::_internal_object_id() const {
  return _impl_.object_id_;
}
inline int32_t ServerMsgDetailAbilityInfo::object_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAbilityInfo.object_id)
  return _internal_object_id();
}
inline void ServerMsgDetailAbilityInfo::_internal_set_object_id(int32_t value) {
  
  _impl_.object_id_ = value;
}
inline void ServerMsgDetailAbilityInfo::set_object_id(int32_t value) {
  _internal_set_object_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAbilityInfo.object_id)
}

// int32 scene_id = 2;
inline void ServerMsgDetailAbilityInfo::clear_scene_id() {
  _impl_.scene_id_ = 0;
}
inline int32_t ServerMsgDetailAbilityInfo::_internal_scene_id() const {
  return _impl_.scene_id_;
}
inline int32_t ServerMsgDetailAbilityInfo::scene_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAbilityInfo.scene_id)
  return _internal_scene_id();
}
inline void ServerMsgDetailAbilityInfo::_internal_set_scene_id(int32_t value) {
  
  _impl_.scene_id_ = value;
}
inline void ServerMsgDetailAbilityInfo::set_scene_id(int32_t value) {
  _internal_set_scene_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAbilityInfo.scene_id)
}

// int32 ability_count = 3;
inline void ServerMsgDetailAbilityInfo::clear_ability_count() {
  _impl_.ability_count_ = 0;
}
inline int32_t ServerMsgDetailAbilityInfo::_internal_ability_count() const {
  return _impl_.ability_count_;
}
inline int32_t ServerMsgDetailAbilityInfo::ability_count() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAbilityInfo.ability_count)
  return _internal_ability_count();
}
inline void ServerMsgDetailAbilityInfo::_internal_set_ability_count(int32_t value) {
  
  _impl_.ability_count_ = value;
}
inline void ServerMsgDetailAbilityInfo::set_ability_count(int32_t value) {
  _internal_set_ability_count(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAbilityInfo.ability_count)
}

// repeated int32 ability_list = 4;
inline int ServerMsgDetailAbilityInfo::_internal_ability_list_size() const {
  return _impl_.ability_list_.size();
}
inline int ServerMsgDetailAbilityInfo::ability_list_size() const {
  return _internal_ability_list_size();
}
inline void ServerMsgDetailAbilityInfo::clear_ability_list() {
  _impl_.ability_list_.Clear();
}
inline int32_t ServerMsgDetailAbilityInfo::_internal_ability_list(int index) const {
  return _impl_.ability_list_.Get(index);
}
inline int32_t ServerMsgDetailAbilityInfo::ability_list(int index) const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAbilityInfo.ability_list)
  return _internal_ability_list(index);
}
inline void ServerMsgDetailAbilityInfo::set_ability_list(int index, int32_t value) {
  _impl_.ability_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAbilityInfo.ability_list)
}
inline void ServerMsgDetailAbilityInfo::_internal_add_ability_list(int32_t value) {
  _impl_.ability_list_.Add(value);
}
inline void ServerMsgDetailAbilityInfo::add_ability_list(int32_t value) {
  _internal_add_ability_list(value);
  // @@protoc_insertion_point(field_add:servermessage.ServerMsgDetailAbilityInfo.ability_list)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
ServerMsgDetailAbilityInfo::_internal_ability_list() const {
  return _impl_.ability_list_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
ServerMsgDetailAbilityInfo::ability_list() const {
  // @@protoc_insertion_point(field_list:servermessage.ServerMsgDetailAbilityInfo.ability_list)
  return _internal_ability_list();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
ServerMsgDetailAbilityInfo::_internal_mutable_ability_list() {
  return &_impl_.ability_list_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
ServerMsgDetailAbilityInfo::mutable_ability_list() {
  // @@protoc_insertion_point(field_mutable_list:servermessage.ServerMsgDetailAbilityInfo.ability_list)
  return _internal_mutable_ability_list();
}

// repeated .base.PlayerAbility abilitys = 5;
inline int ServerMsgDetailAbilityInfo::_internal_abilitys_size() const {
  return _impl_.abilitys_.size();
}
inline int ServerMsgDetailAbilityInfo::abilitys_size() const {
  return _internal_abilitys_size();
}
inline ::base::PlayerAbility* ServerMsgDetailAbilityInfo::mutable_abilitys(int index) {
  // @@protoc_insertion_point(field_mutable:servermessage.ServerMsgDetailAbilityInfo.abilitys)
  return _impl_.abilitys_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::base::PlayerAbility >*
ServerMsgDetailAbilityInfo::mutable_abilitys() {
  // @@protoc_insertion_point(field_mutable_list:servermessage.ServerMsgDetailAbilityInfo.abilitys)
  return &_impl_.abilitys_;
}
inline const ::base::PlayerAbility& ServerMsgDetailAbilityInfo::_internal_abilitys(int index) const {
  return _impl_.abilitys_.Get(index);
}
inline const ::base::PlayerAbility& ServerMsgDetailAbilityInfo::abilitys(int index) const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAbilityInfo.abilitys)
  return _internal_abilitys(index);
}
inline ::base::PlayerAbility* ServerMsgDetailAbilityInfo::_internal_add_abilitys() {
  return _impl_.abilitys_.Add();
}
inline ::base::PlayerAbility* ServerMsgDetailAbilityInfo::add_abilitys() {
  ::base::PlayerAbility* _add = _internal_add_abilitys();
  // @@protoc_insertion_point(field_add:servermessage.ServerMsgDetailAbilityInfo.abilitys)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::base::PlayerAbility >&
ServerMsgDetailAbilityInfo::abilitys() const {
  // @@protoc_insertion_point(field_list:servermessage.ServerMsgDetailAbilityInfo.abilitys)
  return _impl_.abilitys_;
}

// string prescr = 6;
inline void ServerMsgDetailAbilityInfo::clear_prescr() {
  _impl_.prescr_.ClearToEmpty();
}
inline const std::string& ServerMsgDetailAbilityInfo::prescr() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAbilityInfo.prescr)
  return _internal_prescr();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void ServerMsgDetailAbilityInfo::set_prescr(ArgT0&& arg0, ArgT... args) {
 
 _impl_.prescr_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAbilityInfo.prescr)
}
inline std::string* ServerMsgDetailAbilityInfo::mutable_prescr() {
  std::string* _s = _internal_mutable_prescr();
  // @@protoc_insertion_point(field_mutable:servermessage.ServerMsgDetailAbilityInfo.prescr)
  return _s;
}
inline const std::string& ServerMsgDetailAbilityInfo::_internal_prescr() const {
  return _impl_.prescr_.Get();
}
inline void ServerMsgDetailAbilityInfo::_internal_set_prescr(const std::string& value) {
  
  _impl_.prescr_.Set(value, GetArenaForAllocation());
}
inline std::string* ServerMsgDetailAbilityInfo::_internal_mutable_prescr() {
  
  return _impl_.prescr_.Mutable(GetArenaForAllocation());
}
inline std::string* ServerMsgDetailAbilityInfo::release_prescr() {
  // @@protoc_insertion_point(field_release:servermessage.ServerMsgDetailAbilityInfo.prescr)
  return _impl_.prescr_.Release();
}
inline void ServerMsgDetailAbilityInfo::set_allocated_prescr(std::string* prescr) {
  if (prescr != nullptr) {
    
  } else {
    
  }
  _impl_.prescr_.SetAllocated(prescr, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.prescr_.IsDefault()) {
    _impl_.prescr_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:servermessage.ServerMsgDetailAbilityInfo.prescr)
}

// repeated int32 next_need_level = 7;
inline int ServerMsgDetailAbilityInfo::_internal_next_need_level_size() const {
  return _impl_.next_need_level_.size();
}
inline int ServerMsgDetailAbilityInfo::next_need_level_size() const {
  return _internal_next_need_level_size();
}
inline void ServerMsgDetailAbilityInfo::clear_next_need_level() {
  _impl_.next_need_level_.Clear();
}
inline int32_t ServerMsgDetailAbilityInfo::_internal_next_need_level(int index) const {
  return _impl_.next_need_level_.Get(index);
}
inline int32_t ServerMsgDetailAbilityInfo::next_need_level(int index) const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAbilityInfo.next_need_level)
  return _internal_next_need_level(index);
}
inline void ServerMsgDetailAbilityInfo::set_next_need_level(int index, int32_t value) {
  _impl_.next_need_level_.Set(index, value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAbilityInfo.next_need_level)
}
inline void ServerMsgDetailAbilityInfo::_internal_add_next_need_level(int32_t value) {
  _impl_.next_need_level_.Add(value);
}
inline void ServerMsgDetailAbilityInfo::add_next_need_level(int32_t value) {
  _internal_add_next_need_level(value);
  // @@protoc_insertion_point(field_add:servermessage.ServerMsgDetailAbilityInfo.next_need_level)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
ServerMsgDetailAbilityInfo::_internal_next_need_level() const {
  return _impl_.next_need_level_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
ServerMsgDetailAbilityInfo::next_need_level() const {
  // @@protoc_insertion_point(field_list:servermessage.ServerMsgDetailAbilityInfo.next_need_level)
  return _internal_next_need_level();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
ServerMsgDetailAbilityInfo::_internal_mutable_next_need_level() {
  return &_impl_.next_need_level_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
ServerMsgDetailAbilityInfo::mutable_next_need_level() {
  // @@protoc_insertion_point(field_mutable_list:servermessage.ServerMsgDetailAbilityInfo.next_need_level)
  return _internal_mutable_next_need_level();
}

// repeated int32 next_need_money = 8;
inline int ServerMsgDetailAbilityInfo::_internal_next_need_money_size() const {
  return _impl_.next_need_money_.size();
}
inline int ServerMsgDetailAbilityInfo::next_need_money_size() const {
  return _internal_next_need_money_size();
}
inline void ServerMsgDetailAbilityInfo::clear_next_need_money() {
  _impl_.next_need_money_.Clear();
}
inline int32_t ServerMsgDetailAbilityInfo::_internal_next_need_money(int index) const {
  return _impl_.next_need_money_.Get(index);
}
inline int32_t ServerMsgDetailAbilityInfo::next_need_money(int index) const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAbilityInfo.next_need_money)
  return _internal_next_need_money(index);
}
inline void ServerMsgDetailAbilityInfo::set_next_need_money(int index, int32_t value) {
  _impl_.next_need_money_.Set(index, value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAbilityInfo.next_need_money)
}
inline void ServerMsgDetailAbilityInfo::_internal_add_next_need_money(int32_t value) {
  _impl_.next_need_money_.Add(value);
}
inline void ServerMsgDetailAbilityInfo::add_next_need_money(int32_t value) {
  _internal_add_next_need_money(value);
  // @@protoc_insertion_point(field_add:servermessage.ServerMsgDetailAbilityInfo.next_need_money)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
ServerMsgDetailAbilityInfo::_internal_next_need_money() const {
  return _impl_.next_need_money_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
ServerMsgDetailAbilityInfo::next_need_money() const {
  // @@protoc_insertion_point(field_list:servermessage.ServerMsgDetailAbilityInfo.next_need_money)
  return _internal_next_need_money();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
ServerMsgDetailAbilityInfo::_internal_mutable_next_need_money() {
  return &_impl_.next_need_money_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
ServerMsgDetailAbilityInfo::mutable_next_need_money() {
  // @@protoc_insertion_point(field_mutable_list:servermessage.ServerMsgDetailAbilityInfo.next_need_money)
  return _internal_mutable_next_need_money();
}

// repeated int32 next_need_exp = 9;
inline int ServerMsgDetailAbilityInfo::_internal_next_need_exp_size() const {
  return _impl_.next_need_exp_.size();
}
inline int ServerMsgDetailAbilityInfo::next_need_exp_size() const {
  return _internal_next_need_exp_size();
}
inline void ServerMsgDetailAbilityInfo::clear_next_need_exp() {
  _impl_.next_need_exp_.Clear();
}
inline int32_t ServerMsgDetailAbilityInfo::_internal_next_need_exp(int index) const {
  return _impl_.next_need_exp_.Get(index);
}
inline int32_t ServerMsgDetailAbilityInfo::next_need_exp(int index) const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAbilityInfo.next_need_exp)
  return _internal_next_need_exp(index);
}
inline void ServerMsgDetailAbilityInfo::set_next_need_exp(int index, int32_t value) {
  _impl_.next_need_exp_.Set(index, value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAbilityInfo.next_need_exp)
}
inline void ServerMsgDetailAbilityInfo::_internal_add_next_need_exp(int32_t value) {
  _impl_.next_need_exp_.Add(value);
}
inline void ServerMsgDetailAbilityInfo::add_next_need_exp(int32_t value) {
  _internal_add_next_need_exp(value);
  // @@protoc_insertion_point(field_add:servermessage.ServerMsgDetailAbilityInfo.next_need_exp)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
ServerMsgDetailAbilityInfo::_internal_next_need_exp() const {
  return _impl_.next_need_exp_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
ServerMsgDetailAbilityInfo::next_need_exp() const {
  // @@protoc_insertion_point(field_list:servermessage.ServerMsgDetailAbilityInfo.next_need_exp)
  return _internal_next_need_exp();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
ServerMsgDetailAbilityInfo::_internal_mutable_next_need_exp() {
  return &_impl_.next_need_exp_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
ServerMsgDetailAbilityInfo::mutable_next_need_exp() {
  // @@protoc_insertion_point(field_mutable_list:servermessage.ServerMsgDetailAbilityInfo.next_need_exp)
  return _internal_mutable_next_need_exp();
}

// -------------------------------------------------------------------

// ServerMsgDetailAttrib

// repeated .base.HorseSkill skills = 1;
inline int ServerMsgDetailAttrib::_internal_skills_size() const {
  return _impl_.skills_.size();
}
inline int ServerMsgDetailAttrib::skills_size() const {
  return _internal_skills_size();
}
inline ::base::HorseSkill* ServerMsgDetailAttrib::mutable_skills(int index) {
  // @@protoc_insertion_point(field_mutable:servermessage.ServerMsgDetailAttrib.skills)
  return _impl_.skills_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::base::HorseSkill >*
ServerMsgDetailAttrib::mutable_skills() {
  // @@protoc_insertion_point(field_mutable_list:servermessage.ServerMsgDetailAttrib.skills)
  return &_impl_.skills_;
}
inline const ::base::HorseSkill& ServerMsgDetailAttrib::_internal_skills(int index) const {
  return _impl_.skills_.Get(index);
}
inline const ::base::HorseSkill& ServerMsgDetailAttrib::skills(int index) const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttrib.skills)
  return _internal_skills(index);
}
inline ::base::HorseSkill* ServerMsgDetailAttrib::_internal_add_skills() {
  return _impl_.skills_.Add();
}
inline ::base::HorseSkill* ServerMsgDetailAttrib::add_skills() {
  ::base::HorseSkill* _add = _internal_add_skills();
  // @@protoc_insertion_point(field_add:servermessage.ServerMsgDetailAttrib.skills)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::base::HorseSkill >&
ServerMsgDetailAttrib::skills() const {
  // @@protoc_insertion_point(field_list:servermessage.ServerMsgDetailAttrib.skills)
  return _impl_.skills_;
}

// string extra_data = 2;
inline void ServerMsgDetailAttrib::clear_extra_data() {
  _impl_.extra_data_.ClearToEmpty();
}
inline const std::string& ServerMsgDetailAttrib::extra_data() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttrib.extra_data)
  return _internal_extra_data();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void ServerMsgDetailAttrib::set_extra_data(ArgT0&& arg0, ArgT... args) {
 
 _impl_.extra_data_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttrib.extra_data)
}
inline std::string* ServerMsgDetailAttrib::mutable_extra_data() {
  std::string* _s = _internal_mutable_extra_data();
  // @@protoc_insertion_point(field_mutable:servermessage.ServerMsgDetailAttrib.extra_data)
  return _s;
}
inline const std::string& ServerMsgDetailAttrib::_internal_extra_data() const {
  return _impl_.extra_data_.Get();
}
inline void ServerMsgDetailAttrib::_internal_set_extra_data(const std::string& value) {
  
  _impl_.extra_data_.Set(value, GetArenaForAllocation());
}
inline std::string* ServerMsgDetailAttrib::_internal_mutable_extra_data() {
  
  return _impl_.extra_data_.Mutable(GetArenaForAllocation());
}
inline std::string* ServerMsgDetailAttrib::release_extra_data() {
  // @@protoc_insertion_point(field_release:servermessage.ServerMsgDetailAttrib.extra_data)
  return _impl_.extra_data_.Release();
}
inline void ServerMsgDetailAttrib::set_allocated_extra_data(std::string* extra_data) {
  if (extra_data != nullptr) {
    
  } else {
    
  }
  _impl_.extra_data_.SetAllocated(extra_data, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.extra_data_.IsDefault()) {
    _impl_.extra_data_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:servermessage.ServerMsgDetailAttrib.extra_data)
}

// .base.Flag64 flags = 3;
inline bool ServerMsgDetailAttrib::_internal_has_flags() const {
  return this != internal_default_instance() && _impl_.flags_ != nullptr;
}
inline bool ServerMsgDetailAttrib::has_flags() const {
  return _internal_has_flags();
}
inline const ::base::Flag64& ServerMsgDetailAttrib::_internal_flags() const {
  const ::base::Flag64* p = _impl_.flags_;
  return p != nullptr ? *p : reinterpret_cast<const ::base::Flag64&>(
      ::base::_Flag64_default_instance_);
}
inline const ::base::Flag64& ServerMsgDetailAttrib::flags() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttrib.flags)
  return _internal_flags();
}
inline void ServerMsgDetailAttrib::unsafe_arena_set_allocated_flags(
    ::base::Flag64* flags) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.flags_);
  }
  _impl_.flags_ = flags;
  if (flags) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:servermessage.ServerMsgDetailAttrib.flags)
}
inline ::base::Flag64* ServerMsgDetailAttrib::release_flags() {
  
  ::base::Flag64* temp = _impl_.flags_;
  _impl_.flags_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::base::Flag64* ServerMsgDetailAttrib::unsafe_arena_release_flags() {
  // @@protoc_insertion_point(field_release:servermessage.ServerMsgDetailAttrib.flags)
  
  ::base::Flag64* temp = _impl_.flags_;
  _impl_.flags_ = nullptr;
  return temp;
}
inline ::base::Flag64* ServerMsgDetailAttrib::_internal_mutable_flags() {
  
  if (_impl_.flags_ == nullptr) {
    auto* p = CreateMaybeMessage<::base::Flag64>(GetArenaForAllocation());
    _impl_.flags_ = p;
  }
  return _impl_.flags_;
}
inline ::base::Flag64* ServerMsgDetailAttrib::mutable_flags() {
  ::base::Flag64* _msg = _internal_mutable_flags();
  // @@protoc_insertion_point(field_mutable:servermessage.ServerMsgDetailAttrib.flags)
  return _msg;
}
inline void ServerMsgDetailAttrib::set_allocated_flags(::base::Flag64* flags) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.flags_);
  }
  if (flags) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(flags));
    if (message_arena != submessage_arena) {
      flags = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, flags, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.flags_ = flags;
  // @@protoc_insertion_point(field_set_allocated:servermessage.ServerMsgDetailAttrib.flags)
}

// int32 map_id = 4;
inline void ServerMsgDetailAttrib::clear_map_id() {
  _impl_.map_id_ = 0;
}
inline int32_t ServerMsgDetailAttrib::_internal_map_id() const {
  return _impl_.map_id_;
}
inline int32_t ServerMsgDetailAttrib::map_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttrib.map_id)
  return _internal_map_id();
}
inline void ServerMsgDetailAttrib::_internal_set_map_id(int32_t value) {
  
  _impl_.map_id_ = value;
}
inline void ServerMsgDetailAttrib::set_map_id(int32_t value) {
  _internal_set_map_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttrib.map_id)
}

// .base.SHorseGuid horse_guid = 5;
inline bool ServerMsgDetailAttrib::_internal_has_horse_guid() const {
  return this != internal_default_instance() && _impl_.horse_guid_ != nullptr;
}
inline bool ServerMsgDetailAttrib::has_horse_guid() const {
  return _internal_has_horse_guid();
}
inline const ::base::SHorseGuid& ServerMsgDetailAttrib::_internal_horse_guid() const {
  const ::base::SHorseGuid* p = _impl_.horse_guid_;
  return p != nullptr ? *p : reinterpret_cast<const ::base::SHorseGuid&>(
      ::base::_SHorseGuid_default_instance_);
}
inline const ::base::SHorseGuid& ServerMsgDetailAttrib::horse_guid() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttrib.horse_guid)
  return _internal_horse_guid();
}
inline void ServerMsgDetailAttrib::unsafe_arena_set_allocated_horse_guid(
    ::base::SHorseGuid* horse_guid) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.horse_guid_);
  }
  _impl_.horse_guid_ = horse_guid;
  if (horse_guid) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:servermessage.ServerMsgDetailAttrib.horse_guid)
}
inline ::base::SHorseGuid* ServerMsgDetailAttrib::release_horse_guid() {
  
  ::base::SHorseGuid* temp = _impl_.horse_guid_;
  _impl_.horse_guid_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::base::SHorseGuid* ServerMsgDetailAttrib::unsafe_arena_release_horse_guid() {
  // @@protoc_insertion_point(field_release:servermessage.ServerMsgDetailAttrib.horse_guid)
  
  ::base::SHorseGuid* temp = _impl_.horse_guid_;
  _impl_.horse_guid_ = nullptr;
  return temp;
}
inline ::base::SHorseGuid* ServerMsgDetailAttrib::_internal_mutable_horse_guid() {
  
  if (_impl_.horse_guid_ == nullptr) {
    auto* p = CreateMaybeMessage<::base::SHorseGuid>(GetArenaForAllocation());
    _impl_.horse_guid_ = p;
  }
  return _impl_.horse_guid_;
}
inline ::base::SHorseGuid* ServerMsgDetailAttrib::mutable_horse_guid() {
  ::base::SHorseGuid* _msg = _internal_mutable_horse_guid();
  // @@protoc_insertion_point(field_mutable:servermessage.ServerMsgDetailAttrib.horse_guid)
  return _msg;
}
inline void ServerMsgDetailAttrib::set_allocated_horse_guid(::base::SHorseGuid* horse_guid) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.horse_guid_);
  }
  if (horse_guid) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(horse_guid));
    if (message_arena != submessage_arena) {
      horse_guid = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, horse_guid, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.horse_guid_ = horse_guid;
  // @@protoc_insertion_point(field_set_allocated:servermessage.ServerMsgDetailAttrib.horse_guid)
}

// int32 trade_index = 6;
inline void ServerMsgDetailAttrib::clear_trade_index() {
  _impl_.trade_index_ = 0;
}
inline int32_t ServerMsgDetailAttrib::_internal_trade_index() const {
  return _impl_.trade_index_;
}
inline int32_t ServerMsgDetailAttrib::trade_index() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttrib.trade_index)
  return _internal_trade_index();
}
inline void ServerMsgDetailAttrib::_internal_set_trade_index(int32_t value) {
  
  _impl_.trade_index_ = value;
}
inline void ServerMsgDetailAttrib::set_trade_index(int32_t value) {
  _internal_set_trade_index(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttrib.trade_index)
}

// int32 data_id = 7;
inline void ServerMsgDetailAttrib::clear_data_id() {
  _impl_.data_id_ = 0;
}
inline int32_t ServerMsgDetailAttrib::_internal_data_id() const {
  return _impl_.data_id_;
}
inline int32_t ServerMsgDetailAttrib::data_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttrib.data_id)
  return _internal_data_id();
}
inline void ServerMsgDetailAttrib::_internal_set_data_id(int32_t value) {
  
  _impl_.data_id_ = value;
}
inline void ServerMsgDetailAttrib::set_data_id(int32_t value) {
  _internal_set_data_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttrib.data_id)
}

// string name = 8;
inline void ServerMsgDetailAttrib::clear_name() {
  _impl_.name_.ClearToEmpty();
}
inline const std::string& ServerMsgDetailAttrib::name() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttrib.name)
  return _internal_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void ServerMsgDetailAttrib::set_name(ArgT0&& arg0, ArgT... args) {
 
 _impl_.name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttrib.name)
}
inline std::string* ServerMsgDetailAttrib::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:servermessage.ServerMsgDetailAttrib.name)
  return _s;
}
inline const std::string& ServerMsgDetailAttrib::_internal_name() const {
  return _impl_.name_.Get();
}
inline void ServerMsgDetailAttrib::_internal_set_name(const std::string& value) {
  
  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* ServerMsgDetailAttrib::_internal_mutable_name() {
  
  return _impl_.name_.Mutable(GetArenaForAllocation());
}
inline std::string* ServerMsgDetailAttrib::release_name() {
  // @@protoc_insertion_point(field_release:servermessage.ServerMsgDetailAttrib.name)
  return _impl_.name_.Release();
}
inline void ServerMsgDetailAttrib::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  _impl_.name_.SetAllocated(name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:servermessage.ServerMsgDetailAttrib.name)
}

// string nickname = 9;
inline void ServerMsgDetailAttrib::clear_nickname() {
  _impl_.nickname_.ClearToEmpty();
}
inline const std::string& ServerMsgDetailAttrib::nickname() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttrib.nickname)
  return _internal_nickname();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void ServerMsgDetailAttrib::set_nickname(ArgT0&& arg0, ArgT... args) {
 
 _impl_.nickname_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttrib.nickname)
}
inline std::string* ServerMsgDetailAttrib::mutable_nickname() {
  std::string* _s = _internal_mutable_nickname();
  // @@protoc_insertion_point(field_mutable:servermessage.ServerMsgDetailAttrib.nickname)
  return _s;
}
inline const std::string& ServerMsgDetailAttrib::_internal_nickname() const {
  return _impl_.nickname_.Get();
}
inline void ServerMsgDetailAttrib::_internal_set_nickname(const std::string& value) {
  
  _impl_.nickname_.Set(value, GetArenaForAllocation());
}
inline std::string* ServerMsgDetailAttrib::_internal_mutable_nickname() {
  
  return _impl_.nickname_.Mutable(GetArenaForAllocation());
}
inline std::string* ServerMsgDetailAttrib::release_nickname() {
  // @@protoc_insertion_point(field_release:servermessage.ServerMsgDetailAttrib.nickname)
  return _impl_.nickname_.Release();
}
inline void ServerMsgDetailAttrib::set_allocated_nickname(std::string* nickname) {
  if (nickname != nullptr) {
    
  } else {
    
  }
  _impl_.nickname_.SetAllocated(nickname, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.nickname_.IsDefault()) {
    _impl_.nickname_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:servermessage.ServerMsgDetailAttrib.nickname)
}

// int32 ai_type = 10;
inline void ServerMsgDetailAttrib::clear_ai_type() {
  _impl_.ai_type_ = 0;
}
inline int32_t ServerMsgDetailAttrib::_internal_ai_type() const {
  return _impl_.ai_type_;
}
inline int32_t ServerMsgDetailAttrib::ai_type() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttrib.ai_type)
  return _internal_ai_type();
}
inline void ServerMsgDetailAttrib::_internal_set_ai_type(int32_t value) {
  
  _impl_.ai_type_ = value;
}
inline void ServerMsgDetailAttrib::set_ai_type(int32_t value) {
  _internal_set_ai_type(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttrib.ai_type)
}

// int32 level = 11;
inline void ServerMsgDetailAttrib::clear_level() {
  _impl_.level_ = 0;
}
inline int32_t ServerMsgDetailAttrib::_internal_level() const {
  return _impl_.level_;
}
inline int32_t ServerMsgDetailAttrib::level() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttrib.level)
  return _internal_level();
}
inline void ServerMsgDetailAttrib::_internal_set_level(int32_t value) {
  
  _impl_.level_ = value;
}
inline void ServerMsgDetailAttrib::set_level(int32_t value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttrib.level)
}

// int32 exp = 12;
inline void ServerMsgDetailAttrib::clear_exp() {
  _impl_.exp_ = 0;
}
inline int32_t ServerMsgDetailAttrib::_internal_exp() const {
  return _impl_.exp_;
}
inline int32_t ServerMsgDetailAttrib::exp() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttrib.exp)
  return _internal_exp();
}
inline void ServerMsgDetailAttrib::_internal_set_exp(int32_t value) {
  
  _impl_.exp_ = value;
}
inline void ServerMsgDetailAttrib::set_exp(int32_t value) {
  _internal_set_exp(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttrib.exp)
}

// int32 hp = 13;
inline void ServerMsgDetailAttrib::clear_hp() {
  _impl_.hp_ = 0;
}
inline int32_t ServerMsgDetailAttrib::_internal_hp() const {
  return _impl_.hp_;
}
inline int32_t ServerMsgDetailAttrib::hp() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttrib.hp)
  return _internal_hp();
}
inline void ServerMsgDetailAttrib::_internal_set_hp(int32_t value) {
  
  _impl_.hp_ = value;
}
inline void ServerMsgDetailAttrib::set_hp(int32_t value) {
  _internal_set_hp(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttrib.hp)
}

// int32 hp_max = 14;
inline void ServerMsgDetailAttrib::clear_hp_max() {
  _impl_.hp_max_ = 0;
}
inline int32_t ServerMsgDetailAttrib::_internal_hp_max() const {
  return _impl_.hp_max_;
}
inline int32_t ServerMsgDetailAttrib::hp_max() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttrib.hp_max)
  return _internal_hp_max();
}
inline void ServerMsgDetailAttrib::_internal_set_hp_max(int32_t value) {
  
  _impl_.hp_max_ = value;
}
inline void ServerMsgDetailAttrib::set_hp_max(int32_t value) {
  _internal_set_hp_max(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttrib.hp_max)
}

// int32 horse_state = 15;
inline void ServerMsgDetailAttrib::clear_horse_state() {
  _impl_.horse_state_ = 0;
}
inline int32_t ServerMsgDetailAttrib::_internal_horse_state() const {
  return _impl_.horse_state_;
}
inline int32_t ServerMsgDetailAttrib::horse_state() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttrib.horse_state)
  return _internal_horse_state();
}
inline void ServerMsgDetailAttrib::_internal_set_horse_state(int32_t value) {
  
  _impl_.horse_state_ = value;
}
inline void ServerMsgDetailAttrib::set_horse_state(int32_t value) {
  _internal_set_horse_state(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttrib.horse_state)
}

// int32 generation = 16;
inline void ServerMsgDetailAttrib::clear_generation() {
  _impl_.generation_ = 0;
}
inline int32_t ServerMsgDetailAttrib::_internal_generation() const {
  return _impl_.generation_;
}
inline int32_t ServerMsgDetailAttrib::generation() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttrib.generation)
  return _internal_generation();
}
inline void ServerMsgDetailAttrib::_internal_set_generation(int32_t value) {
  
  _impl_.generation_ = value;
}
inline void ServerMsgDetailAttrib::set_generation(int32_t value) {
  _internal_set_generation(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttrib.generation)
}

// int32 happiness = 17;
inline void ServerMsgDetailAttrib::clear_happiness() {
  _impl_.happiness_ = 0;
}
inline int32_t ServerMsgDetailAttrib::_internal_happiness() const {
  return _impl_.happiness_;
}
inline int32_t ServerMsgDetailAttrib::happiness() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttrib.happiness)
  return _internal_happiness();
}
inline void ServerMsgDetailAttrib::_internal_set_happiness(int32_t value) {
  
  _impl_.happiness_ = value;
}
inline void ServerMsgDetailAttrib::set_happiness(int32_t value) {
  _internal_set_happiness(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttrib.happiness)
}

// int32 attr_near = 18;
inline void ServerMsgDetailAttrib::clear_attr_near() {
  _impl_.attr_near_ = 0;
}
inline int32_t ServerMsgDetailAttrib::_internal_attr_near() const {
  return _impl_.attr_near_;
}
inline int32_t ServerMsgDetailAttrib::attr_near() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttrib.attr_near)
  return _internal_attr_near();
}
inline void ServerMsgDetailAttrib::_internal_set_attr_near(int32_t value) {
  
  _impl_.attr_near_ = value;
}
inline void ServerMsgDetailAttrib::set_attr_near(int32_t value) {
  _internal_set_attr_near(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttrib.attr_near)
}

// int32 attr_far = 19;
inline void ServerMsgDetailAttrib::clear_attr_far() {
  _impl_.attr_far_ = 0;
}
inline int32_t ServerMsgDetailAttrib::_internal_attr_far() const {
  return _impl_.attr_far_;
}
inline int32_t ServerMsgDetailAttrib::attr_far() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttrib.attr_far)
  return _internal_attr_far();
}
inline void ServerMsgDetailAttrib::_internal_set_attr_far(int32_t value) {
  
  _impl_.attr_far_ = value;
}
inline void ServerMsgDetailAttrib::set_attr_far(int32_t value) {
  _internal_set_attr_far(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttrib.attr_far)
}

// int32 attr_magic = 20;
inline void ServerMsgDetailAttrib::clear_attr_magic() {
  _impl_.attr_magic_ = 0;
}
inline int32_t ServerMsgDetailAttrib::_internal_attr_magic() const {
  return _impl_.attr_magic_;
}
inline int32_t ServerMsgDetailAttrib::attr_magic() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttrib.attr_magic)
  return _internal_attr_magic();
}
inline void ServerMsgDetailAttrib::_internal_set_attr_magic(int32_t value) {
  
  _impl_.attr_magic_ = value;
}
inline void ServerMsgDetailAttrib::set_attr_magic(int32_t value) {
  _internal_set_attr_magic(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttrib.attr_magic)
}

// int32 def_near = 21;
inline void ServerMsgDetailAttrib::clear_def_near() {
  _impl_.def_near_ = 0;
}
inline int32_t ServerMsgDetailAttrib::_internal_def_near() const {
  return _impl_.def_near_;
}
inline int32_t ServerMsgDetailAttrib::def_near() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttrib.def_near)
  return _internal_def_near();
}
inline void ServerMsgDetailAttrib::_internal_set_def_near(int32_t value) {
  
  _impl_.def_near_ = value;
}
inline void ServerMsgDetailAttrib::set_def_near(int32_t value) {
  _internal_set_def_near(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttrib.def_near)
}

// int32 def_far = 22;
inline void ServerMsgDetailAttrib::clear_def_far() {
  _impl_.def_far_ = 0;
}
inline int32_t ServerMsgDetailAttrib::_internal_def_far() const {
  return _impl_.def_far_;
}
inline int32_t ServerMsgDetailAttrib::def_far() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttrib.def_far)
  return _internal_def_far();
}
inline void ServerMsgDetailAttrib::_internal_set_def_far(int32_t value) {
  
  _impl_.def_far_ = value;
}
inline void ServerMsgDetailAttrib::set_def_far(int32_t value) {
  _internal_set_def_far(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttrib.def_far)
}

// int32 def_magic = 23;
inline void ServerMsgDetailAttrib::clear_def_magic() {
  _impl_.def_magic_ = 0;
}
inline int32_t ServerMsgDetailAttrib::_internal_def_magic() const {
  return _impl_.def_magic_;
}
inline int32_t ServerMsgDetailAttrib::def_magic() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttrib.def_magic)
  return _internal_def_magic();
}
inline void ServerMsgDetailAttrib::_internal_set_def_magic(int32_t value) {
  
  _impl_.def_magic_ = value;
}
inline void ServerMsgDetailAttrib::set_def_magic(int32_t value) {
  _internal_set_def_magic(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttrib.def_magic)
}

// int32 hit = 24;
inline void ServerMsgDetailAttrib::clear_hit() {
  _impl_.hit_ = 0;
}
inline int32_t ServerMsgDetailAttrib::_internal_hit() const {
  return _impl_.hit_;
}
inline int32_t ServerMsgDetailAttrib::hit() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttrib.hit)
  return _internal_hit();
}
inline void ServerMsgDetailAttrib::_internal_set_hit(int32_t value) {
  
  _impl_.hit_ = value;
}
inline void ServerMsgDetailAttrib::set_hit(int32_t value) {
  _internal_set_hit(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttrib.hit)
}

// int32 miss = 25;
inline void ServerMsgDetailAttrib::clear_miss() {
  _impl_.miss_ = 0;
}
inline int32_t ServerMsgDetailAttrib::_internal_miss() const {
  return _impl_.miss_;
}
inline int32_t ServerMsgDetailAttrib::miss() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttrib.miss)
  return _internal_miss();
}
inline void ServerMsgDetailAttrib::_internal_set_miss(int32_t value) {
  
  _impl_.miss_ = value;
}
inline void ServerMsgDetailAttrib::set_miss(int32_t value) {
  _internal_set_miss(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttrib.miss)
}

// int32 critical = 26;
inline void ServerMsgDetailAttrib::clear_critical() {
  _impl_.critical_ = 0;
}
inline int32_t ServerMsgDetailAttrib::_internal_critical() const {
  return _impl_.critical_;
}
inline int32_t ServerMsgDetailAttrib::critical() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttrib.critical)
  return _internal_critical();
}
inline void ServerMsgDetailAttrib::_internal_set_critical(int32_t value) {
  
  _impl_.critical_ = value;
}
inline void ServerMsgDetailAttrib::set_critical(int32_t value) {
  _internal_set_critical(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttrib.critical)
}

// int32 model_id = 27;
inline void ServerMsgDetailAttrib::clear_model_id() {
  _impl_.model_id_ = 0;
}
inline int32_t ServerMsgDetailAttrib::_internal_model_id() const {
  return _impl_.model_id_;
}
inline int32_t ServerMsgDetailAttrib::model_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttrib.model_id)
  return _internal_model_id();
}
inline void ServerMsgDetailAttrib::_internal_set_model_id(int32_t value) {
  
  _impl_.model_id_ = value;
}
inline void ServerMsgDetailAttrib::set_model_id(int32_t value) {
  _internal_set_model_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttrib.model_id)
}

// int32 mount_id = 28;
inline void ServerMsgDetailAttrib::clear_mount_id() {
  _impl_.mount_id_ = 0;
}
inline int32_t ServerMsgDetailAttrib::_internal_mount_id() const {
  return _impl_.mount_id_;
}
inline int32_t ServerMsgDetailAttrib::mount_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttrib.mount_id)
  return _internal_mount_id();
}
inline void ServerMsgDetailAttrib::_internal_set_mount_id(int32_t value) {
  
  _impl_.mount_id_ = value;
}
inline void ServerMsgDetailAttrib::set_mount_id(int32_t value) {
  _internal_set_mount_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttrib.mount_id)
}

// int32 str_perception = 29;
inline void ServerMsgDetailAttrib::clear_str_perception() {
  _impl_.str_perception_ = 0;
}
inline int32_t ServerMsgDetailAttrib::_internal_str_perception() const {
  return _impl_.str_perception_;
}
inline int32_t ServerMsgDetailAttrib::str_perception() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttrib.str_perception)
  return _internal_str_perception();
}
inline void ServerMsgDetailAttrib::_internal_set_str_perception(int32_t value) {
  
  _impl_.str_perception_ = value;
}
inline void ServerMsgDetailAttrib::set_str_perception(int32_t value) {
  _internal_set_str_perception(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttrib.str_perception)
}

// int32 con_perception = 30;
inline void ServerMsgDetailAttrib::clear_con_perception() {
  _impl_.con_perception_ = 0;
}
inline int32_t ServerMsgDetailAttrib::_internal_con_perception() const {
  return _impl_.con_perception_;
}
inline int32_t ServerMsgDetailAttrib::con_perception() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttrib.con_perception)
  return _internal_con_perception();
}
inline void ServerMsgDetailAttrib::_internal_set_con_perception(int32_t value) {
  
  _impl_.con_perception_ = value;
}
inline void ServerMsgDetailAttrib::set_con_perception(int32_t value) {
  _internal_set_con_perception(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttrib.con_perception)
}

// int32 dex_perception = 31;
inline void ServerMsgDetailAttrib::clear_dex_perception() {
  _impl_.dex_perception_ = 0;
}
inline int32_t ServerMsgDetailAttrib::_internal_dex_perception() const {
  return _impl_.dex_perception_;
}
inline int32_t ServerMsgDetailAttrib::dex_perception() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttrib.dex_perception)
  return _internal_dex_perception();
}
inline void ServerMsgDetailAttrib::_internal_set_dex_perception(int32_t value) {
  
  _impl_.dex_perception_ = value;
}
inline void ServerMsgDetailAttrib::set_dex_perception(int32_t value) {
  _internal_set_dex_perception(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttrib.dex_perception)
}

// int32 int_perception = 32;
inline void ServerMsgDetailAttrib::clear_int_perception() {
  _impl_.int_perception_ = 0;
}
inline int32_t ServerMsgDetailAttrib::_internal_int_perception() const {
  return _impl_.int_perception_;
}
inline int32_t ServerMsgDetailAttrib::int_perception() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttrib.int_perception)
  return _internal_int_perception();
}
inline void ServerMsgDetailAttrib::_internal_set_int_perception(int32_t value) {
  
  _impl_.int_perception_ = value;
}
inline void ServerMsgDetailAttrib::set_int_perception(int32_t value) {
  _internal_set_int_perception(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttrib.int_perception)
}

// int32 str_perception_limit = 33;
inline void ServerMsgDetailAttrib::clear_str_perception_limit() {
  _impl_.str_perception_limit_ = 0;
}
inline int32_t ServerMsgDetailAttrib::_internal_str_perception_limit() const {
  return _impl_.str_perception_limit_;
}
inline int32_t ServerMsgDetailAttrib::str_perception_limit() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttrib.str_perception_limit)
  return _internal_str_perception_limit();
}
inline void ServerMsgDetailAttrib::_internal_set_str_perception_limit(int32_t value) {
  
  _impl_.str_perception_limit_ = value;
}
inline void ServerMsgDetailAttrib::set_str_perception_limit(int32_t value) {
  _internal_set_str_perception_limit(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttrib.str_perception_limit)
}

// int32 con_perception_limit = 34;
inline void ServerMsgDetailAttrib::clear_con_perception_limit() {
  _impl_.con_perception_limit_ = 0;
}
inline int32_t ServerMsgDetailAttrib::_internal_con_perception_limit() const {
  return _impl_.con_perception_limit_;
}
inline int32_t ServerMsgDetailAttrib::con_perception_limit() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttrib.con_perception_limit)
  return _internal_con_perception_limit();
}
inline void ServerMsgDetailAttrib::_internal_set_con_perception_limit(int32_t value) {
  
  _impl_.con_perception_limit_ = value;
}
inline void ServerMsgDetailAttrib::set_con_perception_limit(int32_t value) {
  _internal_set_con_perception_limit(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttrib.con_perception_limit)
}

// int32 dex_perception_limit = 35;
inline void ServerMsgDetailAttrib::clear_dex_perception_limit() {
  _impl_.dex_perception_limit_ = 0;
}
inline int32_t ServerMsgDetailAttrib::_internal_dex_perception_limit() const {
  return _impl_.dex_perception_limit_;
}
inline int32_t ServerMsgDetailAttrib::dex_perception_limit() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttrib.dex_perception_limit)
  return _internal_dex_perception_limit();
}
inline void ServerMsgDetailAttrib::_internal_set_dex_perception_limit(int32_t value) {
  
  _impl_.dex_perception_limit_ = value;
}
inline void ServerMsgDetailAttrib::set_dex_perception_limit(int32_t value) {
  _internal_set_dex_perception_limit(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttrib.dex_perception_limit)
}

// int32 int_perception_limit = 36;
inline void ServerMsgDetailAttrib::clear_int_perception_limit() {
  _impl_.int_perception_limit_ = 0;
}
inline int32_t ServerMsgDetailAttrib::_internal_int_perception_limit() const {
  return _impl_.int_perception_limit_;
}
inline int32_t ServerMsgDetailAttrib::int_perception_limit() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttrib.int_perception_limit)
  return _internal_int_perception_limit();
}
inline void ServerMsgDetailAttrib::_internal_set_int_perception_limit(int32_t value) {
  
  _impl_.int_perception_limit_ = value;
}
inline void ServerMsgDetailAttrib::set_int_perception_limit(int32_t value) {
  _internal_set_int_perception_limit(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttrib.int_perception_limit)
}

// int32 strength = 37;
inline void ServerMsgDetailAttrib::clear_strength() {
  _impl_.strength_ = 0;
}
inline int32_t ServerMsgDetailAttrib::_internal_strength() const {
  return _impl_.strength_;
}
inline int32_t ServerMsgDetailAttrib::strength() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttrib.strength)
  return _internal_strength();
}
inline void ServerMsgDetailAttrib::_internal_set_strength(int32_t value) {
  
  _impl_.strength_ = value;
}
inline void ServerMsgDetailAttrib::set_strength(int32_t value) {
  _internal_set_strength(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttrib.strength)
}

// int32 con = 38;
inline void ServerMsgDetailAttrib::clear_con() {
  _impl_.con_ = 0;
}
inline int32_t ServerMsgDetailAttrib::_internal_con() const {
  return _impl_.con_;
}
inline int32_t ServerMsgDetailAttrib::con() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttrib.con)
  return _internal_con();
}
inline void ServerMsgDetailAttrib::_internal_set_con(int32_t value) {
  
  _impl_.con_ = value;
}
inline void ServerMsgDetailAttrib::set_con(int32_t value) {
  _internal_set_con(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttrib.con)
}

// int32 dex = 39;
inline void ServerMsgDetailAttrib::clear_dex() {
  _impl_.dex_ = 0;
}
inline int32_t ServerMsgDetailAttrib::_internal_dex() const {
  return _impl_.dex_;
}
inline int32_t ServerMsgDetailAttrib::dex() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttrib.dex)
  return _internal_dex();
}
inline void ServerMsgDetailAttrib::_internal_set_dex(int32_t value) {
  
  _impl_.dex_ = value;
}
inline void ServerMsgDetailAttrib::set_dex(int32_t value) {
  _internal_set_dex(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttrib.dex)
}

// int32 intelligence = 40;
inline void ServerMsgDetailAttrib::clear_intelligence() {
  _impl_.intelligence_ = 0;
}
inline int32_t ServerMsgDetailAttrib::_internal_intelligence() const {
  return _impl_.intelligence_;
}
inline int32_t ServerMsgDetailAttrib::intelligence() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttrib.intelligence)
  return _internal_intelligence();
}
inline void ServerMsgDetailAttrib::_internal_set_intelligence(int32_t value) {
  
  _impl_.intelligence_ = value;
}
inline void ServerMsgDetailAttrib::set_intelligence(int32_t value) {
  _internal_set_intelligence(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttrib.intelligence)
}

// int32 grow_rate = 41;
inline void ServerMsgDetailAttrib::clear_grow_rate() {
  _impl_.grow_rate_ = 0;
}
inline int32_t ServerMsgDetailAttrib::_internal_grow_rate() const {
  return _impl_.grow_rate_;
}
inline int32_t ServerMsgDetailAttrib::grow_rate() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttrib.grow_rate)
  return _internal_grow_rate();
}
inline void ServerMsgDetailAttrib::_internal_set_grow_rate(int32_t value) {
  
  _impl_.grow_rate_ = value;
}
inline void ServerMsgDetailAttrib::set_grow_rate(int32_t value) {
  _internal_set_grow_rate(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttrib.grow_rate)
}

// int32 remain_point = 42;
inline void ServerMsgDetailAttrib::clear_remain_point() {
  _impl_.remain_point_ = 0;
}
inline int32_t ServerMsgDetailAttrib::_internal_remain_point() const {
  return _impl_.remain_point_;
}
inline int32_t ServerMsgDetailAttrib::remain_point() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttrib.remain_point)
  return _internal_remain_point();
}
inline void ServerMsgDetailAttrib::_internal_set_remain_point(int32_t value) {
  
  _impl_.remain_point_ = value;
}
inline void ServerMsgDetailAttrib::set_remain_point(int32_t value) {
  _internal_set_remain_point(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttrib.remain_point)
}

// int32 strength_point = 43;
inline void ServerMsgDetailAttrib::clear_strength_point() {
  _impl_.strength_point_ = 0;
}
inline int32_t ServerMsgDetailAttrib::_internal_strength_point() const {
  return _impl_.strength_point_;
}
inline int32_t ServerMsgDetailAttrib::strength_point() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttrib.strength_point)
  return _internal_strength_point();
}
inline void ServerMsgDetailAttrib::_internal_set_strength_point(int32_t value) {
  
  _impl_.strength_point_ = value;
}
inline void ServerMsgDetailAttrib::set_strength_point(int32_t value) {
  _internal_set_strength_point(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttrib.strength_point)
}

// int32 smartness_point = 44;
inline void ServerMsgDetailAttrib::clear_smartness_point() {
  _impl_.smartness_point_ = 0;
}
inline int32_t ServerMsgDetailAttrib::_internal_smartness_point() const {
  return _impl_.smartness_point_;
}
inline int32_t ServerMsgDetailAttrib::smartness_point() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttrib.smartness_point)
  return _internal_smartness_point();
}
inline void ServerMsgDetailAttrib::_internal_set_smartness_point(int32_t value) {
  
  _impl_.smartness_point_ = value;
}
inline void ServerMsgDetailAttrib::set_smartness_point(int32_t value) {
  _internal_set_smartness_point(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttrib.smartness_point)
}

// int32 mind_point = 45;
inline void ServerMsgDetailAttrib::clear_mind_point() {
  _impl_.mind_point_ = 0;
}
inline int32_t ServerMsgDetailAttrib::_internal_mind_point() const {
  return _impl_.mind_point_;
}
inline int32_t ServerMsgDetailAttrib::mind_point() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttrib.mind_point)
  return _internal_mind_point();
}
inline void ServerMsgDetailAttrib::_internal_set_mind_point(int32_t value) {
  
  _impl_.mind_point_ = value;
}
inline void ServerMsgDetailAttrib::set_mind_point(int32_t value) {
  _internal_set_mind_point(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttrib.mind_point)
}

// int32 constitution_point = 46;
inline void ServerMsgDetailAttrib::clear_constitution_point() {
  _impl_.constitution_point_ = 0;
}
inline int32_t ServerMsgDetailAttrib::_internal_constitution_point() const {
  return _impl_.constitution_point_;
}
inline int32_t ServerMsgDetailAttrib::constitution_point() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttrib.constitution_point)
  return _internal_constitution_point();
}
inline void ServerMsgDetailAttrib::_internal_set_constitution_point(int32_t value) {
  
  _impl_.constitution_point_ = value;
}
inline void ServerMsgDetailAttrib::set_constitution_point(int32_t value) {
  _internal_set_constitution_point(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttrib.constitution_point)
}

// int32 index = 47;
inline void ServerMsgDetailAttrib::clear_index() {
  _impl_.index_ = 0;
}
inline int32_t ServerMsgDetailAttrib::_internal_index() const {
  return _impl_.index_;
}
inline int32_t ServerMsgDetailAttrib::index() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttrib.index)
  return _internal_index();
}
inline void ServerMsgDetailAttrib::_internal_set_index(int32_t value) {
  
  _impl_.index_ = value;
}
inline void ServerMsgDetailAttrib::set_index(int32_t value) {
  _internal_set_index(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttrib.index)
}

// int32 stall_order = 48;
inline void ServerMsgDetailAttrib::clear_stall_order() {
  _impl_.stall_order_ = 0;
}
inline int32_t ServerMsgDetailAttrib::_internal_stall_order() const {
  return _impl_.stall_order_;
}
inline int32_t ServerMsgDetailAttrib::stall_order() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttrib.stall_order)
  return _internal_stall_order();
}
inline void ServerMsgDetailAttrib::_internal_set_stall_order(int32_t value) {
  
  _impl_.stall_order_ = value;
}
inline void ServerMsgDetailAttrib::set_stall_order(int32_t value) {
  _internal_set_stall_order(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttrib.stall_order)
}

// int32 pet_lock = 49;
inline void ServerMsgDetailAttrib::clear_pet_lock() {
  _impl_.pet_lock_ = 0;
}
inline int32_t ServerMsgDetailAttrib::_internal_pet_lock() const {
  return _impl_.pet_lock_;
}
inline int32_t ServerMsgDetailAttrib::pet_lock() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttrib.pet_lock)
  return _internal_pet_lock();
}
inline void ServerMsgDetailAttrib::_internal_set_pet_lock(int32_t value) {
  
  _impl_.pet_lock_ = value;
}
inline void ServerMsgDetailAttrib::set_pet_lock(int32_t value) {
  _internal_set_pet_lock(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttrib.pet_lock)
}

// int32 unlock_time = 50;
inline void ServerMsgDetailAttrib::clear_unlock_time() {
  _impl_.unlock_time_ = 0;
}
inline int32_t ServerMsgDetailAttrib::_internal_unlock_time() const {
  return _impl_.unlock_time_;
}
inline int32_t ServerMsgDetailAttrib::unlock_time() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttrib.unlock_time)
  return _internal_unlock_time();
}
inline void ServerMsgDetailAttrib::_internal_set_unlock_time(int32_t value) {
  
  _impl_.unlock_time_ = value;
}
inline void ServerMsgDetailAttrib::set_unlock_time(int32_t value) {
  _internal_set_unlock_time(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttrib.unlock_time)
}

// bool current_horse_flag = 51;
inline void ServerMsgDetailAttrib::clear_current_horse_flag() {
  _impl_.current_horse_flag_ = false;
}
inline bool ServerMsgDetailAttrib::_internal_current_horse_flag() const {
  return _impl_.current_horse_flag_;
}
inline bool ServerMsgDetailAttrib::current_horse_flag() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttrib.current_horse_flag)
  return _internal_current_horse_flag();
}
inline void ServerMsgDetailAttrib::_internal_set_current_horse_flag(bool value) {
  
  _impl_.current_horse_flag_ = value;
}
inline void ServerMsgDetailAttrib::set_current_horse_flag(bool value) {
  _internal_set_current_horse_flag(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttrib.current_horse_flag)
}

// -------------------------------------------------------------------

// ServerMsgDetailAttribPet

// repeated .base.HorseSkill skills = 1;
inline int ServerMsgDetailAttribPet::_internal_skills_size() const {
  return _impl_.skills_.size();
}
inline int ServerMsgDetailAttribPet::skills_size() const {
  return _internal_skills_size();
}
inline ::base::HorseSkill* ServerMsgDetailAttribPet::mutable_skills(int index) {
  // @@protoc_insertion_point(field_mutable:servermessage.ServerMsgDetailAttribPet.skills)
  return _impl_.skills_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::base::HorseSkill >*
ServerMsgDetailAttribPet::mutable_skills() {
  // @@protoc_insertion_point(field_mutable_list:servermessage.ServerMsgDetailAttribPet.skills)
  return &_impl_.skills_;
}
inline const ::base::HorseSkill& ServerMsgDetailAttribPet::_internal_skills(int index) const {
  return _impl_.skills_.Get(index);
}
inline const ::base::HorseSkill& ServerMsgDetailAttribPet::skills(int index) const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttribPet.skills)
  return _internal_skills(index);
}
inline ::base::HorseSkill* ServerMsgDetailAttribPet::_internal_add_skills() {
  return _impl_.skills_.Add();
}
inline ::base::HorseSkill* ServerMsgDetailAttribPet::add_skills() {
  ::base::HorseSkill* _add = _internal_add_skills();
  // @@protoc_insertion_point(field_add:servermessage.ServerMsgDetailAttribPet.skills)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::base::HorseSkill >&
ServerMsgDetailAttribPet::skills() const {
  // @@protoc_insertion_point(field_list:servermessage.ServerMsgDetailAttribPet.skills)
  return _impl_.skills_;
}

// string extra_data = 2;
inline void ServerMsgDetailAttribPet::clear_extra_data() {
  _impl_.extra_data_.ClearToEmpty();
}
inline const std::string& ServerMsgDetailAttribPet::extra_data() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttribPet.extra_data)
  return _internal_extra_data();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void ServerMsgDetailAttribPet::set_extra_data(ArgT0&& arg0, ArgT... args) {
 
 _impl_.extra_data_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttribPet.extra_data)
}
inline std::string* ServerMsgDetailAttribPet::mutable_extra_data() {
  std::string* _s = _internal_mutable_extra_data();
  // @@protoc_insertion_point(field_mutable:servermessage.ServerMsgDetailAttribPet.extra_data)
  return _s;
}
inline const std::string& ServerMsgDetailAttribPet::_internal_extra_data() const {
  return _impl_.extra_data_.Get();
}
inline void ServerMsgDetailAttribPet::_internal_set_extra_data(const std::string& value) {
  
  _impl_.extra_data_.Set(value, GetArenaForAllocation());
}
inline std::string* ServerMsgDetailAttribPet::_internal_mutable_extra_data() {
  
  return _impl_.extra_data_.Mutable(GetArenaForAllocation());
}
inline std::string* ServerMsgDetailAttribPet::release_extra_data() {
  // @@protoc_insertion_point(field_release:servermessage.ServerMsgDetailAttribPet.extra_data)
  return _impl_.extra_data_.Release();
}
inline void ServerMsgDetailAttribPet::set_allocated_extra_data(std::string* extra_data) {
  if (extra_data != nullptr) {
    
  } else {
    
  }
  _impl_.extra_data_.SetAllocated(extra_data, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.extra_data_.IsDefault()) {
    _impl_.extra_data_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:servermessage.ServerMsgDetailAttribPet.extra_data)
}

// .base.Flag64 flags = 3;
inline bool ServerMsgDetailAttribPet::_internal_has_flags() const {
  return this != internal_default_instance() && _impl_.flags_ != nullptr;
}
inline bool ServerMsgDetailAttribPet::has_flags() const {
  return _internal_has_flags();
}
inline const ::base::Flag64& ServerMsgDetailAttribPet::_internal_flags() const {
  const ::base::Flag64* p = _impl_.flags_;
  return p != nullptr ? *p : reinterpret_cast<const ::base::Flag64&>(
      ::base::_Flag64_default_instance_);
}
inline const ::base::Flag64& ServerMsgDetailAttribPet::flags() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttribPet.flags)
  return _internal_flags();
}
inline void ServerMsgDetailAttribPet::unsafe_arena_set_allocated_flags(
    ::base::Flag64* flags) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.flags_);
  }
  _impl_.flags_ = flags;
  if (flags) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:servermessage.ServerMsgDetailAttribPet.flags)
}
inline ::base::Flag64* ServerMsgDetailAttribPet::release_flags() {
  
  ::base::Flag64* temp = _impl_.flags_;
  _impl_.flags_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::base::Flag64* ServerMsgDetailAttribPet::unsafe_arena_release_flags() {
  // @@protoc_insertion_point(field_release:servermessage.ServerMsgDetailAttribPet.flags)
  
  ::base::Flag64* temp = _impl_.flags_;
  _impl_.flags_ = nullptr;
  return temp;
}
inline ::base::Flag64* ServerMsgDetailAttribPet::_internal_mutable_flags() {
  
  if (_impl_.flags_ == nullptr) {
    auto* p = CreateMaybeMessage<::base::Flag64>(GetArenaForAllocation());
    _impl_.flags_ = p;
  }
  return _impl_.flags_;
}
inline ::base::Flag64* ServerMsgDetailAttribPet::mutable_flags() {
  ::base::Flag64* _msg = _internal_mutable_flags();
  // @@protoc_insertion_point(field_mutable:servermessage.ServerMsgDetailAttribPet.flags)
  return _msg;
}
inline void ServerMsgDetailAttribPet::set_allocated_flags(::base::Flag64* flags) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.flags_);
  }
  if (flags) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(flags));
    if (message_arena != submessage_arena) {
      flags = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, flags, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.flags_ = flags;
  // @@protoc_insertion_point(field_set_allocated:servermessage.ServerMsgDetailAttribPet.flags)
}

// int32 map_id = 4;
inline void ServerMsgDetailAttribPet::clear_map_id() {
  _impl_.map_id_ = 0;
}
inline int32_t ServerMsgDetailAttribPet::_internal_map_id() const {
  return _impl_.map_id_;
}
inline int32_t ServerMsgDetailAttribPet::map_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttribPet.map_id)
  return _internal_map_id();
}
inline void ServerMsgDetailAttribPet::_internal_set_map_id(int32_t value) {
  
  _impl_.map_id_ = value;
}
inline void ServerMsgDetailAttribPet::set_map_id(int32_t value) {
  _internal_set_map_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttribPet.map_id)
}

// .base.SHorseGuid horse_guid = 5;
inline bool ServerMsgDetailAttribPet::_internal_has_horse_guid() const {
  return this != internal_default_instance() && _impl_.horse_guid_ != nullptr;
}
inline bool ServerMsgDetailAttribPet::has_horse_guid() const {
  return _internal_has_horse_guid();
}
inline const ::base::SHorseGuid& ServerMsgDetailAttribPet::_internal_horse_guid() const {
  const ::base::SHorseGuid* p = _impl_.horse_guid_;
  return p != nullptr ? *p : reinterpret_cast<const ::base::SHorseGuid&>(
      ::base::_SHorseGuid_default_instance_);
}
inline const ::base::SHorseGuid& ServerMsgDetailAttribPet::horse_guid() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttribPet.horse_guid)
  return _internal_horse_guid();
}
inline void ServerMsgDetailAttribPet::unsafe_arena_set_allocated_horse_guid(
    ::base::SHorseGuid* horse_guid) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.horse_guid_);
  }
  _impl_.horse_guid_ = horse_guid;
  if (horse_guid) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:servermessage.ServerMsgDetailAttribPet.horse_guid)
}
inline ::base::SHorseGuid* ServerMsgDetailAttribPet::release_horse_guid() {
  
  ::base::SHorseGuid* temp = _impl_.horse_guid_;
  _impl_.horse_guid_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::base::SHorseGuid* ServerMsgDetailAttribPet::unsafe_arena_release_horse_guid() {
  // @@protoc_insertion_point(field_release:servermessage.ServerMsgDetailAttribPet.horse_guid)
  
  ::base::SHorseGuid* temp = _impl_.horse_guid_;
  _impl_.horse_guid_ = nullptr;
  return temp;
}
inline ::base::SHorseGuid* ServerMsgDetailAttribPet::_internal_mutable_horse_guid() {
  
  if (_impl_.horse_guid_ == nullptr) {
    auto* p = CreateMaybeMessage<::base::SHorseGuid>(GetArenaForAllocation());
    _impl_.horse_guid_ = p;
  }
  return _impl_.horse_guid_;
}
inline ::base::SHorseGuid* ServerMsgDetailAttribPet::mutable_horse_guid() {
  ::base::SHorseGuid* _msg = _internal_mutable_horse_guid();
  // @@protoc_insertion_point(field_mutable:servermessage.ServerMsgDetailAttribPet.horse_guid)
  return _msg;
}
inline void ServerMsgDetailAttribPet::set_allocated_horse_guid(::base::SHorseGuid* horse_guid) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.horse_guid_);
  }
  if (horse_guid) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(horse_guid));
    if (message_arena != submessage_arena) {
      horse_guid = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, horse_guid, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.horse_guid_ = horse_guid;
  // @@protoc_insertion_point(field_set_allocated:servermessage.ServerMsgDetailAttribPet.horse_guid)
}

// int32 trade_index = 6;
inline void ServerMsgDetailAttribPet::clear_trade_index() {
  _impl_.trade_index_ = 0;
}
inline int32_t ServerMsgDetailAttribPet::_internal_trade_index() const {
  return _impl_.trade_index_;
}
inline int32_t ServerMsgDetailAttribPet::trade_index() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttribPet.trade_index)
  return _internal_trade_index();
}
inline void ServerMsgDetailAttribPet::_internal_set_trade_index(int32_t value) {
  
  _impl_.trade_index_ = value;
}
inline void ServerMsgDetailAttribPet::set_trade_index(int32_t value) {
  _internal_set_trade_index(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttribPet.trade_index)
}

// int32 data_id = 7;
inline void ServerMsgDetailAttribPet::clear_data_id() {
  _impl_.data_id_ = 0;
}
inline int32_t ServerMsgDetailAttribPet::_internal_data_id() const {
  return _impl_.data_id_;
}
inline int32_t ServerMsgDetailAttribPet::data_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttribPet.data_id)
  return _internal_data_id();
}
inline void ServerMsgDetailAttribPet::_internal_set_data_id(int32_t value) {
  
  _impl_.data_id_ = value;
}
inline void ServerMsgDetailAttribPet::set_data_id(int32_t value) {
  _internal_set_data_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttribPet.data_id)
}

// string name = 8;
inline void ServerMsgDetailAttribPet::clear_name() {
  _impl_.name_.ClearToEmpty();
}
inline const std::string& ServerMsgDetailAttribPet::name() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttribPet.name)
  return _internal_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void ServerMsgDetailAttribPet::set_name(ArgT0&& arg0, ArgT... args) {
 
 _impl_.name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttribPet.name)
}
inline std::string* ServerMsgDetailAttribPet::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:servermessage.ServerMsgDetailAttribPet.name)
  return _s;
}
inline const std::string& ServerMsgDetailAttribPet::_internal_name() const {
  return _impl_.name_.Get();
}
inline void ServerMsgDetailAttribPet::_internal_set_name(const std::string& value) {
  
  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* ServerMsgDetailAttribPet::_internal_mutable_name() {
  
  return _impl_.name_.Mutable(GetArenaForAllocation());
}
inline std::string* ServerMsgDetailAttribPet::release_name() {
  // @@protoc_insertion_point(field_release:servermessage.ServerMsgDetailAttribPet.name)
  return _impl_.name_.Release();
}
inline void ServerMsgDetailAttribPet::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  _impl_.name_.SetAllocated(name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:servermessage.ServerMsgDetailAttribPet.name)
}

// string nickname = 9;
inline void ServerMsgDetailAttribPet::clear_nickname() {
  _impl_.nickname_.ClearToEmpty();
}
inline const std::string& ServerMsgDetailAttribPet::nickname() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttribPet.nickname)
  return _internal_nickname();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void ServerMsgDetailAttribPet::set_nickname(ArgT0&& arg0, ArgT... args) {
 
 _impl_.nickname_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttribPet.nickname)
}
inline std::string* ServerMsgDetailAttribPet::mutable_nickname() {
  std::string* _s = _internal_mutable_nickname();
  // @@protoc_insertion_point(field_mutable:servermessage.ServerMsgDetailAttribPet.nickname)
  return _s;
}
inline const std::string& ServerMsgDetailAttribPet::_internal_nickname() const {
  return _impl_.nickname_.Get();
}
inline void ServerMsgDetailAttribPet::_internal_set_nickname(const std::string& value) {
  
  _impl_.nickname_.Set(value, GetArenaForAllocation());
}
inline std::string* ServerMsgDetailAttribPet::_internal_mutable_nickname() {
  
  return _impl_.nickname_.Mutable(GetArenaForAllocation());
}
inline std::string* ServerMsgDetailAttribPet::release_nickname() {
  // @@protoc_insertion_point(field_release:servermessage.ServerMsgDetailAttribPet.nickname)
  return _impl_.nickname_.Release();
}
inline void ServerMsgDetailAttribPet::set_allocated_nickname(std::string* nickname) {
  if (nickname != nullptr) {
    
  } else {
    
  }
  _impl_.nickname_.SetAllocated(nickname, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.nickname_.IsDefault()) {
    _impl_.nickname_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:servermessage.ServerMsgDetailAttribPet.nickname)
}

// int32 ai_type = 10;
inline void ServerMsgDetailAttribPet::clear_ai_type() {
  _impl_.ai_type_ = 0;
}
inline int32_t ServerMsgDetailAttribPet::_internal_ai_type() const {
  return _impl_.ai_type_;
}
inline int32_t ServerMsgDetailAttribPet::ai_type() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttribPet.ai_type)
  return _internal_ai_type();
}
inline void ServerMsgDetailAttribPet::_internal_set_ai_type(int32_t value) {
  
  _impl_.ai_type_ = value;
}
inline void ServerMsgDetailAttribPet::set_ai_type(int32_t value) {
  _internal_set_ai_type(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttribPet.ai_type)
}

// int32 level = 11;
inline void ServerMsgDetailAttribPet::clear_level() {
  _impl_.level_ = 0;
}
inline int32_t ServerMsgDetailAttribPet::_internal_level() const {
  return _impl_.level_;
}
inline int32_t ServerMsgDetailAttribPet::level() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttribPet.level)
  return _internal_level();
}
inline void ServerMsgDetailAttribPet::_internal_set_level(int32_t value) {
  
  _impl_.level_ = value;
}
inline void ServerMsgDetailAttribPet::set_level(int32_t value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttribPet.level)
}

// int32 exp = 12;
inline void ServerMsgDetailAttribPet::clear_exp() {
  _impl_.exp_ = 0;
}
inline int32_t ServerMsgDetailAttribPet::_internal_exp() const {
  return _impl_.exp_;
}
inline int32_t ServerMsgDetailAttribPet::exp() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttribPet.exp)
  return _internal_exp();
}
inline void ServerMsgDetailAttribPet::_internal_set_exp(int32_t value) {
  
  _impl_.exp_ = value;
}
inline void ServerMsgDetailAttribPet::set_exp(int32_t value) {
  _internal_set_exp(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttribPet.exp)
}

// int32 hp = 13;
inline void ServerMsgDetailAttribPet::clear_hp() {
  _impl_.hp_ = 0;
}
inline int32_t ServerMsgDetailAttribPet::_internal_hp() const {
  return _impl_.hp_;
}
inline int32_t ServerMsgDetailAttribPet::hp() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttribPet.hp)
  return _internal_hp();
}
inline void ServerMsgDetailAttribPet::_internal_set_hp(int32_t value) {
  
  _impl_.hp_ = value;
}
inline void ServerMsgDetailAttribPet::set_hp(int32_t value) {
  _internal_set_hp(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttribPet.hp)
}

// int32 hp_max = 14;
inline void ServerMsgDetailAttribPet::clear_hp_max() {
  _impl_.hp_max_ = 0;
}
inline int32_t ServerMsgDetailAttribPet::_internal_hp_max() const {
  return _impl_.hp_max_;
}
inline int32_t ServerMsgDetailAttribPet::hp_max() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttribPet.hp_max)
  return _internal_hp_max();
}
inline void ServerMsgDetailAttribPet::_internal_set_hp_max(int32_t value) {
  
  _impl_.hp_max_ = value;
}
inline void ServerMsgDetailAttribPet::set_hp_max(int32_t value) {
  _internal_set_hp_max(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttribPet.hp_max)
}

// int32 horse_state = 15;
inline void ServerMsgDetailAttribPet::clear_horse_state() {
  _impl_.horse_state_ = 0;
}
inline int32_t ServerMsgDetailAttribPet::_internal_horse_state() const {
  return _impl_.horse_state_;
}
inline int32_t ServerMsgDetailAttribPet::horse_state() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttribPet.horse_state)
  return _internal_horse_state();
}
inline void ServerMsgDetailAttribPet::_internal_set_horse_state(int32_t value) {
  
  _impl_.horse_state_ = value;
}
inline void ServerMsgDetailAttribPet::set_horse_state(int32_t value) {
  _internal_set_horse_state(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttribPet.horse_state)
}

// int32 generation = 16;
inline void ServerMsgDetailAttribPet::clear_generation() {
  _impl_.generation_ = 0;
}
inline int32_t ServerMsgDetailAttribPet::_internal_generation() const {
  return _impl_.generation_;
}
inline int32_t ServerMsgDetailAttribPet::generation() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttribPet.generation)
  return _internal_generation();
}
inline void ServerMsgDetailAttribPet::_internal_set_generation(int32_t value) {
  
  _impl_.generation_ = value;
}
inline void ServerMsgDetailAttribPet::set_generation(int32_t value) {
  _internal_set_generation(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttribPet.generation)
}

// int32 happiness = 17;
inline void ServerMsgDetailAttribPet::clear_happiness() {
  _impl_.happiness_ = 0;
}
inline int32_t ServerMsgDetailAttribPet::_internal_happiness() const {
  return _impl_.happiness_;
}
inline int32_t ServerMsgDetailAttribPet::happiness() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttribPet.happiness)
  return _internal_happiness();
}
inline void ServerMsgDetailAttribPet::_internal_set_happiness(int32_t value) {
  
  _impl_.happiness_ = value;
}
inline void ServerMsgDetailAttribPet::set_happiness(int32_t value) {
  _internal_set_happiness(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttribPet.happiness)
}

// int32 attr_near = 18;
inline void ServerMsgDetailAttribPet::clear_attr_near() {
  _impl_.attr_near_ = 0;
}
inline int32_t ServerMsgDetailAttribPet::_internal_attr_near() const {
  return _impl_.attr_near_;
}
inline int32_t ServerMsgDetailAttribPet::attr_near() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttribPet.attr_near)
  return _internal_attr_near();
}
inline void ServerMsgDetailAttribPet::_internal_set_attr_near(int32_t value) {
  
  _impl_.attr_near_ = value;
}
inline void ServerMsgDetailAttribPet::set_attr_near(int32_t value) {
  _internal_set_attr_near(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttribPet.attr_near)
}

// int32 attr_far = 19;
inline void ServerMsgDetailAttribPet::clear_attr_far() {
  _impl_.attr_far_ = 0;
}
inline int32_t ServerMsgDetailAttribPet::_internal_attr_far() const {
  return _impl_.attr_far_;
}
inline int32_t ServerMsgDetailAttribPet::attr_far() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttribPet.attr_far)
  return _internal_attr_far();
}
inline void ServerMsgDetailAttribPet::_internal_set_attr_far(int32_t value) {
  
  _impl_.attr_far_ = value;
}
inline void ServerMsgDetailAttribPet::set_attr_far(int32_t value) {
  _internal_set_attr_far(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttribPet.attr_far)
}

// int32 attr_magic = 20;
inline void ServerMsgDetailAttribPet::clear_attr_magic() {
  _impl_.attr_magic_ = 0;
}
inline int32_t ServerMsgDetailAttribPet::_internal_attr_magic() const {
  return _impl_.attr_magic_;
}
inline int32_t ServerMsgDetailAttribPet::attr_magic() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttribPet.attr_magic)
  return _internal_attr_magic();
}
inline void ServerMsgDetailAttribPet::_internal_set_attr_magic(int32_t value) {
  
  _impl_.attr_magic_ = value;
}
inline void ServerMsgDetailAttribPet::set_attr_magic(int32_t value) {
  _internal_set_attr_magic(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttribPet.attr_magic)
}

// int32 def_near = 21;
inline void ServerMsgDetailAttribPet::clear_def_near() {
  _impl_.def_near_ = 0;
}
inline int32_t ServerMsgDetailAttribPet::_internal_def_near() const {
  return _impl_.def_near_;
}
inline int32_t ServerMsgDetailAttribPet::def_near() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttribPet.def_near)
  return _internal_def_near();
}
inline void ServerMsgDetailAttribPet::_internal_set_def_near(int32_t value) {
  
  _impl_.def_near_ = value;
}
inline void ServerMsgDetailAttribPet::set_def_near(int32_t value) {
  _internal_set_def_near(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttribPet.def_near)
}

// int32 def_far = 22;
inline void ServerMsgDetailAttribPet::clear_def_far() {
  _impl_.def_far_ = 0;
}
inline int32_t ServerMsgDetailAttribPet::_internal_def_far() const {
  return _impl_.def_far_;
}
inline int32_t ServerMsgDetailAttribPet::def_far() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttribPet.def_far)
  return _internal_def_far();
}
inline void ServerMsgDetailAttribPet::_internal_set_def_far(int32_t value) {
  
  _impl_.def_far_ = value;
}
inline void ServerMsgDetailAttribPet::set_def_far(int32_t value) {
  _internal_set_def_far(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttribPet.def_far)
}

// int32 def_magic = 23;
inline void ServerMsgDetailAttribPet::clear_def_magic() {
  _impl_.def_magic_ = 0;
}
inline int32_t ServerMsgDetailAttribPet::_internal_def_magic() const {
  return _impl_.def_magic_;
}
inline int32_t ServerMsgDetailAttribPet::def_magic() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttribPet.def_magic)
  return _internal_def_magic();
}
inline void ServerMsgDetailAttribPet::_internal_set_def_magic(int32_t value) {
  
  _impl_.def_magic_ = value;
}
inline void ServerMsgDetailAttribPet::set_def_magic(int32_t value) {
  _internal_set_def_magic(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttribPet.def_magic)
}

// int32 hit = 24;
inline void ServerMsgDetailAttribPet::clear_hit() {
  _impl_.hit_ = 0;
}
inline int32_t ServerMsgDetailAttribPet::_internal_hit() const {
  return _impl_.hit_;
}
inline int32_t ServerMsgDetailAttribPet::hit() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttribPet.hit)
  return _internal_hit();
}
inline void ServerMsgDetailAttribPet::_internal_set_hit(int32_t value) {
  
  _impl_.hit_ = value;
}
inline void ServerMsgDetailAttribPet::set_hit(int32_t value) {
  _internal_set_hit(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttribPet.hit)
}

// int32 miss = 25;
inline void ServerMsgDetailAttribPet::clear_miss() {
  _impl_.miss_ = 0;
}
inline int32_t ServerMsgDetailAttribPet::_internal_miss() const {
  return _impl_.miss_;
}
inline int32_t ServerMsgDetailAttribPet::miss() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttribPet.miss)
  return _internal_miss();
}
inline void ServerMsgDetailAttribPet::_internal_set_miss(int32_t value) {
  
  _impl_.miss_ = value;
}
inline void ServerMsgDetailAttribPet::set_miss(int32_t value) {
  _internal_set_miss(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttribPet.miss)
}

// int32 critical = 26;
inline void ServerMsgDetailAttribPet::clear_critical() {
  _impl_.critical_ = 0;
}
inline int32_t ServerMsgDetailAttribPet::_internal_critical() const {
  return _impl_.critical_;
}
inline int32_t ServerMsgDetailAttribPet::critical() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttribPet.critical)
  return _internal_critical();
}
inline void ServerMsgDetailAttribPet::_internal_set_critical(int32_t value) {
  
  _impl_.critical_ = value;
}
inline void ServerMsgDetailAttribPet::set_critical(int32_t value) {
  _internal_set_critical(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttribPet.critical)
}

// int32 model_id = 27;
inline void ServerMsgDetailAttribPet::clear_model_id() {
  _impl_.model_id_ = 0;
}
inline int32_t ServerMsgDetailAttribPet::_internal_model_id() const {
  return _impl_.model_id_;
}
inline int32_t ServerMsgDetailAttribPet::model_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttribPet.model_id)
  return _internal_model_id();
}
inline void ServerMsgDetailAttribPet::_internal_set_model_id(int32_t value) {
  
  _impl_.model_id_ = value;
}
inline void ServerMsgDetailAttribPet::set_model_id(int32_t value) {
  _internal_set_model_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttribPet.model_id)
}

// int32 mount_id = 28;
inline void ServerMsgDetailAttribPet::clear_mount_id() {
  _impl_.mount_id_ = 0;
}
inline int32_t ServerMsgDetailAttribPet::_internal_mount_id() const {
  return _impl_.mount_id_;
}
inline int32_t ServerMsgDetailAttribPet::mount_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttribPet.mount_id)
  return _internal_mount_id();
}
inline void ServerMsgDetailAttribPet::_internal_set_mount_id(int32_t value) {
  
  _impl_.mount_id_ = value;
}
inline void ServerMsgDetailAttribPet::set_mount_id(int32_t value) {
  _internal_set_mount_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttribPet.mount_id)
}

// int32 str_perception = 29;
inline void ServerMsgDetailAttribPet::clear_str_perception() {
  _impl_.str_perception_ = 0;
}
inline int32_t ServerMsgDetailAttribPet::_internal_str_perception() const {
  return _impl_.str_perception_;
}
inline int32_t ServerMsgDetailAttribPet::str_perception() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttribPet.str_perception)
  return _internal_str_perception();
}
inline void ServerMsgDetailAttribPet::_internal_set_str_perception(int32_t value) {
  
  _impl_.str_perception_ = value;
}
inline void ServerMsgDetailAttribPet::set_str_perception(int32_t value) {
  _internal_set_str_perception(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttribPet.str_perception)
}

// int32 con_perception = 30;
inline void ServerMsgDetailAttribPet::clear_con_perception() {
  _impl_.con_perception_ = 0;
}
inline int32_t ServerMsgDetailAttribPet::_internal_con_perception() const {
  return _impl_.con_perception_;
}
inline int32_t ServerMsgDetailAttribPet::con_perception() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttribPet.con_perception)
  return _internal_con_perception();
}
inline void ServerMsgDetailAttribPet::_internal_set_con_perception(int32_t value) {
  
  _impl_.con_perception_ = value;
}
inline void ServerMsgDetailAttribPet::set_con_perception(int32_t value) {
  _internal_set_con_perception(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttribPet.con_perception)
}

// int32 dex_perception = 31;
inline void ServerMsgDetailAttribPet::clear_dex_perception() {
  _impl_.dex_perception_ = 0;
}
inline int32_t ServerMsgDetailAttribPet::_internal_dex_perception() const {
  return _impl_.dex_perception_;
}
inline int32_t ServerMsgDetailAttribPet::dex_perception() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttribPet.dex_perception)
  return _internal_dex_perception();
}
inline void ServerMsgDetailAttribPet::_internal_set_dex_perception(int32_t value) {
  
  _impl_.dex_perception_ = value;
}
inline void ServerMsgDetailAttribPet::set_dex_perception(int32_t value) {
  _internal_set_dex_perception(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttribPet.dex_perception)
}

// int32 int_perception = 32;
inline void ServerMsgDetailAttribPet::clear_int_perception() {
  _impl_.int_perception_ = 0;
}
inline int32_t ServerMsgDetailAttribPet::_internal_int_perception() const {
  return _impl_.int_perception_;
}
inline int32_t ServerMsgDetailAttribPet::int_perception() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttribPet.int_perception)
  return _internal_int_perception();
}
inline void ServerMsgDetailAttribPet::_internal_set_int_perception(int32_t value) {
  
  _impl_.int_perception_ = value;
}
inline void ServerMsgDetailAttribPet::set_int_perception(int32_t value) {
  _internal_set_int_perception(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttribPet.int_perception)
}

// int32 str_perception_limit = 33;
inline void ServerMsgDetailAttribPet::clear_str_perception_limit() {
  _impl_.str_perception_limit_ = 0;
}
inline int32_t ServerMsgDetailAttribPet::_internal_str_perception_limit() const {
  return _impl_.str_perception_limit_;
}
inline int32_t ServerMsgDetailAttribPet::str_perception_limit() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttribPet.str_perception_limit)
  return _internal_str_perception_limit();
}
inline void ServerMsgDetailAttribPet::_internal_set_str_perception_limit(int32_t value) {
  
  _impl_.str_perception_limit_ = value;
}
inline void ServerMsgDetailAttribPet::set_str_perception_limit(int32_t value) {
  _internal_set_str_perception_limit(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttribPet.str_perception_limit)
}

// int32 con_perception_limit = 34;
inline void ServerMsgDetailAttribPet::clear_con_perception_limit() {
  _impl_.con_perception_limit_ = 0;
}
inline int32_t ServerMsgDetailAttribPet::_internal_con_perception_limit() const {
  return _impl_.con_perception_limit_;
}
inline int32_t ServerMsgDetailAttribPet::con_perception_limit() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttribPet.con_perception_limit)
  return _internal_con_perception_limit();
}
inline void ServerMsgDetailAttribPet::_internal_set_con_perception_limit(int32_t value) {
  
  _impl_.con_perception_limit_ = value;
}
inline void ServerMsgDetailAttribPet::set_con_perception_limit(int32_t value) {
  _internal_set_con_perception_limit(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttribPet.con_perception_limit)
}

// int32 dex_perception_limit = 35;
inline void ServerMsgDetailAttribPet::clear_dex_perception_limit() {
  _impl_.dex_perception_limit_ = 0;
}
inline int32_t ServerMsgDetailAttribPet::_internal_dex_perception_limit() const {
  return _impl_.dex_perception_limit_;
}
inline int32_t ServerMsgDetailAttribPet::dex_perception_limit() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttribPet.dex_perception_limit)
  return _internal_dex_perception_limit();
}
inline void ServerMsgDetailAttribPet::_internal_set_dex_perception_limit(int32_t value) {
  
  _impl_.dex_perception_limit_ = value;
}
inline void ServerMsgDetailAttribPet::set_dex_perception_limit(int32_t value) {
  _internal_set_dex_perception_limit(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttribPet.dex_perception_limit)
}

// int32 int_perception_limit = 36;
inline void ServerMsgDetailAttribPet::clear_int_perception_limit() {
  _impl_.int_perception_limit_ = 0;
}
inline int32_t ServerMsgDetailAttribPet::_internal_int_perception_limit() const {
  return _impl_.int_perception_limit_;
}
inline int32_t ServerMsgDetailAttribPet::int_perception_limit() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttribPet.int_perception_limit)
  return _internal_int_perception_limit();
}
inline void ServerMsgDetailAttribPet::_internal_set_int_perception_limit(int32_t value) {
  
  _impl_.int_perception_limit_ = value;
}
inline void ServerMsgDetailAttribPet::set_int_perception_limit(int32_t value) {
  _internal_set_int_perception_limit(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttribPet.int_perception_limit)
}

// int32 strength = 37;
inline void ServerMsgDetailAttribPet::clear_strength() {
  _impl_.strength_ = 0;
}
inline int32_t ServerMsgDetailAttribPet::_internal_strength() const {
  return _impl_.strength_;
}
inline int32_t ServerMsgDetailAttribPet::strength() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttribPet.strength)
  return _internal_strength();
}
inline void ServerMsgDetailAttribPet::_internal_set_strength(int32_t value) {
  
  _impl_.strength_ = value;
}
inline void ServerMsgDetailAttribPet::set_strength(int32_t value) {
  _internal_set_strength(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttribPet.strength)
}

// int32 con = 38;
inline void ServerMsgDetailAttribPet::clear_con() {
  _impl_.con_ = 0;
}
inline int32_t ServerMsgDetailAttribPet::_internal_con() const {
  return _impl_.con_;
}
inline int32_t ServerMsgDetailAttribPet::con() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttribPet.con)
  return _internal_con();
}
inline void ServerMsgDetailAttribPet::_internal_set_con(int32_t value) {
  
  _impl_.con_ = value;
}
inline void ServerMsgDetailAttribPet::set_con(int32_t value) {
  _internal_set_con(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttribPet.con)
}

// int32 dex = 39;
inline void ServerMsgDetailAttribPet::clear_dex() {
  _impl_.dex_ = 0;
}
inline int32_t ServerMsgDetailAttribPet::_internal_dex() const {
  return _impl_.dex_;
}
inline int32_t ServerMsgDetailAttribPet::dex() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttribPet.dex)
  return _internal_dex();
}
inline void ServerMsgDetailAttribPet::_internal_set_dex(int32_t value) {
  
  _impl_.dex_ = value;
}
inline void ServerMsgDetailAttribPet::set_dex(int32_t value) {
  _internal_set_dex(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttribPet.dex)
}

// int32 intelligence = 40;
inline void ServerMsgDetailAttribPet::clear_intelligence() {
  _impl_.intelligence_ = 0;
}
inline int32_t ServerMsgDetailAttribPet::_internal_intelligence() const {
  return _impl_.intelligence_;
}
inline int32_t ServerMsgDetailAttribPet::intelligence() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttribPet.intelligence)
  return _internal_intelligence();
}
inline void ServerMsgDetailAttribPet::_internal_set_intelligence(int32_t value) {
  
  _impl_.intelligence_ = value;
}
inline void ServerMsgDetailAttribPet::set_intelligence(int32_t value) {
  _internal_set_intelligence(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttribPet.intelligence)
}

// int32 grow_rate = 41;
inline void ServerMsgDetailAttribPet::clear_grow_rate() {
  _impl_.grow_rate_ = 0;
}
inline int32_t ServerMsgDetailAttribPet::_internal_grow_rate() const {
  return _impl_.grow_rate_;
}
inline int32_t ServerMsgDetailAttribPet::grow_rate() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttribPet.grow_rate)
  return _internal_grow_rate();
}
inline void ServerMsgDetailAttribPet::_internal_set_grow_rate(int32_t value) {
  
  _impl_.grow_rate_ = value;
}
inline void ServerMsgDetailAttribPet::set_grow_rate(int32_t value) {
  _internal_set_grow_rate(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttribPet.grow_rate)
}

// int32 remain_point = 42;
inline void ServerMsgDetailAttribPet::clear_remain_point() {
  _impl_.remain_point_ = 0;
}
inline int32_t ServerMsgDetailAttribPet::_internal_remain_point() const {
  return _impl_.remain_point_;
}
inline int32_t ServerMsgDetailAttribPet::remain_point() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttribPet.remain_point)
  return _internal_remain_point();
}
inline void ServerMsgDetailAttribPet::_internal_set_remain_point(int32_t value) {
  
  _impl_.remain_point_ = value;
}
inline void ServerMsgDetailAttribPet::set_remain_point(int32_t value) {
  _internal_set_remain_point(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttribPet.remain_point)
}

// int32 strength_point = 43;
inline void ServerMsgDetailAttribPet::clear_strength_point() {
  _impl_.strength_point_ = 0;
}
inline int32_t ServerMsgDetailAttribPet::_internal_strength_point() const {
  return _impl_.strength_point_;
}
inline int32_t ServerMsgDetailAttribPet::strength_point() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttribPet.strength_point)
  return _internal_strength_point();
}
inline void ServerMsgDetailAttribPet::_internal_set_strength_point(int32_t value) {
  
  _impl_.strength_point_ = value;
}
inline void ServerMsgDetailAttribPet::set_strength_point(int32_t value) {
  _internal_set_strength_point(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttribPet.strength_point)
}

// int32 smartness_point = 44;
inline void ServerMsgDetailAttribPet::clear_smartness_point() {
  _impl_.smartness_point_ = 0;
}
inline int32_t ServerMsgDetailAttribPet::_internal_smartness_point() const {
  return _impl_.smartness_point_;
}
inline int32_t ServerMsgDetailAttribPet::smartness_point() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttribPet.smartness_point)
  return _internal_smartness_point();
}
inline void ServerMsgDetailAttribPet::_internal_set_smartness_point(int32_t value) {
  
  _impl_.smartness_point_ = value;
}
inline void ServerMsgDetailAttribPet::set_smartness_point(int32_t value) {
  _internal_set_smartness_point(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttribPet.smartness_point)
}

// int32 mind_point = 45;
inline void ServerMsgDetailAttribPet::clear_mind_point() {
  _impl_.mind_point_ = 0;
}
inline int32_t ServerMsgDetailAttribPet::_internal_mind_point() const {
  return _impl_.mind_point_;
}
inline int32_t ServerMsgDetailAttribPet::mind_point() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttribPet.mind_point)
  return _internal_mind_point();
}
inline void ServerMsgDetailAttribPet::_internal_set_mind_point(int32_t value) {
  
  _impl_.mind_point_ = value;
}
inline void ServerMsgDetailAttribPet::set_mind_point(int32_t value) {
  _internal_set_mind_point(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttribPet.mind_point)
}

// int32 constitution_point = 46;
inline void ServerMsgDetailAttribPet::clear_constitution_point() {
  _impl_.constitution_point_ = 0;
}
inline int32_t ServerMsgDetailAttribPet::_internal_constitution_point() const {
  return _impl_.constitution_point_;
}
inline int32_t ServerMsgDetailAttribPet::constitution_point() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttribPet.constitution_point)
  return _internal_constitution_point();
}
inline void ServerMsgDetailAttribPet::_internal_set_constitution_point(int32_t value) {
  
  _impl_.constitution_point_ = value;
}
inline void ServerMsgDetailAttribPet::set_constitution_point(int32_t value) {
  _internal_set_constitution_point(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttribPet.constitution_point)
}

// int32 index = 47;
inline void ServerMsgDetailAttribPet::clear_index() {
  _impl_.index_ = 0;
}
inline int32_t ServerMsgDetailAttribPet::_internal_index() const {
  return _impl_.index_;
}
inline int32_t ServerMsgDetailAttribPet::index() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttribPet.index)
  return _internal_index();
}
inline void ServerMsgDetailAttribPet::_internal_set_index(int32_t value) {
  
  _impl_.index_ = value;
}
inline void ServerMsgDetailAttribPet::set_index(int32_t value) {
  _internal_set_index(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttribPet.index)
}

// int32 stall_order = 48;
inline void ServerMsgDetailAttribPet::clear_stall_order() {
  _impl_.stall_order_ = 0;
}
inline int32_t ServerMsgDetailAttribPet::_internal_stall_order() const {
  return _impl_.stall_order_;
}
inline int32_t ServerMsgDetailAttribPet::stall_order() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttribPet.stall_order)
  return _internal_stall_order();
}
inline void ServerMsgDetailAttribPet::_internal_set_stall_order(int32_t value) {
  
  _impl_.stall_order_ = value;
}
inline void ServerMsgDetailAttribPet::set_stall_order(int32_t value) {
  _internal_set_stall_order(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttribPet.stall_order)
}

// int32 pet_lock = 49;
inline void ServerMsgDetailAttribPet::clear_pet_lock() {
  _impl_.pet_lock_ = 0;
}
inline int32_t ServerMsgDetailAttribPet::_internal_pet_lock() const {
  return _impl_.pet_lock_;
}
inline int32_t ServerMsgDetailAttribPet::pet_lock() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttribPet.pet_lock)
  return _internal_pet_lock();
}
inline void ServerMsgDetailAttribPet::_internal_set_pet_lock(int32_t value) {
  
  _impl_.pet_lock_ = value;
}
inline void ServerMsgDetailAttribPet::set_pet_lock(int32_t value) {
  _internal_set_pet_lock(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttribPet.pet_lock)
}

// int32 unlock_time = 50;
inline void ServerMsgDetailAttribPet::clear_unlock_time() {
  _impl_.unlock_time_ = 0;
}
inline int32_t ServerMsgDetailAttribPet::_internal_unlock_time() const {
  return _impl_.unlock_time_;
}
inline int32_t ServerMsgDetailAttribPet::unlock_time() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailAttribPet.unlock_time)
  return _internal_unlock_time();
}
inline void ServerMsgDetailAttribPet::_internal_set_unlock_time(int32_t value) {
  
  _impl_.unlock_time_ = value;
}
inline void ServerMsgDetailAttribPet::set_unlock_time(int32_t value) {
  _internal_set_unlock_time(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailAttribPet.unlock_time)
}

// -------------------------------------------------------------------

// ServerMsgDetailBuff

// int32 object_id = 1;
inline void ServerMsgDetailBuff::clear_object_id() {
  _impl_.object_id_ = 0;
}
inline int32_t ServerMsgDetailBuff::_internal_object_id() const {
  return _impl_.object_id_;
}
inline int32_t ServerMsgDetailBuff::object_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailBuff.object_id)
  return _internal_object_id();
}
inline void ServerMsgDetailBuff::_internal_set_object_id(int32_t value) {
  
  _impl_.object_id_ = value;
}
inline void ServerMsgDetailBuff::set_object_id(int32_t value) {
  _internal_set_object_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailBuff.object_id)
}

// int32 receiver_id = 2;
inline void ServerMsgDetailBuff::clear_receiver_id() {
  _impl_.receiver_id_ = 0;
}
inline int32_t ServerMsgDetailBuff::_internal_receiver_id() const {
  return _impl_.receiver_id_;
}
inline int32_t ServerMsgDetailBuff::receiver_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailBuff.receiver_id)
  return _internal_receiver_id();
}
inline void ServerMsgDetailBuff::_internal_set_receiver_id(int32_t value) {
  
  _impl_.receiver_id_ = value;
}
inline void ServerMsgDetailBuff::set_receiver_id(int32_t value) {
  _internal_set_receiver_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailBuff.receiver_id)
}

// int32 sender_id = 3;
inline void ServerMsgDetailBuff::clear_sender_id() {
  _impl_.sender_id_ = 0;
}
inline int32_t ServerMsgDetailBuff::_internal_sender_id() const {
  return _impl_.sender_id_;
}
inline int32_t ServerMsgDetailBuff::sender_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailBuff.sender_id)
  return _internal_sender_id();
}
inline void ServerMsgDetailBuff::_internal_set_sender_id(int32_t value) {
  
  _impl_.sender_id_ = value;
}
inline void ServerMsgDetailBuff::set_sender_id(int32_t value) {
  _internal_set_sender_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailBuff.sender_id)
}

// bool enable = 4;
inline void ServerMsgDetailBuff::clear_enable() {
  _impl_.enable_ = false;
}
inline bool ServerMsgDetailBuff::_internal_enable() const {
  return _impl_.enable_;
}
inline bool ServerMsgDetailBuff::enable() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailBuff.enable)
  return _internal_enable();
}
inline void ServerMsgDetailBuff::_internal_set_enable(bool value) {
  
  _impl_.enable_ = value;
}
inline void ServerMsgDetailBuff::set_enable(bool value) {
  _internal_set_enable(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailBuff.enable)
}

// int32 skill_id = 5;
inline void ServerMsgDetailBuff::clear_skill_id() {
  _impl_.skill_id_ = 0;
}
inline int32_t ServerMsgDetailBuff::_internal_skill_id() const {
  return _impl_.skill_id_;
}
inline int32_t ServerMsgDetailBuff::skill_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailBuff.skill_id)
  return _internal_skill_id();
}
inline void ServerMsgDetailBuff::_internal_set_skill_id(int32_t value) {
  
  _impl_.skill_id_ = value;
}
inline void ServerMsgDetailBuff::set_skill_id(int32_t value) {
  _internal_set_skill_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailBuff.skill_id)
}

// int32 sn = 6;
inline void ServerMsgDetailBuff::clear_sn() {
  _impl_.sn_ = 0;
}
inline int32_t ServerMsgDetailBuff::_internal_sn() const {
  return _impl_.sn_;
}
inline int32_t ServerMsgDetailBuff::sn() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailBuff.sn)
  return _internal_sn();
}
inline void ServerMsgDetailBuff::_internal_set_sn(int32_t value) {
  
  _impl_.sn_ = value;
}
inline void ServerMsgDetailBuff::set_sn(int32_t value) {
  _internal_set_sn(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailBuff.sn)
}

// int32 buff_id = 7;
inline void ServerMsgDetailBuff::clear_buff_id() {
  _impl_.buff_id_ = 0;
}
inline int32_t ServerMsgDetailBuff::_internal_buff_id() const {
  return _impl_.buff_id_;
}
inline int32_t ServerMsgDetailBuff::buff_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailBuff.buff_id)
  return _internal_buff_id();
}
inline void ServerMsgDetailBuff::_internal_set_buff_id(int32_t value) {
  
  _impl_.buff_id_ = value;
}
inline void ServerMsgDetailBuff::set_buff_id(int32_t value) {
  _internal_set_buff_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailBuff.buff_id)
}

// int32 continuance = 8;
inline void ServerMsgDetailBuff::clear_continuance() {
  _impl_.continuance_ = 0;
}
inline int32_t ServerMsgDetailBuff::_internal_continuance() const {
  return _impl_.continuance_;
}
inline int32_t ServerMsgDetailBuff::continuance() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailBuff.continuance)
  return _internal_continuance();
}
inline void ServerMsgDetailBuff::_internal_set_continuance(int32_t value) {
  
  _impl_.continuance_ = value;
}
inline void ServerMsgDetailBuff::set_continuance(int32_t value) {
  _internal_set_continuance(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailBuff.continuance)
}

// int32 delay_time = 9;
inline void ServerMsgDetailBuff::clear_delay_time() {
  _impl_.delay_time_ = 0;
}
inline int32_t ServerMsgDetailBuff::_internal_delay_time() const {
  return _impl_.delay_time_;
}
inline int32_t ServerMsgDetailBuff::delay_time() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailBuff.delay_time)
  return _internal_delay_time();
}
inline void ServerMsgDetailBuff::_internal_set_delay_time(int32_t value) {
  
  _impl_.delay_time_ = value;
}
inline void ServerMsgDetailBuff::set_delay_time(int32_t value) {
  _internal_set_delay_time(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailBuff.delay_time)
}

// int32 sender_logic_count = 10;
inline void ServerMsgDetailBuff::clear_sender_logic_count() {
  _impl_.sender_logic_count_ = 0;
}
inline int32_t ServerMsgDetailBuff::_internal_sender_logic_count() const {
  return _impl_.sender_logic_count_;
}
inline int32_t ServerMsgDetailBuff::sender_logic_count() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailBuff.sender_logic_count)
  return _internal_sender_logic_count();
}
inline void ServerMsgDetailBuff::_internal_set_sender_logic_count(int32_t value) {
  
  _impl_.sender_logic_count_ = value;
}
inline void ServerMsgDetailBuff::set_sender_logic_count(int32_t value) {
  _internal_set_sender_logic_count(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailBuff.sender_logic_count)
}

// -------------------------------------------------------------------

// ServerMsgDetailEquipList

// int32 object_id = 1;
inline void ServerMsgDetailEquipList::clear_object_id() {
  _impl_.object_id_ = 0;
}
inline int32_t ServerMsgDetailEquipList::_internal_object_id() const {
  return _impl_.object_id_;
}
inline int32_t ServerMsgDetailEquipList::object_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailEquipList.object_id)
  return _internal_object_id();
}
inline void ServerMsgDetailEquipList::_internal_set_object_id(int32_t value) {
  
  _impl_.object_id_ = value;
}
inline void ServerMsgDetailEquipList::set_object_id(int32_t value) {
  _internal_set_object_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailEquipList.object_id)
}

// repeated .base.SItem items = 2;
inline int ServerMsgDetailEquipList::_internal_items_size() const {
  return _impl_.items_.size();
}
inline int ServerMsgDetailEquipList::items_size() const {
  return _internal_items_size();
}
inline ::base::SItem* ServerMsgDetailEquipList::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:servermessage.ServerMsgDetailEquipList.items)
  return _impl_.items_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::base::SItem >*
ServerMsgDetailEquipList::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:servermessage.ServerMsgDetailEquipList.items)
  return &_impl_.items_;
}
inline const ::base::SItem& ServerMsgDetailEquipList::_internal_items(int index) const {
  return _impl_.items_.Get(index);
}
inline const ::base::SItem& ServerMsgDetailEquipList::items(int index) const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailEquipList.items)
  return _internal_items(index);
}
inline ::base::SItem* ServerMsgDetailEquipList::_internal_add_items() {
  return _impl_.items_.Add();
}
inline ::base::SItem* ServerMsgDetailEquipList::add_items() {
  ::base::SItem* _add = _internal_add_items();
  // @@protoc_insertion_point(field_add:servermessage.ServerMsgDetailEquipList.items)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::base::SItem >&
ServerMsgDetailEquipList::items() const {
  // @@protoc_insertion_point(field_list:servermessage.ServerMsgDetailEquipList.items)
  return _impl_.items_;
}

// -------------------------------------------------------------------

// ServerMsgDetailDetailItemList

// int32 object_id = 1;
inline void ServerMsgDetailDetailItemList::clear_object_id() {
  _impl_.object_id_ = 0;
}
inline int32_t ServerMsgDetailDetailItemList::_internal_object_id() const {
  return _impl_.object_id_;
}
inline int32_t ServerMsgDetailDetailItemList::object_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailDetailItemList.object_id)
  return _internal_object_id();
}
inline void ServerMsgDetailDetailItemList::_internal_set_object_id(int32_t value) {
  
  _impl_.object_id_ = value;
}
inline void ServerMsgDetailDetailItemList::set_object_id(int32_t value) {
  _internal_set_object_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailDetailItemList.object_id)
}

// repeated .base.SItem items = 2;
inline int ServerMsgDetailDetailItemList::_internal_items_size() const {
  return _impl_.items_.size();
}
inline int ServerMsgDetailDetailItemList::items_size() const {
  return _internal_items_size();
}
inline ::base::SItem* ServerMsgDetailDetailItemList::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:servermessage.ServerMsgDetailDetailItemList.items)
  return _impl_.items_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::base::SItem >*
ServerMsgDetailDetailItemList::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:servermessage.ServerMsgDetailDetailItemList.items)
  return &_impl_.items_;
}
inline const ::base::SItem& ServerMsgDetailDetailItemList::_internal_items(int index) const {
  return _impl_.items_.Get(index);
}
inline const ::base::SItem& ServerMsgDetailDetailItemList::items(int index) const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailDetailItemList.items)
  return _internal_items(index);
}
inline ::base::SItem* ServerMsgDetailDetailItemList::_internal_add_items() {
  return _impl_.items_.Add();
}
inline ::base::SItem* ServerMsgDetailDetailItemList::add_items() {
  ::base::SItem* _add = _internal_add_items();
  // @@protoc_insertion_point(field_add:servermessage.ServerMsgDetailDetailItemList.items)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::base::SItem >&
ServerMsgDetailDetailItemList::items() const {
  // @@protoc_insertion_point(field_list:servermessage.ServerMsgDetailDetailItemList.items)
  return _impl_.items_;
}

// -------------------------------------------------------------------

// ServerMsgDetailSkillList

// int32 player_id = 1;
inline void ServerMsgDetailSkillList::clear_player_id() {
  _impl_.player_id_ = 0;
}
inline int32_t ServerMsgDetailSkillList::_internal_player_id() const {
  return _impl_.player_id_;
}
inline int32_t ServerMsgDetailSkillList::player_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailSkillList.player_id)
  return _internal_player_id();
}
inline void ServerMsgDetailSkillList::_internal_set_player_id(int32_t value) {
  
  _impl_.player_id_ = value;
}
inline void ServerMsgDetailSkillList::set_player_id(int32_t value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgDetailSkillList.player_id)
}

// repeated .base.PlayerSpell skills = 2;
inline int ServerMsgDetailSkillList::_internal_skills_size() const {
  return _impl_.skills_.size();
}
inline int ServerMsgDetailSkillList::skills_size() const {
  return _internal_skills_size();
}
inline ::base::PlayerSpell* ServerMsgDetailSkillList::mutable_skills(int index) {
  // @@protoc_insertion_point(field_mutable:servermessage.ServerMsgDetailSkillList.skills)
  return _impl_.skills_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::base::PlayerSpell >*
ServerMsgDetailSkillList::mutable_skills() {
  // @@protoc_insertion_point(field_mutable_list:servermessage.ServerMsgDetailSkillList.skills)
  return &_impl_.skills_;
}
inline const ::base::PlayerSpell& ServerMsgDetailSkillList::_internal_skills(int index) const {
  return _impl_.skills_.Get(index);
}
inline const ::base::PlayerSpell& ServerMsgDetailSkillList::skills(int index) const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgDetailSkillList.skills)
  return _internal_skills(index);
}
inline ::base::PlayerSpell* ServerMsgDetailSkillList::_internal_add_skills() {
  return _impl_.skills_.Add();
}
inline ::base::PlayerSpell* ServerMsgDetailSkillList::add_skills() {
  ::base::PlayerSpell* _add = _internal_add_skills();
  // @@protoc_insertion_point(field_add:servermessage.ServerMsgDetailSkillList.skills)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::base::PlayerSpell >&
ServerMsgDetailSkillList::skills() const {
  // @@protoc_insertion_point(field_list:servermessage.ServerMsgDetailSkillList.skills)
  return _impl_.skills_;
}

// -------------------------------------------------------------------

// ServerMsgEnterMap

// uint32 scene_id = 1;
inline void ServerMsgEnterMap::clear_scene_id() {
  _impl_.scene_id_ = 0u;
}
inline uint32_t ServerMsgEnterMap::_internal_scene_id() const {
  return _impl_.scene_id_;
}
inline uint32_t ServerMsgEnterMap::scene_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgEnterMap.scene_id)
  return _internal_scene_id();
}
inline void ServerMsgEnterMap::_internal_set_scene_id(uint32_t value) {
  
  _impl_.scene_id_ = value;
}
inline void ServerMsgEnterMap::set_scene_id(uint32_t value) {
  _internal_set_scene_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgEnterMap.scene_id)
}

// float position_x = 2;
inline void ServerMsgEnterMap::clear_position_x() {
  _impl_.position_x_ = 0;
}
inline float ServerMsgEnterMap::_internal_position_x() const {
  return _impl_.position_x_;
}
inline float ServerMsgEnterMap::position_x() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgEnterMap.position_x)
  return _internal_position_x();
}
inline void ServerMsgEnterMap::_internal_set_position_x(float value) {
  
  _impl_.position_x_ = value;
}
inline void ServerMsgEnterMap::set_position_x(float value) {
  _internal_set_position_x(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgEnterMap.position_x)
}

// float position_y = 3;
inline void ServerMsgEnterMap::clear_position_y() {
  _impl_.position_y_ = 0;
}
inline float ServerMsgEnterMap::_internal_position_y() const {
  return _impl_.position_y_;
}
inline float ServerMsgEnterMap::position_y() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgEnterMap.position_y)
  return _internal_position_y();
}
inline void ServerMsgEnterMap::_internal_set_position_y(float value) {
  
  _impl_.position_y_ = value;
}
inline void ServerMsgEnterMap::set_position_y(float value) {
  _internal_set_position_y(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgEnterMap.position_y)
}

// int32 guid = 4;
inline void ServerMsgEnterMap::clear_guid() {
  _impl_.guid_ = 0;
}
inline int32_t ServerMsgEnterMap::_internal_guid() const {
  return _impl_.guid_;
}
inline int32_t ServerMsgEnterMap::guid() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgEnterMap.guid)
  return _internal_guid();
}
inline void ServerMsgEnterMap::_internal_set_guid(int32_t value) {
  
  _impl_.guid_ = value;
}
inline void ServerMsgEnterMap::set_guid(int32_t value) {
  _internal_set_guid(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgEnterMap.guid)
}

// int32 object_id = 5;
inline void ServerMsgEnterMap::clear_object_id() {
  _impl_.object_id_ = 0;
}
inline int32_t ServerMsgEnterMap::_internal_object_id() const {
  return _impl_.object_id_;
}
inline int32_t ServerMsgEnterMap::object_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgEnterMap.object_id)
  return _internal_object_id();
}
inline void ServerMsgEnterMap::_internal_set_object_id(int32_t value) {
  
  _impl_.object_id_ = value;
}
inline void ServerMsgEnterMap::set_object_id(int32_t value) {
  _internal_set_object_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgEnterMap.object_id)
}

// -------------------------------------------------------------------

// ServerMsgItemInfo

// int32 bag_index = 1;
inline void ServerMsgItemInfo::clear_bag_index() {
  _impl_.bag_index_ = 0;
}
inline int32_t ServerMsgItemInfo::_internal_bag_index() const {
  return _impl_.bag_index_;
}
inline int32_t ServerMsgItemInfo::bag_index() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgItemInfo.bag_index)
  return _internal_bag_index();
}
inline void ServerMsgItemInfo::_internal_set_bag_index(int32_t value) {
  
  _impl_.bag_index_ = value;
}
inline void ServerMsgItemInfo::set_bag_index(int32_t value) {
  _internal_set_bag_index(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgItemInfo.bag_index)
}

// .base.SItem item = 2;
inline bool ServerMsgItemInfo::_internal_has_item() const {
  return this != internal_default_instance() && _impl_.item_ != nullptr;
}
inline bool ServerMsgItemInfo::has_item() const {
  return _internal_has_item();
}
inline const ::base::SItem& ServerMsgItemInfo::_internal_item() const {
  const ::base::SItem* p = _impl_.item_;
  return p != nullptr ? *p : reinterpret_cast<const ::base::SItem&>(
      ::base::_SItem_default_instance_);
}
inline const ::base::SItem& ServerMsgItemInfo::item() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgItemInfo.item)
  return _internal_item();
}
inline void ServerMsgItemInfo::unsafe_arena_set_allocated_item(
    ::base::SItem* item) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.item_);
  }
  _impl_.item_ = item;
  if (item) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:servermessage.ServerMsgItemInfo.item)
}
inline ::base::SItem* ServerMsgItemInfo::release_item() {
  
  ::base::SItem* temp = _impl_.item_;
  _impl_.item_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::base::SItem* ServerMsgItemInfo::unsafe_arena_release_item() {
  // @@protoc_insertion_point(field_release:servermessage.ServerMsgItemInfo.item)
  
  ::base::SItem* temp = _impl_.item_;
  _impl_.item_ = nullptr;
  return temp;
}
inline ::base::SItem* ServerMsgItemInfo::_internal_mutable_item() {
  
  if (_impl_.item_ == nullptr) {
    auto* p = CreateMaybeMessage<::base::SItem>(GetArenaForAllocation());
    _impl_.item_ = p;
  }
  return _impl_.item_;
}
inline ::base::SItem* ServerMsgItemInfo::mutable_item() {
  ::base::SItem* _msg = _internal_mutable_item();
  // @@protoc_insertion_point(field_mutable:servermessage.ServerMsgItemInfo.item)
  return _msg;
}
inline void ServerMsgItemInfo::set_allocated_item(::base::SItem* item) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.item_);
  }
  if (item) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(item));
    if (message_arena != submessage_arena) {
      item = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, item, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.item_ = item;
  // @@protoc_insertion_point(field_set_allocated:servermessage.ServerMsgItemInfo.item)
}

// bool null = 3;
inline void ServerMsgItemInfo::clear_null() {
  _impl_.null_ = false;
}
inline bool ServerMsgItemInfo::_internal_null() const {
  return _impl_.null_;
}
inline bool ServerMsgItemInfo::null() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgItemInfo.null)
  return _internal_null();
}
inline void ServerMsgItemInfo::_internal_set_null(bool value) {
  
  _impl_.null_ = value;
}
inline void ServerMsgItemInfo::set_null(bool value) {
  _internal_set_null(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgItemInfo.null)
}

// int32 tips = 4;
inline void ServerMsgItemInfo::clear_tips() {
  _impl_.tips_ = 0;
}
inline int32_t ServerMsgItemInfo::_internal_tips() const {
  return _impl_.tips_;
}
inline int32_t ServerMsgItemInfo::tips() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgItemInfo.tips)
  return _internal_tips();
}
inline void ServerMsgItemInfo::_internal_set_tips(int32_t value) {
  
  _impl_.tips_ = value;
}
inline void ServerMsgItemInfo::set_tips(int32_t value) {
  _internal_set_tips(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgItemInfo.tips)
}

// -------------------------------------------------------------------

// ServerMsgManipulatePetResult

// int32 result = 1;
inline void ServerMsgManipulatePetResult::clear_result() {
  _impl_.result_ = 0;
}
inline int32_t ServerMsgManipulatePetResult::_internal_result() const {
  return _impl_.result_;
}
inline int32_t ServerMsgManipulatePetResult::result() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgManipulatePetResult.result)
  return _internal_result();
}
inline void ServerMsgManipulatePetResult::_internal_set_result(int32_t value) {
  
  _impl_.result_ = value;
}
inline void ServerMsgManipulatePetResult::set_result(int32_t value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgManipulatePetResult.result)
}

// int32 object_id = 2;
inline void ServerMsgManipulatePetResult::clear_object_id() {
  _impl_.object_id_ = 0;
}
inline int32_t ServerMsgManipulatePetResult::_internal_object_id() const {
  return _impl_.object_id_;
}
inline int32_t ServerMsgManipulatePetResult::object_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgManipulatePetResult.object_id)
  return _internal_object_id();
}
inline void ServerMsgManipulatePetResult::_internal_set_object_id(int32_t value) {
  
  _impl_.object_id_ = value;
}
inline void ServerMsgManipulatePetResult::set_object_id(int32_t value) {
  _internal_set_object_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgManipulatePetResult.object_id)
}

// int32 scene_id = 3;
inline void ServerMsgManipulatePetResult::clear_scene_id() {
  _impl_.scene_id_ = 0;
}
inline int32_t ServerMsgManipulatePetResult::_internal_scene_id() const {
  return _impl_.scene_id_;
}
inline int32_t ServerMsgManipulatePetResult::scene_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgManipulatePetResult.scene_id)
  return _internal_scene_id();
}
inline void ServerMsgManipulatePetResult::_internal_set_scene_id(int32_t value) {
  
  _impl_.scene_id_ = value;
}
inline void ServerMsgManipulatePetResult::set_scene_id(int32_t value) {
  _internal_set_scene_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgManipulatePetResult.scene_id)
}

// -------------------------------------------------------------------

// ServerMsgModifyQuest

// int32 player_id = 1;
inline void ServerMsgModifyQuest::clear_player_id() {
  _impl_.player_id_ = 0;
}
inline int32_t ServerMsgModifyQuest::_internal_player_id() const {
  return _impl_.player_id_;
}
inline int32_t ServerMsgModifyQuest::player_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgModifyQuest.player_id)
  return _internal_player_id();
}
inline void ServerMsgModifyQuest::_internal_set_player_id(int32_t value) {
  
  _impl_.player_id_ = value;
}
inline void ServerMsgModifyQuest::set_player_id(int32_t value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgModifyQuest.player_id)
}

// int32 quest_id = 2;
inline void ServerMsgModifyQuest::clear_quest_id() {
  _impl_.quest_id_ = 0;
}
inline int32_t ServerMsgModifyQuest::_internal_quest_id() const {
  return _impl_.quest_id_;
}
inline int32_t ServerMsgModifyQuest::quest_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgModifyQuest.quest_id)
  return _internal_quest_id();
}
inline void ServerMsgModifyQuest::_internal_set_quest_id(int32_t value) {
  
  _impl_.quest_id_ = value;
}
inline void ServerMsgModifyQuest::set_quest_id(int32_t value) {
  _internal_set_quest_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgModifyQuest.quest_id)
}

// int32 flag = 3;
inline void ServerMsgModifyQuest::clear_flag() {
  _impl_.flag_ = 0;
}
inline int32_t ServerMsgModifyQuest::_internal_flag() const {
  return _impl_.flag_;
}
inline int32_t ServerMsgModifyQuest::flag() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgModifyQuest.flag)
  return _internal_flag();
}
inline void ServerMsgModifyQuest::_internal_set_flag(int32_t value) {
  
  _impl_.flag_ = value;
}
inline void ServerMsgModifyQuest::set_flag(int32_t value) {
  _internal_set_flag(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgModifyQuest.flag)
}

// uint32 flag32 = 4;
inline void ServerMsgModifyQuest::clear_flag32() {
  _impl_.flag32_ = 0u;
}
inline uint32_t ServerMsgModifyQuest::_internal_flag32() const {
  return _impl_.flag32_;
}
inline uint32_t ServerMsgModifyQuest::flag32() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgModifyQuest.flag32)
  return _internal_flag32();
}
inline void ServerMsgModifyQuest::_internal_set_flag32(uint32_t value) {
  
  _impl_.flag32_ = value;
}
inline void ServerMsgModifyQuest::set_flag32(uint32_t value) {
  _internal_set_flag32(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgModifyQuest.flag32)
}

// .base.Quest quest = 5;
inline bool ServerMsgModifyQuest::_internal_has_quest() const {
  return this != internal_default_instance() && _impl_.quest_ != nullptr;
}
inline bool ServerMsgModifyQuest::has_quest() const {
  return _internal_has_quest();
}
inline const ::base::Quest& ServerMsgModifyQuest::_internal_quest() const {
  const ::base::Quest* p = _impl_.quest_;
  return p != nullptr ? *p : reinterpret_cast<const ::base::Quest&>(
      ::base::_Quest_default_instance_);
}
inline const ::base::Quest& ServerMsgModifyQuest::quest() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgModifyQuest.quest)
  return _internal_quest();
}
inline void ServerMsgModifyQuest::unsafe_arena_set_allocated_quest(
    ::base::Quest* quest) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.quest_);
  }
  _impl_.quest_ = quest;
  if (quest) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:servermessage.ServerMsgModifyQuest.quest)
}
inline ::base::Quest* ServerMsgModifyQuest::release_quest() {
  
  ::base::Quest* temp = _impl_.quest_;
  _impl_.quest_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::base::Quest* ServerMsgModifyQuest::unsafe_arena_release_quest() {
  // @@protoc_insertion_point(field_release:servermessage.ServerMsgModifyQuest.quest)
  
  ::base::Quest* temp = _impl_.quest_;
  _impl_.quest_ = nullptr;
  return temp;
}
inline ::base::Quest* ServerMsgModifyQuest::_internal_mutable_quest() {
  
  if (_impl_.quest_ == nullptr) {
    auto* p = CreateMaybeMessage<::base::Quest>(GetArenaForAllocation());
    _impl_.quest_ = p;
  }
  return _impl_.quest_;
}
inline ::base::Quest* ServerMsgModifyQuest::mutable_quest() {
  ::base::Quest* _msg = _internal_mutable_quest();
  // @@protoc_insertion_point(field_mutable:servermessage.ServerMsgModifyQuest.quest)
  return _msg;
}
inline void ServerMsgModifyQuest::set_allocated_quest(::base::Quest* quest) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.quest_);
  }
  if (quest) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(quest));
    if (message_arena != submessage_arena) {
      quest = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, quest, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.quest_ = quest;
  // @@protoc_insertion_point(field_set_allocated:servermessage.ServerMsgModifyQuest.quest)
}

// -------------------------------------------------------------------

// ServerMsgMonsterAttribute

// int32 refresh = 1;
inline void ServerMsgMonsterAttribute::clear_refresh() {
  _impl_.refresh_ = 0;
}
inline int32_t ServerMsgMonsterAttribute::_internal_refresh() const {
  return _impl_.refresh_;
}
inline int32_t ServerMsgMonsterAttribute::refresh() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgMonsterAttribute.refresh)
  return _internal_refresh();
}
inline void ServerMsgMonsterAttribute::_internal_set_refresh(int32_t value) {
  
  _impl_.refresh_ = value;
}
inline void ServerMsgMonsterAttribute::set_refresh(int32_t value) {
  _internal_set_refresh(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgMonsterAttribute.refresh)
}

// .base.Flag64 flags = 2;
inline bool ServerMsgMonsterAttribute::_internal_has_flags() const {
  return this != internal_default_instance() && _impl_.flags_ != nullptr;
}
inline bool ServerMsgMonsterAttribute::has_flags() const {
  return _internal_has_flags();
}
inline const ::base::Flag64& ServerMsgMonsterAttribute::_internal_flags() const {
  const ::base::Flag64* p = _impl_.flags_;
  return p != nullptr ? *p : reinterpret_cast<const ::base::Flag64&>(
      ::base::_Flag64_default_instance_);
}
inline const ::base::Flag64& ServerMsgMonsterAttribute::flags() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgMonsterAttribute.flags)
  return _internal_flags();
}
inline void ServerMsgMonsterAttribute::unsafe_arena_set_allocated_flags(
    ::base::Flag64* flags) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.flags_);
  }
  _impl_.flags_ = flags;
  if (flags) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:servermessage.ServerMsgMonsterAttribute.flags)
}
inline ::base::Flag64* ServerMsgMonsterAttribute::release_flags() {
  
  ::base::Flag64* temp = _impl_.flags_;
  _impl_.flags_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::base::Flag64* ServerMsgMonsterAttribute::unsafe_arena_release_flags() {
  // @@protoc_insertion_point(field_release:servermessage.ServerMsgMonsterAttribute.flags)
  
  ::base::Flag64* temp = _impl_.flags_;
  _impl_.flags_ = nullptr;
  return temp;
}
inline ::base::Flag64* ServerMsgMonsterAttribute::_internal_mutable_flags() {
  
  if (_impl_.flags_ == nullptr) {
    auto* p = CreateMaybeMessage<::base::Flag64>(GetArenaForAllocation());
    _impl_.flags_ = p;
  }
  return _impl_.flags_;
}
inline ::base::Flag64* ServerMsgMonsterAttribute::mutable_flags() {
  ::base::Flag64* _msg = _internal_mutable_flags();
  // @@protoc_insertion_point(field_mutable:servermessage.ServerMsgMonsterAttribute.flags)
  return _msg;
}
inline void ServerMsgMonsterAttribute::set_allocated_flags(::base::Flag64* flags) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.flags_);
  }
  if (flags) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(flags));
    if (message_arena != submessage_arena) {
      flags = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, flags, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.flags_ = flags;
  // @@protoc_insertion_point(field_set_allocated:servermessage.ServerMsgMonsterAttribute.flags)
}

// int32 object_id = 3;
inline void ServerMsgMonsterAttribute::clear_object_id() {
  _impl_.object_id_ = 0;
}
inline int32_t ServerMsgMonsterAttribute::_internal_object_id() const {
  return _impl_.object_id_;
}
inline int32_t ServerMsgMonsterAttribute::object_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgMonsterAttribute.object_id)
  return _internal_object_id();
}
inline void ServerMsgMonsterAttribute::_internal_set_object_id(int32_t value) {
  
  _impl_.object_id_ = value;
}
inline void ServerMsgMonsterAttribute::set_object_id(int32_t value) {
  _internal_set_object_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgMonsterAttribute.object_id)
}

// uint32 data_id = 4;
inline void ServerMsgMonsterAttribute::clear_data_id() {
  _impl_.data_id_ = 0u;
}
inline uint32_t ServerMsgMonsterAttribute::_internal_data_id() const {
  return _impl_.data_id_;
}
inline uint32_t ServerMsgMonsterAttribute::data_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgMonsterAttribute.data_id)
  return _internal_data_id();
}
inline void ServerMsgMonsterAttribute::_internal_set_data_id(uint32_t value) {
  
  _impl_.data_id_ = value;
}
inline void ServerMsgMonsterAttribute::set_data_id(uint32_t value) {
  _internal_set_data_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgMonsterAttribute.data_id)
}

// int32 level = 5;
inline void ServerMsgMonsterAttribute::clear_level() {
  _impl_.level_ = 0;
}
inline int32_t ServerMsgMonsterAttribute::_internal_level() const {
  return _impl_.level_;
}
inline int32_t ServerMsgMonsterAttribute::level() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgMonsterAttribute.level)
  return _internal_level();
}
inline void ServerMsgMonsterAttribute::_internal_set_level(int32_t value) {
  
  _impl_.level_ = value;
}
inline void ServerMsgMonsterAttribute::set_level(int32_t value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgMonsterAttribute.level)
}

// int32 hp_percent = 6;
inline void ServerMsgMonsterAttribute::clear_hp_percent() {
  _impl_.hp_percent_ = 0;
}
inline int32_t ServerMsgMonsterAttribute::_internal_hp_percent() const {
  return _impl_.hp_percent_;
}
inline int32_t ServerMsgMonsterAttribute::hp_percent() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgMonsterAttribute.hp_percent)
  return _internal_hp_percent();
}
inline void ServerMsgMonsterAttribute::_internal_set_hp_percent(int32_t value) {
  
  _impl_.hp_percent_ = value;
}
inline void ServerMsgMonsterAttribute::set_hp_percent(int32_t value) {
  _internal_set_hp_percent(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgMonsterAttribute.hp_percent)
}

// int32 steal_level = 7;
inline void ServerMsgMonsterAttribute::clear_steal_level() {
  _impl_.steal_level_ = 0;
}
inline int32_t ServerMsgMonsterAttribute::_internal_steal_level() const {
  return _impl_.steal_level_;
}
inline int32_t ServerMsgMonsterAttribute::steal_level() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgMonsterAttribute.steal_level)
  return _internal_steal_level();
}
inline void ServerMsgMonsterAttribute::_internal_set_steal_level(int32_t value) {
  
  _impl_.steal_level_ = value;
}
inline void ServerMsgMonsterAttribute::set_steal_level(int32_t value) {
  _internal_set_steal_level(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgMonsterAttribute.steal_level)
}

// int32 mood_state = 8;
inline void ServerMsgMonsterAttribute::clear_mood_state() {
  _impl_.mood_state_ = 0;
}
inline int32_t ServerMsgMonsterAttribute::_internal_mood_state() const {
  return _impl_.mood_state_;
}
inline int32_t ServerMsgMonsterAttribute::mood_state() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgMonsterAttribute.mood_state)
  return _internal_mood_state();
}
inline void ServerMsgMonsterAttribute::_internal_set_mood_state(int32_t value) {
  
  _impl_.mood_state_ = value;
}
inline void ServerMsgMonsterAttribute::set_mood_state(int32_t value) {
  _internal_set_mood_state(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgMonsterAttribute.mood_state)
}

// float move_speed = 9;
inline void ServerMsgMonsterAttribute::clear_move_speed() {
  _impl_.move_speed_ = 0;
}
inline float ServerMsgMonsterAttribute::_internal_move_speed() const {
  return _impl_.move_speed_;
}
inline float ServerMsgMonsterAttribute::move_speed() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgMonsterAttribute.move_speed)
  return _internal_move_speed();
}
inline void ServerMsgMonsterAttribute::_internal_set_move_speed(float value) {
  
  _impl_.move_speed_ = value;
}
inline void ServerMsgMonsterAttribute::set_move_speed(float value) {
  _internal_set_move_speed(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgMonsterAttribute.move_speed)
}

// float attack_speed = 10;
inline void ServerMsgMonsterAttribute::clear_attack_speed() {
  _impl_.attack_speed_ = 0;
}
inline float ServerMsgMonsterAttribute::_internal_attack_speed() const {
  return _impl_.attack_speed_;
}
inline float ServerMsgMonsterAttribute::attack_speed() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgMonsterAttribute.attack_speed)
  return _internal_attack_speed();
}
inline void ServerMsgMonsterAttribute::_internal_set_attack_speed(float value) {
  
  _impl_.attack_speed_ = value;
}
inline void ServerMsgMonsterAttribute::set_attack_speed(float value) {
  _internal_set_attack_speed(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgMonsterAttribute.attack_speed)
}

// .base.SCampData camp_data = 11;
inline bool ServerMsgMonsterAttribute::_internal_has_camp_data() const {
  return this != internal_default_instance() && _impl_.camp_data_ != nullptr;
}
inline bool ServerMsgMonsterAttribute::has_camp_data() const {
  return _internal_has_camp_data();
}
inline const ::base::SCampData& ServerMsgMonsterAttribute::_internal_camp_data() const {
  const ::base::SCampData* p = _impl_.camp_data_;
  return p != nullptr ? *p : reinterpret_cast<const ::base::SCampData&>(
      ::base::_SCampData_default_instance_);
}
inline const ::base::SCampData& ServerMsgMonsterAttribute::camp_data() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgMonsterAttribute.camp_data)
  return _internal_camp_data();
}
inline void ServerMsgMonsterAttribute::unsafe_arena_set_allocated_camp_data(
    ::base::SCampData* camp_data) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.camp_data_);
  }
  _impl_.camp_data_ = camp_data;
  if (camp_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:servermessage.ServerMsgMonsterAttribute.camp_data)
}
inline ::base::SCampData* ServerMsgMonsterAttribute::release_camp_data() {
  
  ::base::SCampData* temp = _impl_.camp_data_;
  _impl_.camp_data_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::base::SCampData* ServerMsgMonsterAttribute::unsafe_arena_release_camp_data() {
  // @@protoc_insertion_point(field_release:servermessage.ServerMsgMonsterAttribute.camp_data)
  
  ::base::SCampData* temp = _impl_.camp_data_;
  _impl_.camp_data_ = nullptr;
  return temp;
}
inline ::base::SCampData* ServerMsgMonsterAttribute::_internal_mutable_camp_data() {
  
  if (_impl_.camp_data_ == nullptr) {
    auto* p = CreateMaybeMessage<::base::SCampData>(GetArenaForAllocation());
    _impl_.camp_data_ = p;
  }
  return _impl_.camp_data_;
}
inline ::base::SCampData* ServerMsgMonsterAttribute::mutable_camp_data() {
  ::base::SCampData* _msg = _internal_mutable_camp_data();
  // @@protoc_insertion_point(field_mutable:servermessage.ServerMsgMonsterAttribute.camp_data)
  return _msg;
}
inline void ServerMsgMonsterAttribute::set_allocated_camp_data(::base::SCampData* camp_data) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.camp_data_);
  }
  if (camp_data) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(camp_data));
    if (message_arena != submessage_arena) {
      camp_data = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, camp_data, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.camp_data_ = camp_data;
  // @@protoc_insertion_point(field_set_allocated:servermessage.ServerMsgMonsterAttribute.camp_data)
}

// int32 portrait_id = 12;
inline void ServerMsgMonsterAttribute::clear_portrait_id() {
  _impl_.portrait_id_ = 0;
}
inline int32_t ServerMsgMonsterAttribute::_internal_portrait_id() const {
  return _impl_.portrait_id_;
}
inline int32_t ServerMsgMonsterAttribute::portrait_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgMonsterAttribute.portrait_id)
  return _internal_portrait_id();
}
inline void ServerMsgMonsterAttribute::_internal_set_portrait_id(int32_t value) {
  
  _impl_.portrait_id_ = value;
}
inline void ServerMsgMonsterAttribute::set_portrait_id(int32_t value) {
  _internal_set_portrait_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgMonsterAttribute.portrait_id)
}

// int32 model_id = 13;
inline void ServerMsgMonsterAttribute::clear_model_id() {
  _impl_.model_id_ = 0;
}
inline int32_t ServerMsgMonsterAttribute::_internal_model_id() const {
  return _impl_.model_id_;
}
inline int32_t ServerMsgMonsterAttribute::model_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgMonsterAttribute.model_id)
  return _internal_model_id();
}
inline void ServerMsgMonsterAttribute::_internal_set_model_id(int32_t value) {
  
  _impl_.model_id_ = value;
}
inline void ServerMsgMonsterAttribute::set_model_id(int32_t value) {
  _internal_set_model_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgMonsterAttribute.model_id)
}

// int32 mount_id = 14;
inline void ServerMsgMonsterAttribute::clear_mount_id() {
  _impl_.mount_id_ = 0;
}
inline int32_t ServerMsgMonsterAttribute::_internal_mount_id() const {
  return _impl_.mount_id_;
}
inline int32_t ServerMsgMonsterAttribute::mount_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgMonsterAttribute.mount_id)
  return _internal_mount_id();
}
inline void ServerMsgMonsterAttribute::_internal_set_mount_id(int32_t value) {
  
  _impl_.mount_id_ = value;
}
inline void ServerMsgMonsterAttribute::set_mount_id(int32_t value) {
  _internal_set_mount_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgMonsterAttribute.mount_id)
}

// int32 ai_type = 15;
inline void ServerMsgMonsterAttribute::clear_ai_type() {
  _impl_.ai_type_ = 0;
}
inline int32_t ServerMsgMonsterAttribute::_internal_ai_type() const {
  return _impl_.ai_type_;
}
inline int32_t ServerMsgMonsterAttribute::ai_type() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgMonsterAttribute.ai_type)
  return _internal_ai_type();
}
inline void ServerMsgMonsterAttribute::_internal_set_ai_type(int32_t value) {
  
  _impl_.ai_type_ = value;
}
inline void ServerMsgMonsterAttribute::set_ai_type(int32_t value) {
  _internal_set_ai_type(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgMonsterAttribute.ai_type)
}

// string name = 16;
inline void ServerMsgMonsterAttribute::clear_name() {
  _impl_.name_.ClearToEmpty();
}
inline const std::string& ServerMsgMonsterAttribute::name() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgMonsterAttribute.name)
  return _internal_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void ServerMsgMonsterAttribute::set_name(ArgT0&& arg0, ArgT... args) {
 
 _impl_.name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgMonsterAttribute.name)
}
inline std::string* ServerMsgMonsterAttribute::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:servermessage.ServerMsgMonsterAttribute.name)
  return _s;
}
inline const std::string& ServerMsgMonsterAttribute::_internal_name() const {
  return _impl_.name_.Get();
}
inline void ServerMsgMonsterAttribute::_internal_set_name(const std::string& value) {
  
  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* ServerMsgMonsterAttribute::_internal_mutable_name() {
  
  return _impl_.name_.Mutable(GetArenaForAllocation());
}
inline std::string* ServerMsgMonsterAttribute::release_name() {
  // @@protoc_insertion_point(field_release:servermessage.ServerMsgMonsterAttribute.name)
  return _impl_.name_.Release();
}
inline void ServerMsgMonsterAttribute::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  _impl_.name_.SetAllocated(name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:servermessage.ServerMsgMonsterAttribute.name)
}

// string country_title = 17;
inline void ServerMsgMonsterAttribute::clear_country_title() {
  _impl_.country_title_.ClearToEmpty();
}
inline const std::string& ServerMsgMonsterAttribute::country_title() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgMonsterAttribute.country_title)
  return _internal_country_title();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void ServerMsgMonsterAttribute::set_country_title(ArgT0&& arg0, ArgT... args) {
 
 _impl_.country_title_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgMonsterAttribute.country_title)
}
inline std::string* ServerMsgMonsterAttribute::mutable_country_title() {
  std::string* _s = _internal_mutable_country_title();
  // @@protoc_insertion_point(field_mutable:servermessage.ServerMsgMonsterAttribute.country_title)
  return _s;
}
inline const std::string& ServerMsgMonsterAttribute::_internal_country_title() const {
  return _impl_.country_title_.Get();
}
inline void ServerMsgMonsterAttribute::_internal_set_country_title(const std::string& value) {
  
  _impl_.country_title_.Set(value, GetArenaForAllocation());
}
inline std::string* ServerMsgMonsterAttribute::_internal_mutable_country_title() {
  
  return _impl_.country_title_.Mutable(GetArenaForAllocation());
}
inline std::string* ServerMsgMonsterAttribute::release_country_title() {
  // @@protoc_insertion_point(field_release:servermessage.ServerMsgMonsterAttribute.country_title)
  return _impl_.country_title_.Release();
}
inline void ServerMsgMonsterAttribute::set_allocated_country_title(std::string* country_title) {
  if (country_title != nullptr) {
    
  } else {
    
  }
  _impl_.country_title_.SetAllocated(country_title, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.country_title_.IsDefault()) {
    _impl_.country_title_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:servermessage.ServerMsgMonsterAttribute.country_title)
}

// string guild_title = 18;
inline void ServerMsgMonsterAttribute::clear_guild_title() {
  _impl_.guild_title_.ClearToEmpty();
}
inline const std::string& ServerMsgMonsterAttribute::guild_title() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgMonsterAttribute.guild_title)
  return _internal_guild_title();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void ServerMsgMonsterAttribute::set_guild_title(ArgT0&& arg0, ArgT... args) {
 
 _impl_.guild_title_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgMonsterAttribute.guild_title)
}
inline std::string* ServerMsgMonsterAttribute::mutable_guild_title() {
  std::string* _s = _internal_mutable_guild_title();
  // @@protoc_insertion_point(field_mutable:servermessage.ServerMsgMonsterAttribute.guild_title)
  return _s;
}
inline const std::string& ServerMsgMonsterAttribute::_internal_guild_title() const {
  return _impl_.guild_title_.Get();
}
inline void ServerMsgMonsterAttribute::_internal_set_guild_title(const std::string& value) {
  
  _impl_.guild_title_.Set(value, GetArenaForAllocation());
}
inline std::string* ServerMsgMonsterAttribute::_internal_mutable_guild_title() {
  
  return _impl_.guild_title_.Mutable(GetArenaForAllocation());
}
inline std::string* ServerMsgMonsterAttribute::release_guild_title() {
  // @@protoc_insertion_point(field_release:servermessage.ServerMsgMonsterAttribute.guild_title)
  return _impl_.guild_title_.Release();
}
inline void ServerMsgMonsterAttribute::set_allocated_guild_title(std::string* guild_title) {
  if (guild_title != nullptr) {
    
  } else {
    
  }
  _impl_.guild_title_.SetAllocated(guild_title, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.guild_title_.IsDefault()) {
    _impl_.guild_title_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:servermessage.ServerMsgMonsterAttribute.guild_title)
}

// string normal_title = 19;
inline void ServerMsgMonsterAttribute::clear_normal_title() {
  _impl_.normal_title_.ClearToEmpty();
}
inline const std::string& ServerMsgMonsterAttribute::normal_title() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgMonsterAttribute.normal_title)
  return _internal_normal_title();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void ServerMsgMonsterAttribute::set_normal_title(ArgT0&& arg0, ArgT... args) {
 
 _impl_.normal_title_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgMonsterAttribute.normal_title)
}
inline std::string* ServerMsgMonsterAttribute::mutable_normal_title() {
  std::string* _s = _internal_mutable_normal_title();
  // @@protoc_insertion_point(field_mutable:servermessage.ServerMsgMonsterAttribute.normal_title)
  return _s;
}
inline const std::string& ServerMsgMonsterAttribute::_internal_normal_title() const {
  return _impl_.normal_title_.Get();
}
inline void ServerMsgMonsterAttribute::_internal_set_normal_title(const std::string& value) {
  
  _impl_.normal_title_.Set(value, GetArenaForAllocation());
}
inline std::string* ServerMsgMonsterAttribute::_internal_mutable_normal_title() {
  
  return _impl_.normal_title_.Mutable(GetArenaForAllocation());
}
inline std::string* ServerMsgMonsterAttribute::release_normal_title() {
  // @@protoc_insertion_point(field_release:servermessage.ServerMsgMonsterAttribute.normal_title)
  return _impl_.normal_title_.Release();
}
inline void ServerMsgMonsterAttribute::set_allocated_normal_title(std::string* normal_title) {
  if (normal_title != nullptr) {
    
  } else {
    
  }
  _impl_.normal_title_.SetAllocated(normal_title, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.normal_title_.IsDefault()) {
    _impl_.normal_title_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:servermessage.ServerMsgMonsterAttribute.normal_title)
}

// int32 country_title_type = 20;
inline void ServerMsgMonsterAttribute::clear_country_title_type() {
  _impl_.country_title_type_ = 0;
}
inline int32_t ServerMsgMonsterAttribute::_internal_country_title_type() const {
  return _impl_.country_title_type_;
}
inline int32_t ServerMsgMonsterAttribute::country_title_type() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgMonsterAttribute.country_title_type)
  return _internal_country_title_type();
}
inline void ServerMsgMonsterAttribute::_internal_set_country_title_type(int32_t value) {
  
  _impl_.country_title_type_ = value;
}
inline void ServerMsgMonsterAttribute::set_country_title_type(int32_t value) {
  _internal_set_country_title_type(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgMonsterAttribute.country_title_type)
}

// int32 guild_title_type = 21;
inline void ServerMsgMonsterAttribute::clear_guild_title_type() {
  _impl_.guild_title_type_ = 0;
}
inline int32_t ServerMsgMonsterAttribute::_internal_guild_title_type() const {
  return _impl_.guild_title_type_;
}
inline int32_t ServerMsgMonsterAttribute::guild_title_type() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgMonsterAttribute.guild_title_type)
  return _internal_guild_title_type();
}
inline void ServerMsgMonsterAttribute::_internal_set_guild_title_type(int32_t value) {
  
  _impl_.guild_title_type_ = value;
}
inline void ServerMsgMonsterAttribute::set_guild_title_type(int32_t value) {
  _internal_set_guild_title_type(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgMonsterAttribute.guild_title_type)
}

// int32 normal_title_type = 22;
inline void ServerMsgMonsterAttribute::clear_normal_title_type() {
  _impl_.normal_title_type_ = 0;
}
inline int32_t ServerMsgMonsterAttribute::_internal_normal_title_type() const {
  return _impl_.normal_title_type_;
}
inline int32_t ServerMsgMonsterAttribute::normal_title_type() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgMonsterAttribute.normal_title_type)
  return _internal_normal_title_type();
}
inline void ServerMsgMonsterAttribute::_internal_set_normal_title_type(int32_t value) {
  
  _impl_.normal_title_type_ = value;
}
inline void ServerMsgMonsterAttribute::set_normal_title_type(int32_t value) {
  _internal_set_normal_title_type(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgMonsterAttribute.normal_title_type)
}

// uint32 occupant_guid = 23;
inline void ServerMsgMonsterAttribute::clear_occupant_guid() {
  _impl_.occupant_guid_ = 0u;
}
inline uint32_t ServerMsgMonsterAttribute::_internal_occupant_guid() const {
  return _impl_.occupant_guid_;
}
inline uint32_t ServerMsgMonsterAttribute::occupant_guid() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgMonsterAttribute.occupant_guid)
  return _internal_occupant_guid();
}
inline void ServerMsgMonsterAttribute::_internal_set_occupant_guid(uint32_t value) {
  
  _impl_.occupant_guid_ = value;
}
inline void ServerMsgMonsterAttribute::set_occupant_guid(uint32_t value) {
  _internal_set_occupant_guid(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgMonsterAttribute.occupant_guid)
}

// int32 owner_id = 24;
inline void ServerMsgMonsterAttribute::clear_owner_id() {
  _impl_.owner_id_ = 0;
}
inline int32_t ServerMsgMonsterAttribute::_internal_owner_id() const {
  return _impl_.owner_id_;
}
inline int32_t ServerMsgMonsterAttribute::owner_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgMonsterAttribute.owner_id)
  return _internal_owner_id();
}
inline void ServerMsgMonsterAttribute::_internal_set_owner_id(int32_t value) {
  
  _impl_.owner_id_ = value;
}
inline void ServerMsgMonsterAttribute::set_owner_id(int32_t value) {
  _internal_set_owner_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgMonsterAttribute.owner_id)
}

// int32 target_id = 25;
inline void ServerMsgMonsterAttribute::clear_target_id() {
  _impl_.target_id_ = 0;
}
inline int32_t ServerMsgMonsterAttribute::_internal_target_id() const {
  return _impl_.target_id_;
}
inline int32_t ServerMsgMonsterAttribute::target_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgMonsterAttribute.target_id)
  return _internal_target_id();
}
inline void ServerMsgMonsterAttribute::_internal_set_target_id(int32_t value) {
  
  _impl_.target_id_ = value;
}
inline void ServerMsgMonsterAttribute::set_target_id(int32_t value) {
  _internal_set_target_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgMonsterAttribute.target_id)
}

// float dir = 26;
inline void ServerMsgMonsterAttribute::clear_dir() {
  _impl_.dir_ = 0;
}
inline float ServerMsgMonsterAttribute::_internal_dir() const {
  return _impl_.dir_;
}
inline float ServerMsgMonsterAttribute::dir() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgMonsterAttribute.dir)
  return _internal_dir();
}
inline void ServerMsgMonsterAttribute::_internal_set_dir(float value) {
  
  _impl_.dir_ = value;
}
inline void ServerMsgMonsterAttribute::set_dir(float value) {
  _internal_set_dir(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgMonsterAttribute.dir)
}

// int32 ctrl_state = 27;
inline void ServerMsgMonsterAttribute::clear_ctrl_state() {
  _impl_.ctrl_state_ = 0;
}
inline int32_t ServerMsgMonsterAttribute::_internal_ctrl_state() const {
  return _impl_.ctrl_state_;
}
inline int32_t ServerMsgMonsterAttribute::ctrl_state() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgMonsterAttribute.ctrl_state)
  return _internal_ctrl_state();
}
inline void ServerMsgMonsterAttribute::_internal_set_ctrl_state(int32_t value) {
  
  _impl_.ctrl_state_ = value;
}
inline void ServerMsgMonsterAttribute::set_ctrl_state(int32_t value) {
  _internal_set_ctrl_state(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgMonsterAttribute.ctrl_state)
}

// float scale = 28;
inline void ServerMsgMonsterAttribute::clear_scale() {
  _impl_.scale_ = 0;
}
inline float ServerMsgMonsterAttribute::_internal_scale() const {
  return _impl_.scale_;
}
inline float ServerMsgMonsterAttribute::scale() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgMonsterAttribute.scale)
  return _internal_scale();
}
inline void ServerMsgMonsterAttribute::_internal_set_scale(float value) {
  
  _impl_.scale_ = value;
}
inline void ServerMsgMonsterAttribute::set_scale(float value) {
  _internal_set_scale(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgMonsterAttribute.scale)
}

// -------------------------------------------------------------------

// ServerMsgNewBeastie

// uint32 object_id = 1;
inline void ServerMsgNewBeastie::clear_object_id() {
  _impl_.object_id_ = 0u;
}
inline uint32_t ServerMsgNewBeastie::_internal_object_id() const {
  return _impl_.object_id_;
}
inline uint32_t ServerMsgNewBeastie::object_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgNewBeastie.object_id)
  return _internal_object_id();
}
inline void ServerMsgNewBeastie::_internal_set_object_id(uint32_t value) {
  
  _impl_.object_id_ = value;
}
inline void ServerMsgNewBeastie::set_object_id(uint32_t value) {
  _internal_set_object_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgNewBeastie.object_id)
}

// string name = 2;
inline void ServerMsgNewBeastie::clear_name() {
  _impl_.name_.ClearToEmpty();
}
inline const std::string& ServerMsgNewBeastie::name() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgNewBeastie.name)
  return _internal_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void ServerMsgNewBeastie::set_name(ArgT0&& arg0, ArgT... args) {
 
 _impl_.name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgNewBeastie.name)
}
inline std::string* ServerMsgNewBeastie::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:servermessage.ServerMsgNewBeastie.name)
  return _s;
}
inline const std::string& ServerMsgNewBeastie::_internal_name() const {
  return _impl_.name_.Get();
}
inline void ServerMsgNewBeastie::_internal_set_name(const std::string& value) {
  
  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* ServerMsgNewBeastie::_internal_mutable_name() {
  
  return _impl_.name_.Mutable(GetArenaForAllocation());
}
inline std::string* ServerMsgNewBeastie::release_name() {
  // @@protoc_insertion_point(field_release:servermessage.ServerMsgNewBeastie.name)
  return _impl_.name_.Release();
}
inline void ServerMsgNewBeastie::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  _impl_.name_.SetAllocated(name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:servermessage.ServerMsgNewBeastie.name)
}

// float position_x = 3;
inline void ServerMsgNewBeastie::clear_position_x() {
  _impl_.position_x_ = 0;
}
inline float ServerMsgNewBeastie::_internal_position_x() const {
  return _impl_.position_x_;
}
inline float ServerMsgNewBeastie::position_x() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgNewBeastie.position_x)
  return _internal_position_x();
}
inline void ServerMsgNewBeastie::_internal_set_position_x(float value) {
  
  _impl_.position_x_ = value;
}
inline void ServerMsgNewBeastie::set_position_x(float value) {
  _internal_set_position_x(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgNewBeastie.position_x)
}

// float position_z = 4;
inline void ServerMsgNewBeastie::clear_position_z() {
  _impl_.position_z_ = 0;
}
inline float ServerMsgNewBeastie::_internal_position_z() const {
  return _impl_.position_z_;
}
inline float ServerMsgNewBeastie::position_z() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgNewBeastie.position_z)
  return _internal_position_z();
}
inline void ServerMsgNewBeastie::_internal_set_position_z(float value) {
  
  _impl_.position_z_ = value;
}
inline void ServerMsgNewBeastie::set_position_z(float value) {
  _internal_set_position_z(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgNewBeastie.position_z)
}

// float dir = 5;
inline void ServerMsgNewBeastie::clear_dir() {
  _impl_.dir_ = 0;
}
inline float ServerMsgNewBeastie::_internal_dir() const {
  return _impl_.dir_;
}
inline float ServerMsgNewBeastie::dir() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgNewBeastie.dir)
  return _internal_dir();
}
inline void ServerMsgNewBeastie::_internal_set_dir(float value) {
  
  _impl_.dir_ = value;
}
inline void ServerMsgNewBeastie::set_dir(float value) {
  _internal_set_dir(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgNewBeastie.dir)
}

// float move_speed = 6;
inline void ServerMsgNewBeastie::clear_move_speed() {
  _impl_.move_speed_ = 0;
}
inline float ServerMsgNewBeastie::_internal_move_speed() const {
  return _impl_.move_speed_;
}
inline float ServerMsgNewBeastie::move_speed() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgNewBeastie.move_speed)
  return _internal_move_speed();
}
inline void ServerMsgNewBeastie::_internal_set_move_speed(float value) {
  
  _impl_.move_speed_ = value;
}
inline void ServerMsgNewBeastie::set_move_speed(float value) {
  _internal_set_move_speed(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgNewBeastie.move_speed)
}

// bool moving = 7;
inline void ServerMsgNewBeastie::clear_moving() {
  _impl_.moving_ = false;
}
inline bool ServerMsgNewBeastie::_internal_moving() const {
  return _impl_.moving_;
}
inline bool ServerMsgNewBeastie::moving() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgNewBeastie.moving)
  return _internal_moving();
}
inline void ServerMsgNewBeastie::_internal_set_moving(bool value) {
  
  _impl_.moving_ = value;
}
inline void ServerMsgNewBeastie::set_moving(bool value) {
  _internal_set_moving(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgNewBeastie.moving)
}

// int32 handle_id = 8;
inline void ServerMsgNewBeastie::clear_handle_id() {
  _impl_.handle_id_ = 0;
}
inline int32_t ServerMsgNewBeastie::_internal_handle_id() const {
  return _impl_.handle_id_;
}
inline int32_t ServerMsgNewBeastie::handle_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgNewBeastie.handle_id)
  return _internal_handle_id();
}
inline void ServerMsgNewBeastie::_internal_set_handle_id(int32_t value) {
  
  _impl_.handle_id_ = value;
}
inline void ServerMsgNewBeastie::set_handle_id(int32_t value) {
  _internal_set_handle_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgNewBeastie.handle_id)
}

// float target_x = 9;
inline void ServerMsgNewBeastie::clear_target_x() {
  _impl_.target_x_ = 0;
}
inline float ServerMsgNewBeastie::_internal_target_x() const {
  return _impl_.target_x_;
}
inline float ServerMsgNewBeastie::target_x() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgNewBeastie.target_x)
  return _internal_target_x();
}
inline void ServerMsgNewBeastie::_internal_set_target_x(float value) {
  
  _impl_.target_x_ = value;
}
inline void ServerMsgNewBeastie::set_target_x(float value) {
  _internal_set_target_x(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgNewBeastie.target_x)
}

// float target_z = 10;
inline void ServerMsgNewBeastie::clear_target_z() {
  _impl_.target_z_ = 0;
}
inline float ServerMsgNewBeastie::_internal_target_z() const {
  return _impl_.target_z_;
}
inline float ServerMsgNewBeastie::target_z() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgNewBeastie.target_z)
  return _internal_target_z();
}
inline void ServerMsgNewBeastie::_internal_set_target_z(float value) {
  
  _impl_.target_z_ = value;
}
inline void ServerMsgNewBeastie::set_target_z(float value) {
  _internal_set_target_z(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgNewBeastie.target_z)
}

// -------------------------------------------------------------------

// ServerMsgNewItem

// int32 object_id = 1;
inline void ServerMsgNewItem::clear_object_id() {
  _impl_.object_id_ = 0;
}
inline int32_t ServerMsgNewItem::_internal_object_id() const {
  return _impl_.object_id_;
}
inline int32_t ServerMsgNewItem::object_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgNewItem.object_id)
  return _internal_object_id();
}
inline void ServerMsgNewItem::_internal_set_object_id(int32_t value) {
  
  _impl_.object_id_ = value;
}
inline void ServerMsgNewItem::set_object_id(int32_t value) {
  _internal_set_object_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgNewItem.object_id)
}

// int32 scene_id = 2;
inline void ServerMsgNewItem::clear_scene_id() {
  _impl_.scene_id_ = 0;
}
inline int32_t ServerMsgNewItem::_internal_scene_id() const {
  return _impl_.scene_id_;
}
inline int32_t ServerMsgNewItem::scene_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgNewItem.scene_id)
  return _internal_scene_id();
}
inline void ServerMsgNewItem::_internal_set_scene_id(int32_t value) {
  
  _impl_.scene_id_ = value;
}
inline void ServerMsgNewItem::set_scene_id(int32_t value) {
  _internal_set_scene_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgNewItem.scene_id)
}

// int32 item_index = 3;
inline void ServerMsgNewItem::clear_item_index() {
  _impl_.item_index_ = 0;
}
inline int32_t ServerMsgNewItem::_internal_item_index() const {
  return _impl_.item_index_;
}
inline int32_t ServerMsgNewItem::item_index() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgNewItem.item_index)
  return _internal_item_index();
}
inline void ServerMsgNewItem::_internal_set_item_index(int32_t value) {
  
  _impl_.item_index_ = value;
}
inline void ServerMsgNewItem::set_item_index(int32_t value) {
  _internal_set_item_index(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgNewItem.item_index)
}

// int32 item_count = 4;
inline void ServerMsgNewItem::clear_item_count() {
  _impl_.item_count_ = 0;
}
inline int32_t ServerMsgNewItem::_internal_item_count() const {
  return _impl_.item_count_;
}
inline int32_t ServerMsgNewItem::item_count() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgNewItem.item_count)
  return _internal_item_count();
}
inline void ServerMsgNewItem::_internal_set_item_count(int32_t value) {
  
  _impl_.item_count_ = value;
}
inline void ServerMsgNewItem::set_item_count(int32_t value) {
  _internal_set_item_count(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgNewItem.item_count)
}

// float position_x = 5;
inline void ServerMsgNewItem::clear_position_x() {
  _impl_.position_x_ = 0;
}
inline float ServerMsgNewItem::_internal_position_x() const {
  return _impl_.position_x_;
}
inline float ServerMsgNewItem::position_x() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgNewItem.position_x)
  return _internal_position_x();
}
inline void ServerMsgNewItem::_internal_set_position_x(float value) {
  
  _impl_.position_x_ = value;
}
inline void ServerMsgNewItem::set_position_x(float value) {
  _internal_set_position_x(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgNewItem.position_x)
}

// float position_z = 6;
inline void ServerMsgNewItem::clear_position_z() {
  _impl_.position_z_ = 0;
}
inline float ServerMsgNewItem::_internal_position_z() const {
  return _impl_.position_z_;
}
inline float ServerMsgNewItem::position_z() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgNewItem.position_z)
  return _internal_position_z();
}
inline void ServerMsgNewItem::_internal_set_position_z(float value) {
  
  _impl_.position_z_ = value;
}
inline void ServerMsgNewItem::set_position_z(float value) {
  _internal_set_position_z(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgNewItem.position_z)
}

// -------------------------------------------------------------------

// ServerMsgNewItemBox

// int32 object_id = 1;
inline void ServerMsgNewItemBox::clear_object_id() {
  _impl_.object_id_ = 0;
}
inline int32_t ServerMsgNewItemBox::_internal_object_id() const {
  return _impl_.object_id_;
}
inline int32_t ServerMsgNewItemBox::object_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgNewItemBox.object_id)
  return _internal_object_id();
}
inline void ServerMsgNewItemBox::_internal_set_object_id(int32_t value) {
  
  _impl_.object_id_ = value;
}
inline void ServerMsgNewItemBox::set_object_id(int32_t value) {
  _internal_set_object_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgNewItemBox.object_id)
}

// int32 type = 2;
inline void ServerMsgNewItemBox::clear_type() {
  _impl_.type_ = 0;
}
inline int32_t ServerMsgNewItemBox::_internal_type() const {
  return _impl_.type_;
}
inline int32_t ServerMsgNewItemBox::type() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgNewItemBox.type)
  return _internal_type();
}
inline void ServerMsgNewItemBox::_internal_set_type(int32_t value) {
  
  _impl_.type_ = value;
}
inline void ServerMsgNewItemBox::set_type(int32_t value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgNewItemBox.type)
}

// uint32 owner_id = 3;
inline void ServerMsgNewItemBox::clear_owner_id() {
  _impl_.owner_id_ = 0u;
}
inline uint32_t ServerMsgNewItemBox::_internal_owner_id() const {
  return _impl_.owner_id_;
}
inline uint32_t ServerMsgNewItemBox::owner_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgNewItemBox.owner_id)
  return _internal_owner_id();
}
inline void ServerMsgNewItemBox::_internal_set_owner_id(uint32_t value) {
  
  _impl_.owner_id_ = value;
}
inline void ServerMsgNewItemBox::set_owner_id(uint32_t value) {
  _internal_set_owner_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgNewItemBox.owner_id)
}

// int32 scene_id = 4;
inline void ServerMsgNewItemBox::clear_scene_id() {
  _impl_.scene_id_ = 0;
}
inline int32_t ServerMsgNewItemBox::_internal_scene_id() const {
  return _impl_.scene_id_;
}
inline int32_t ServerMsgNewItemBox::scene_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgNewItemBox.scene_id)
  return _internal_scene_id();
}
inline void ServerMsgNewItemBox::_internal_set_scene_id(int32_t value) {
  
  _impl_.scene_id_ = value;
}
inline void ServerMsgNewItemBox::set_scene_id(int32_t value) {
  _internal_set_scene_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgNewItemBox.scene_id)
}

// .base.GLPos pos = 5;
inline bool ServerMsgNewItemBox::_internal_has_pos() const {
  return this != internal_default_instance() && _impl_.pos_ != nullptr;
}
inline bool ServerMsgNewItemBox::has_pos() const {
  return _internal_has_pos();
}
inline const ::base::GLPos& ServerMsgNewItemBox::_internal_pos() const {
  const ::base::GLPos* p = _impl_.pos_;
  return p != nullptr ? *p : reinterpret_cast<const ::base::GLPos&>(
      ::base::_GLPos_default_instance_);
}
inline const ::base::GLPos& ServerMsgNewItemBox::pos() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgNewItemBox.pos)
  return _internal_pos();
}
inline void ServerMsgNewItemBox::unsafe_arena_set_allocated_pos(
    ::base::GLPos* pos) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.pos_);
  }
  _impl_.pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:servermessage.ServerMsgNewItemBox.pos)
}
inline ::base::GLPos* ServerMsgNewItemBox::release_pos() {
  
  ::base::GLPos* temp = _impl_.pos_;
  _impl_.pos_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::base::GLPos* ServerMsgNewItemBox::unsafe_arena_release_pos() {
  // @@protoc_insertion_point(field_release:servermessage.ServerMsgNewItemBox.pos)
  
  ::base::GLPos* temp = _impl_.pos_;
  _impl_.pos_ = nullptr;
  return temp;
}
inline ::base::GLPos* ServerMsgNewItemBox::_internal_mutable_pos() {
  
  if (_impl_.pos_ == nullptr) {
    auto* p = CreateMaybeMessage<::base::GLPos>(GetArenaForAllocation());
    _impl_.pos_ = p;
  }
  return _impl_.pos_;
}
inline ::base::GLPos* ServerMsgNewItemBox::mutable_pos() {
  ::base::GLPos* _msg = _internal_mutable_pos();
  // @@protoc_insertion_point(field_mutable:servermessage.ServerMsgNewItemBox.pos)
  return _msg;
}
inline void ServerMsgNewItemBox::set_allocated_pos(::base::GLPos* pos) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.pos_);
  }
  if (pos) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(pos));
    if (message_arena != submessage_arena) {
      pos = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, pos, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.pos_ = pos;
  // @@protoc_insertion_point(field_set_allocated:servermessage.ServerMsgNewItemBox.pos)
}

// int32 drop_monster_id = 6;
inline void ServerMsgNewItemBox::clear_drop_monster_id() {
  _impl_.drop_monster_id_ = 0;
}
inline int32_t ServerMsgNewItemBox::_internal_drop_monster_id() const {
  return _impl_.drop_monster_id_;
}
inline int32_t ServerMsgNewItemBox::drop_monster_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgNewItemBox.drop_monster_id)
  return _internal_drop_monster_id();
}
inline void ServerMsgNewItemBox::_internal_set_drop_monster_id(int32_t value) {
  
  _impl_.drop_monster_id_ = value;
}
inline void ServerMsgNewItemBox::set_drop_monster_id(int32_t value) {
  _internal_set_drop_monster_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgNewItemBox.drop_monster_id)
}

// -------------------------------------------------------------------

// ServerMsgNewMonster

// uint32 object_id = 1;
inline void ServerMsgNewMonster::clear_object_id() {
  _impl_.object_id_ = 0u;
}
inline uint32_t ServerMsgNewMonster::_internal_object_id() const {
  return _impl_.object_id_;
}
inline uint32_t ServerMsgNewMonster::object_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgNewMonster.object_id)
  return _internal_object_id();
}
inline void ServerMsgNewMonster::_internal_set_object_id(uint32_t value) {
  
  _impl_.object_id_ = value;
}
inline void ServerMsgNewMonster::set_object_id(uint32_t value) {
  _internal_set_object_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgNewMonster.object_id)
}

// string name = 2;
inline void ServerMsgNewMonster::clear_name() {
  _impl_.name_.ClearToEmpty();
}
inline const std::string& ServerMsgNewMonster::name() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgNewMonster.name)
  return _internal_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void ServerMsgNewMonster::set_name(ArgT0&& arg0, ArgT... args) {
 
 _impl_.name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgNewMonster.name)
}
inline std::string* ServerMsgNewMonster::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:servermessage.ServerMsgNewMonster.name)
  return _s;
}
inline const std::string& ServerMsgNewMonster::_internal_name() const {
  return _impl_.name_.Get();
}
inline void ServerMsgNewMonster::_internal_set_name(const std::string& value) {
  
  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* ServerMsgNewMonster::_internal_mutable_name() {
  
  return _impl_.name_.Mutable(GetArenaForAllocation());
}
inline std::string* ServerMsgNewMonster::release_name() {
  // @@protoc_insertion_point(field_release:servermessage.ServerMsgNewMonster.name)
  return _impl_.name_.Release();
}
inline void ServerMsgNewMonster::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  _impl_.name_.SetAllocated(name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:servermessage.ServerMsgNewMonster.name)
}

// float position_x = 3;
inline void ServerMsgNewMonster::clear_position_x() {
  _impl_.position_x_ = 0;
}
inline float ServerMsgNewMonster::_internal_position_x() const {
  return _impl_.position_x_;
}
inline float ServerMsgNewMonster::position_x() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgNewMonster.position_x)
  return _internal_position_x();
}
inline void ServerMsgNewMonster::_internal_set_position_x(float value) {
  
  _impl_.position_x_ = value;
}
inline void ServerMsgNewMonster::set_position_x(float value) {
  _internal_set_position_x(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgNewMonster.position_x)
}

// float positiion_y = 4;
inline void ServerMsgNewMonster::clear_positiion_y() {
  _impl_.positiion_y_ = 0;
}
inline float ServerMsgNewMonster::_internal_positiion_y() const {
  return _impl_.positiion_y_;
}
inline float ServerMsgNewMonster::positiion_y() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgNewMonster.positiion_y)
  return _internal_positiion_y();
}
inline void ServerMsgNewMonster::_internal_set_positiion_y(float value) {
  
  _impl_.positiion_y_ = value;
}
inline void ServerMsgNewMonster::set_positiion_y(float value) {
  _internal_set_positiion_y(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgNewMonster.positiion_y)
}

// float dir = 5;
inline void ServerMsgNewMonster::clear_dir() {
  _impl_.dir_ = 0;
}
inline float ServerMsgNewMonster::_internal_dir() const {
  return _impl_.dir_;
}
inline float ServerMsgNewMonster::dir() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgNewMonster.dir)
  return _internal_dir();
}
inline void ServerMsgNewMonster::_internal_set_dir(float value) {
  
  _impl_.dir_ = value;
}
inline void ServerMsgNewMonster::set_dir(float value) {
  _internal_set_dir(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgNewMonster.dir)
}

// float move_speed = 6;
inline void ServerMsgNewMonster::clear_move_speed() {
  _impl_.move_speed_ = 0;
}
inline float ServerMsgNewMonster::_internal_move_speed() const {
  return _impl_.move_speed_;
}
inline float ServerMsgNewMonster::move_speed() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgNewMonster.move_speed)
  return _internal_move_speed();
}
inline void ServerMsgNewMonster::_internal_set_move_speed(float value) {
  
  _impl_.move_speed_ = value;
}
inline void ServerMsgNewMonster::set_move_speed(float value) {
  _internal_set_move_speed(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgNewMonster.move_speed)
}

// float horse_id = 7;
inline void ServerMsgNewMonster::clear_horse_id() {
  _impl_.horse_id_ = 0;
}
inline float ServerMsgNewMonster::_internal_horse_id() const {
  return _impl_.horse_id_;
}
inline float ServerMsgNewMonster::horse_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgNewMonster.horse_id)
  return _internal_horse_id();
}
inline void ServerMsgNewMonster::_internal_set_horse_id(float value) {
  
  _impl_.horse_id_ = value;
}
inline void ServerMsgNewMonster::set_horse_id(float value) {
  _internal_set_horse_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgNewMonster.horse_id)
}

// float weapon_id = 8;
inline void ServerMsgNewMonster::clear_weapon_id() {
  _impl_.weapon_id_ = 0;
}
inline float ServerMsgNewMonster::_internal_weapon_id() const {
  return _impl_.weapon_id_;
}
inline float ServerMsgNewMonster::weapon_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgNewMonster.weapon_id)
  return _internal_weapon_id();
}
inline void ServerMsgNewMonster::_internal_set_weapon_id(float value) {
  
  _impl_.weapon_id_ = value;
}
inline void ServerMsgNewMonster::set_weapon_id(float value) {
  _internal_set_weapon_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgNewMonster.weapon_id)
}

// int32 monster_type = 9;
inline void ServerMsgNewMonster::clear_monster_type() {
  _impl_.monster_type_ = 0;
}
inline int32_t ServerMsgNewMonster::_internal_monster_type() const {
  return _impl_.monster_type_;
}
inline int32_t ServerMsgNewMonster::monster_type() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgNewMonster.monster_type)
  return _internal_monster_type();
}
inline void ServerMsgNewMonster::_internal_set_monster_type(int32_t value) {
  
  _impl_.monster_type_ = value;
}
inline void ServerMsgNewMonster::set_monster_type(int32_t value) {
  _internal_set_monster_type(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgNewMonster.monster_type)
}

// uint32 guid = 10;
inline void ServerMsgNewMonster::clear_guid() {
  _impl_.guid_ = 0u;
}
inline uint32_t ServerMsgNewMonster::_internal_guid() const {
  return _impl_.guid_;
}
inline uint32_t ServerMsgNewMonster::guid() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgNewMonster.guid)
  return _internal_guid();
}
inline void ServerMsgNewMonster::_internal_set_guid(uint32_t value) {
  
  _impl_.guid_ = value;
}
inline void ServerMsgNewMonster::set_guid(uint32_t value) {
  _internal_set_guid(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgNewMonster.guid)
}

// int32 race_id = 11;
inline void ServerMsgNewMonster::clear_race_id() {
  _impl_.race_id_ = 0;
}
inline int32_t ServerMsgNewMonster::_internal_race_id() const {
  return _impl_.race_id_;
}
inline int32_t ServerMsgNewMonster::race_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgNewMonster.race_id)
  return _internal_race_id();
}
inline void ServerMsgNewMonster::_internal_set_race_id(int32_t value) {
  
  _impl_.race_id_ = value;
}
inline void ServerMsgNewMonster::set_race_id(int32_t value) {
  _internal_set_race_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgNewMonster.race_id)
}

// int32 camp_id = 12;
inline void ServerMsgNewMonster::clear_camp_id() {
  _impl_.camp_id_ = 0;
}
inline int32_t ServerMsgNewMonster::_internal_camp_id() const {
  return _impl_.camp_id_;
}
inline int32_t ServerMsgNewMonster::camp_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgNewMonster.camp_id)
  return _internal_camp_id();
}
inline void ServerMsgNewMonster::_internal_set_camp_id(int32_t value) {
  
  _impl_.camp_id_ = value;
}
inline void ServerMsgNewMonster::set_camp_id(int32_t value) {
  _internal_set_camp_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgNewMonster.camp_id)
}

// -------------------------------------------------------------------

// ServerMsgNotifyEquip

// int32 bag_index = 1;
inline void ServerMsgNotifyEquip::clear_bag_index() {
  _impl_.bag_index_ = 0;
}
inline int32_t ServerMsgNotifyEquip::_internal_bag_index() const {
  return _impl_.bag_index_;
}
inline int32_t ServerMsgNotifyEquip::bag_index() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgNotifyEquip.bag_index)
  return _internal_bag_index();
}
inline void ServerMsgNotifyEquip::_internal_set_bag_index(int32_t value) {
  
  _impl_.bag_index_ = value;
}
inline void ServerMsgNotifyEquip::set_bag_index(int32_t value) {
  _internal_set_bag_index(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgNotifyEquip.bag_index)
}

// .base.SItem item = 2;
inline bool ServerMsgNotifyEquip::_internal_has_item() const {
  return this != internal_default_instance() && _impl_.item_ != nullptr;
}
inline bool ServerMsgNotifyEquip::has_item() const {
  return _internal_has_item();
}
inline const ::base::SItem& ServerMsgNotifyEquip::_internal_item() const {
  const ::base::SItem* p = _impl_.item_;
  return p != nullptr ? *p : reinterpret_cast<const ::base::SItem&>(
      ::base::_SItem_default_instance_);
}
inline const ::base::SItem& ServerMsgNotifyEquip::item() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgNotifyEquip.item)
  return _internal_item();
}
inline void ServerMsgNotifyEquip::unsafe_arena_set_allocated_item(
    ::base::SItem* item) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.item_);
  }
  _impl_.item_ = item;
  if (item) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:servermessage.ServerMsgNotifyEquip.item)
}
inline ::base::SItem* ServerMsgNotifyEquip::release_item() {
  
  ::base::SItem* temp = _impl_.item_;
  _impl_.item_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::base::SItem* ServerMsgNotifyEquip::unsafe_arena_release_item() {
  // @@protoc_insertion_point(field_release:servermessage.ServerMsgNotifyEquip.item)
  
  ::base::SItem* temp = _impl_.item_;
  _impl_.item_ = nullptr;
  return temp;
}
inline ::base::SItem* ServerMsgNotifyEquip::_internal_mutable_item() {
  
  if (_impl_.item_ == nullptr) {
    auto* p = CreateMaybeMessage<::base::SItem>(GetArenaForAllocation());
    _impl_.item_ = p;
  }
  return _impl_.item_;
}
inline ::base::SItem* ServerMsgNotifyEquip::mutable_item() {
  ::base::SItem* _msg = _internal_mutable_item();
  // @@protoc_insertion_point(field_mutable:servermessage.ServerMsgNotifyEquip.item)
  return _msg;
}
inline void ServerMsgNotifyEquip::set_allocated_item(::base::SItem* item) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.item_);
  }
  if (item) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(item));
    if (message_arena != submessage_arena) {
      item = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, item, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.item_ = item;
  // @@protoc_insertion_point(field_set_allocated:servermessage.ServerMsgNotifyEquip.item)
}

// -------------------------------------------------------------------

// ServerMsgOperateResult

// int32 player_id = 1;
inline void ServerMsgOperateResult::clear_player_id() {
  _impl_.player_id_ = 0;
}
inline int32_t ServerMsgOperateResult::_internal_player_id() const {
  return _impl_.player_id_;
}
inline int32_t ServerMsgOperateResult::player_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgOperateResult.player_id)
  return _internal_player_id();
}
inline void ServerMsgOperateResult::_internal_set_player_id(int32_t value) {
  
  _impl_.player_id_ = value;
}
inline void ServerMsgOperateResult::set_player_id(int32_t value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgOperateResult.player_id)
}

// int32 map_id = 2;
inline void ServerMsgOperateResult::clear_map_id() {
  _impl_.map_id_ = 0;
}
inline int32_t ServerMsgOperateResult::_internal_map_id() const {
  return _impl_.map_id_;
}
inline int32_t ServerMsgOperateResult::map_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgOperateResult.map_id)
  return _internal_map_id();
}
inline void ServerMsgOperateResult::_internal_set_map_id(int32_t value) {
  
  _impl_.map_id_ = value;
}
inline void ServerMsgOperateResult::set_map_id(int32_t value) {
  _internal_set_map_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgOperateResult.map_id)
}

// int32 res_type = 3;
inline void ServerMsgOperateResult::clear_res_type() {
  _impl_.res_type_ = 0;
}
inline int32_t ServerMsgOperateResult::_internal_res_type() const {
  return _impl_.res_type_;
}
inline int32_t ServerMsgOperateResult::res_type() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgOperateResult.res_type)
  return _internal_res_type();
}
inline void ServerMsgOperateResult::_internal_set_res_type(int32_t value) {
  
  _impl_.res_type_ = value;
}
inline void ServerMsgOperateResult::set_res_type(int32_t value) {
  _internal_set_res_type(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgOperateResult.res_type)
}

// int32 result_code = 4;
inline void ServerMsgOperateResult::clear_result_code() {
  _impl_.result_code_ = 0;
}
inline int32_t ServerMsgOperateResult::_internal_result_code() const {
  return _impl_.result_code_;
}
inline int32_t ServerMsgOperateResult::result_code() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgOperateResult.result_code)
  return _internal_result_code();
}
inline void ServerMsgOperateResult::_internal_set_result_code(int32_t value) {
  
  _impl_.result_code_ = value;
}
inline void ServerMsgOperateResult::set_result_code(int32_t value) {
  _internal_set_result_code(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgOperateResult.result_code)
}

// -------------------------------------------------------------------

// ServerMsgPickItemResult

// int32 object_id = 1;
inline void ServerMsgPickItemResult::clear_object_id() {
  _impl_.object_id_ = 0;
}
inline int32_t ServerMsgPickItemResult::_internal_object_id() const {
  return _impl_.object_id_;
}
inline int32_t ServerMsgPickItemResult::object_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgPickItemResult.object_id)
  return _internal_object_id();
}
inline void ServerMsgPickItemResult::_internal_set_object_id(int32_t value) {
  
  _impl_.object_id_ = value;
}
inline void ServerMsgPickItemResult::set_object_id(int32_t value) {
  _internal_set_object_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgPickItemResult.object_id)
}

// int32 result_code = 2;
inline void ServerMsgPickItemResult::clear_result_code() {
  _impl_.result_code_ = 0;
}
inline int32_t ServerMsgPickItemResult::_internal_result_code() const {
  return _impl_.result_code_;
}
inline int32_t ServerMsgPickItemResult::result_code() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgPickItemResult.result_code)
  return _internal_result_code();
}
inline void ServerMsgPickItemResult::_internal_set_result_code(int32_t value) {
  
  _impl_.result_code_ = value;
}
inline void ServerMsgPickItemResult::set_result_code(int32_t value) {
  _internal_set_result_code(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgPickItemResult.result_code)
}

// -------------------------------------------------------------------

// ServerMsgQueryEventResult

// uint32 object_id = 1;
inline void ServerMsgQueryEventResult::clear_object_id() {
  _impl_.object_id_ = 0u;
}
inline uint32_t ServerMsgQueryEventResult::_internal_object_id() const {
  return _impl_.object_id_;
}
inline uint32_t ServerMsgQueryEventResult::object_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgQueryEventResult.object_id)
  return _internal_object_id();
}
inline void ServerMsgQueryEventResult::_internal_set_object_id(uint32_t value) {
  
  _impl_.object_id_ = value;
}
inline void ServerMsgQueryEventResult::set_object_id(uint32_t value) {
  _internal_set_object_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgQueryEventResult.object_id)
}

// -------------------------------------------------------------------

// ServerMsgQuestList

// int32 player_id = 1;
inline void ServerMsgQuestList::clear_player_id() {
  _impl_.player_id_ = 0;
}
inline int32_t ServerMsgQuestList::_internal_player_id() const {
  return _impl_.player_id_;
}
inline int32_t ServerMsgQuestList::player_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgQuestList.player_id)
  return _internal_player_id();
}
inline void ServerMsgQuestList::_internal_set_player_id(int32_t value) {
  
  _impl_.player_id_ = value;
}
inline void ServerMsgQuestList::set_player_id(int32_t value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgQuestList.player_id)
}

// .base.SArchiveLoader_Quest quest_list = 2;
inline bool ServerMsgQuestList::_internal_has_quest_list() const {
  return this != internal_default_instance() && _impl_.quest_list_ != nullptr;
}
inline bool ServerMsgQuestList::has_quest_list() const {
  return _internal_has_quest_list();
}
inline const ::base::SArchiveLoader_Quest& ServerMsgQuestList::_internal_quest_list() const {
  const ::base::SArchiveLoader_Quest* p = _impl_.quest_list_;
  return p != nullptr ? *p : reinterpret_cast<const ::base::SArchiveLoader_Quest&>(
      ::base::_SArchiveLoader_Quest_default_instance_);
}
inline const ::base::SArchiveLoader_Quest& ServerMsgQuestList::quest_list() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgQuestList.quest_list)
  return _internal_quest_list();
}
inline void ServerMsgQuestList::unsafe_arena_set_allocated_quest_list(
    ::base::SArchiveLoader_Quest* quest_list) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.quest_list_);
  }
  _impl_.quest_list_ = quest_list;
  if (quest_list) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:servermessage.ServerMsgQuestList.quest_list)
}
inline ::base::SArchiveLoader_Quest* ServerMsgQuestList::release_quest_list() {
  
  ::base::SArchiveLoader_Quest* temp = _impl_.quest_list_;
  _impl_.quest_list_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::base::SArchiveLoader_Quest* ServerMsgQuestList::unsafe_arena_release_quest_list() {
  // @@protoc_insertion_point(field_release:servermessage.ServerMsgQuestList.quest_list)
  
  ::base::SArchiveLoader_Quest* temp = _impl_.quest_list_;
  _impl_.quest_list_ = nullptr;
  return temp;
}
inline ::base::SArchiveLoader_Quest* ServerMsgQuestList::_internal_mutable_quest_list() {
  
  if (_impl_.quest_list_ == nullptr) {
    auto* p = CreateMaybeMessage<::base::SArchiveLoader_Quest>(GetArenaForAllocation());
    _impl_.quest_list_ = p;
  }
  return _impl_.quest_list_;
}
inline ::base::SArchiveLoader_Quest* ServerMsgQuestList::mutable_quest_list() {
  ::base::SArchiveLoader_Quest* _msg = _internal_mutable_quest_list();
  // @@protoc_insertion_point(field_mutable:servermessage.ServerMsgQuestList.quest_list)
  return _msg;
}
inline void ServerMsgQuestList::set_allocated_quest_list(::base::SArchiveLoader_Quest* quest_list) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.quest_list_);
  }
  if (quest_list) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(quest_list));
    if (message_arena != submessage_arena) {
      quest_list = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, quest_list, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.quest_list_ = quest_list;
  // @@protoc_insertion_point(field_set_allocated:servermessage.ServerMsgQuestList.quest_list)
}

// -------------------------------------------------------------------

// ServerMsgQuestListRefresh

// int32 object_id = 1;
inline void ServerMsgQuestListRefresh::clear_object_id() {
  _impl_.object_id_ = 0;
}
inline int32_t ServerMsgQuestListRefresh::_internal_object_id() const {
  return _impl_.object_id_;
}
inline int32_t ServerMsgQuestListRefresh::object_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgQuestListRefresh.object_id)
  return _internal_object_id();
}
inline void ServerMsgQuestListRefresh::_internal_set_object_id(int32_t value) {
  
  _impl_.object_id_ = value;
}
inline void ServerMsgQuestListRefresh::set_object_id(int32_t value) {
  _internal_set_object_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgQuestListRefresh.object_id)
}

// int32 scene_id = 2;
inline void ServerMsgQuestListRefresh::clear_scene_id() {
  _impl_.scene_id_ = 0;
}
inline int32_t ServerMsgQuestListRefresh::_internal_scene_id() const {
  return _impl_.scene_id_;
}
inline int32_t ServerMsgQuestListRefresh::scene_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgQuestListRefresh.scene_id)
  return _internal_scene_id();
}
inline void ServerMsgQuestListRefresh::_internal_set_scene_id(int32_t value) {
  
  _impl_.scene_id_ = value;
}
inline void ServerMsgQuestListRefresh::set_scene_id(int32_t value) {
  _internal_set_scene_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgQuestListRefresh.scene_id)
}

// -------------------------------------------------------------------

// ServerMsgSkillSettingResult

// int32 object_id = 1;
inline void ServerMsgSkillSettingResult::clear_object_id() {
  _impl_.object_id_ = 0;
}
inline int32_t ServerMsgSkillSettingResult::_internal_object_id() const {
  return _impl_.object_id_;
}
inline int32_t ServerMsgSkillSettingResult::object_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgSkillSettingResult.object_id)
  return _internal_object_id();
}
inline void ServerMsgSkillSettingResult::_internal_set_object_id(int32_t value) {
  
  _impl_.object_id_ = value;
}
inline void ServerMsgSkillSettingResult::set_object_id(int32_t value) {
  _internal_set_object_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgSkillSettingResult.object_id)
}

// .base.Player_Setting setting = 2;
inline bool ServerMsgSkillSettingResult::_internal_has_setting() const {
  return this != internal_default_instance() && _impl_.setting_ != nullptr;
}
inline bool ServerMsgSkillSettingResult::has_setting() const {
  return _internal_has_setting();
}
inline const ::base::Player_Setting& ServerMsgSkillSettingResult::_internal_setting() const {
  const ::base::Player_Setting* p = _impl_.setting_;
  return p != nullptr ? *p : reinterpret_cast<const ::base::Player_Setting&>(
      ::base::_Player_Setting_default_instance_);
}
inline const ::base::Player_Setting& ServerMsgSkillSettingResult::setting() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgSkillSettingResult.setting)
  return _internal_setting();
}
inline void ServerMsgSkillSettingResult::unsafe_arena_set_allocated_setting(
    ::base::Player_Setting* setting) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.setting_);
  }
  _impl_.setting_ = setting;
  if (setting) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:servermessage.ServerMsgSkillSettingResult.setting)
}
inline ::base::Player_Setting* ServerMsgSkillSettingResult::release_setting() {
  
  ::base::Player_Setting* temp = _impl_.setting_;
  _impl_.setting_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::base::Player_Setting* ServerMsgSkillSettingResult::unsafe_arena_release_setting() {
  // @@protoc_insertion_point(field_release:servermessage.ServerMsgSkillSettingResult.setting)
  
  ::base::Player_Setting* temp = _impl_.setting_;
  _impl_.setting_ = nullptr;
  return temp;
}
inline ::base::Player_Setting* ServerMsgSkillSettingResult::_internal_mutable_setting() {
  
  if (_impl_.setting_ == nullptr) {
    auto* p = CreateMaybeMessage<::base::Player_Setting>(GetArenaForAllocation());
    _impl_.setting_ = p;
  }
  return _impl_.setting_;
}
inline ::base::Player_Setting* ServerMsgSkillSettingResult::mutable_setting() {
  ::base::Player_Setting* _msg = _internal_mutable_setting();
  // @@protoc_insertion_point(field_mutable:servermessage.ServerMsgSkillSettingResult.setting)
  return _msg;
}
inline void ServerMsgSkillSettingResult::set_allocated_setting(::base::Player_Setting* setting) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.setting_);
  }
  if (setting) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(setting));
    if (message_arena != submessage_arena) {
      setting = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, setting, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.setting_ = setting;
  // @@protoc_insertion_point(field_set_allocated:servermessage.ServerMsgSkillSettingResult.setting)
}

// int32 index = 3;
inline void ServerMsgSkillSettingResult::clear_index() {
  _impl_.index_ = 0;
}
inline int32_t ServerMsgSkillSettingResult::_internal_index() const {
  return _impl_.index_;
}
inline int32_t ServerMsgSkillSettingResult::index() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgSkillSettingResult.index)
  return _internal_index();
}
inline void ServerMsgSkillSettingResult::_internal_set_index(int32_t value) {
  
  _impl_.index_ = value;
}
inline void ServerMsgSkillSettingResult::set_index(int32_t value) {
  _internal_set_index(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgSkillSettingResult.index)
}

// -------------------------------------------------------------------

// ServerMsgScriptCommand

// int32 cmd_id = 1;
inline void ServerMsgScriptCommand::clear_cmd_id() {
  _impl_.cmd_id_ = 0;
}
inline int32_t ServerMsgScriptCommand::_internal_cmd_id() const {
  return _impl_.cmd_id_;
}
inline int32_t ServerMsgScriptCommand::cmd_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgScriptCommand.cmd_id)
  return _internal_cmd_id();
}
inline void ServerMsgScriptCommand::_internal_set_cmd_id(int32_t value) {
  
  _impl_.cmd_id_ = value;
}
inline void ServerMsgScriptCommand::set_cmd_id(int32_t value) {
  _internal_set_cmd_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgScriptCommand.cmd_id)
}

// .base.Player_Setting setting = 2;
inline bool ServerMsgScriptCommand::_internal_has_setting() const {
  return this != internal_default_instance() && _impl_.setting_ != nullptr;
}
inline bool ServerMsgScriptCommand::has_setting() const {
  return _internal_has_setting();
}
inline const ::base::Player_Setting& ServerMsgScriptCommand::_internal_setting() const {
  const ::base::Player_Setting* p = _impl_.setting_;
  return p != nullptr ? *p : reinterpret_cast<const ::base::Player_Setting&>(
      ::base::_Player_Setting_default_instance_);
}
inline const ::base::Player_Setting& ServerMsgScriptCommand::setting() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgScriptCommand.setting)
  return _internal_setting();
}
inline void ServerMsgScriptCommand::unsafe_arena_set_allocated_setting(
    ::base::Player_Setting* setting) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.setting_);
  }
  _impl_.setting_ = setting;
  if (setting) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:servermessage.ServerMsgScriptCommand.setting)
}
inline ::base::Player_Setting* ServerMsgScriptCommand::release_setting() {
  
  ::base::Player_Setting* temp = _impl_.setting_;
  _impl_.setting_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::base::Player_Setting* ServerMsgScriptCommand::unsafe_arena_release_setting() {
  // @@protoc_insertion_point(field_release:servermessage.ServerMsgScriptCommand.setting)
  
  ::base::Player_Setting* temp = _impl_.setting_;
  _impl_.setting_ = nullptr;
  return temp;
}
inline ::base::Player_Setting* ServerMsgScriptCommand::_internal_mutable_setting() {
  
  if (_impl_.setting_ == nullptr) {
    auto* p = CreateMaybeMessage<::base::Player_Setting>(GetArenaForAllocation());
    _impl_.setting_ = p;
  }
  return _impl_.setting_;
}
inline ::base::Player_Setting* ServerMsgScriptCommand::mutable_setting() {
  ::base::Player_Setting* _msg = _internal_mutable_setting();
  // @@protoc_insertion_point(field_mutable:servermessage.ServerMsgScriptCommand.setting)
  return _msg;
}
inline void ServerMsgScriptCommand::set_allocated_setting(::base::Player_Setting* setting) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.setting_);
  }
  if (setting) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(setting));
    if (message_arena != submessage_arena) {
      setting = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, setting, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.setting_ = setting;
  // @@protoc_insertion_point(field_set_allocated:servermessage.ServerMsgScriptCommand.setting)
}

// int32 index = 3;
inline void ServerMsgScriptCommand::clear_index() {
  _impl_.index_ = 0;
}
inline int32_t ServerMsgScriptCommand::_internal_index() const {
  return _impl_.index_;
}
inline int32_t ServerMsgScriptCommand::index() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgScriptCommand.index)
  return _internal_index();
}
inline void ServerMsgScriptCommand::_internal_set_index(int32_t value) {
  
  _impl_.index_ = value;
}
inline void ServerMsgScriptCommand::set_index(int32_t value) {
  _internal_set_index(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgScriptCommand.index)
}

// .base.ScriptParam_QuestInfo continue_param = 4;
inline bool ServerMsgScriptCommand::_internal_has_continue_param() const {
  return this != internal_default_instance() && _impl_.continue_param_ != nullptr;
}
inline bool ServerMsgScriptCommand::has_continue_param() const {
  return _internal_has_continue_param();
}
inline const ::base::ScriptParam_QuestInfo& ServerMsgScriptCommand::_internal_continue_param() const {
  const ::base::ScriptParam_QuestInfo* p = _impl_.continue_param_;
  return p != nullptr ? *p : reinterpret_cast<const ::base::ScriptParam_QuestInfo&>(
      ::base::_ScriptParam_QuestInfo_default_instance_);
}
inline const ::base::ScriptParam_QuestInfo& ServerMsgScriptCommand::continue_param() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgScriptCommand.continue_param)
  return _internal_continue_param();
}
inline void ServerMsgScriptCommand::unsafe_arena_set_allocated_continue_param(
    ::base::ScriptParam_QuestInfo* continue_param) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.continue_param_);
  }
  _impl_.continue_param_ = continue_param;
  if (continue_param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:servermessage.ServerMsgScriptCommand.continue_param)
}
inline ::base::ScriptParam_QuestInfo* ServerMsgScriptCommand::release_continue_param() {
  
  ::base::ScriptParam_QuestInfo* temp = _impl_.continue_param_;
  _impl_.continue_param_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::base::ScriptParam_QuestInfo* ServerMsgScriptCommand::unsafe_arena_release_continue_param() {
  // @@protoc_insertion_point(field_release:servermessage.ServerMsgScriptCommand.continue_param)
  
  ::base::ScriptParam_QuestInfo* temp = _impl_.continue_param_;
  _impl_.continue_param_ = nullptr;
  return temp;
}
inline ::base::ScriptParam_QuestInfo* ServerMsgScriptCommand::_internal_mutable_continue_param() {
  
  if (_impl_.continue_param_ == nullptr) {
    auto* p = CreateMaybeMessage<::base::ScriptParam_QuestInfo>(GetArenaForAllocation());
    _impl_.continue_param_ = p;
  }
  return _impl_.continue_param_;
}
inline ::base::ScriptParam_QuestInfo* ServerMsgScriptCommand::mutable_continue_param() {
  ::base::ScriptParam_QuestInfo* _msg = _internal_mutable_continue_param();
  // @@protoc_insertion_point(field_mutable:servermessage.ServerMsgScriptCommand.continue_param)
  return _msg;
}
inline void ServerMsgScriptCommand::set_allocated_continue_param(::base::ScriptParam_QuestInfo* continue_param) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.continue_param_);
  }
  if (continue_param) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(continue_param));
    if (message_arena != submessage_arena) {
      continue_param = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, continue_param, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.continue_param_ = continue_param;
  // @@protoc_insertion_point(field_set_allocated:servermessage.ServerMsgScriptCommand.continue_param)
}

// .base.ScriptParam_QuestInfo quest_info = 5;
inline bool ServerMsgScriptCommand::_internal_has_quest_info() const {
  return this != internal_default_instance() && _impl_.quest_info_ != nullptr;
}
inline bool ServerMsgScriptCommand::has_quest_info() const {
  return _internal_has_quest_info();
}
inline const ::base::ScriptParam_QuestInfo& ServerMsgScriptCommand::_internal_quest_info() const {
  const ::base::ScriptParam_QuestInfo* p = _impl_.quest_info_;
  return p != nullptr ? *p : reinterpret_cast<const ::base::ScriptParam_QuestInfo&>(
      ::base::_ScriptParam_QuestInfo_default_instance_);
}
inline const ::base::ScriptParam_QuestInfo& ServerMsgScriptCommand::quest_info() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgScriptCommand.quest_info)
  return _internal_quest_info();
}
inline void ServerMsgScriptCommand::unsafe_arena_set_allocated_quest_info(
    ::base::ScriptParam_QuestInfo* quest_info) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.quest_info_);
  }
  _impl_.quest_info_ = quest_info;
  if (quest_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:servermessage.ServerMsgScriptCommand.quest_info)
}
inline ::base::ScriptParam_QuestInfo* ServerMsgScriptCommand::release_quest_info() {
  
  ::base::ScriptParam_QuestInfo* temp = _impl_.quest_info_;
  _impl_.quest_info_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::base::ScriptParam_QuestInfo* ServerMsgScriptCommand::unsafe_arena_release_quest_info() {
  // @@protoc_insertion_point(field_release:servermessage.ServerMsgScriptCommand.quest_info)
  
  ::base::ScriptParam_QuestInfo* temp = _impl_.quest_info_;
  _impl_.quest_info_ = nullptr;
  return temp;
}
inline ::base::ScriptParam_QuestInfo* ServerMsgScriptCommand::_internal_mutable_quest_info() {
  
  if (_impl_.quest_info_ == nullptr) {
    auto* p = CreateMaybeMessage<::base::ScriptParam_QuestInfo>(GetArenaForAllocation());
    _impl_.quest_info_ = p;
  }
  return _impl_.quest_info_;
}
inline ::base::ScriptParam_QuestInfo* ServerMsgScriptCommand::mutable_quest_info() {
  ::base::ScriptParam_QuestInfo* _msg = _internal_mutable_quest_info();
  // @@protoc_insertion_point(field_mutable:servermessage.ServerMsgScriptCommand.quest_info)
  return _msg;
}
inline void ServerMsgScriptCommand::set_allocated_quest_info(::base::ScriptParam_QuestInfo* quest_info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.quest_info_);
  }
  if (quest_info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(quest_info));
    if (message_arena != submessage_arena) {
      quest_info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, quest_info, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.quest_info_ = quest_info;
  // @@protoc_insertion_point(field_set_allocated:servermessage.ServerMsgScriptCommand.quest_info)
}

// string quest_tips = 6;
inline void ServerMsgScriptCommand::clear_quest_tips() {
  _impl_.quest_tips_.ClearToEmpty();
}
inline const std::string& ServerMsgScriptCommand::quest_tips() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgScriptCommand.quest_tips)
  return _internal_quest_tips();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void ServerMsgScriptCommand::set_quest_tips(ArgT0&& arg0, ArgT... args) {
 
 _impl_.quest_tips_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgScriptCommand.quest_tips)
}
inline std::string* ServerMsgScriptCommand::mutable_quest_tips() {
  std::string* _s = _internal_mutable_quest_tips();
  // @@protoc_insertion_point(field_mutable:servermessage.ServerMsgScriptCommand.quest_tips)
  return _s;
}
inline const std::string& ServerMsgScriptCommand::_internal_quest_tips() const {
  return _impl_.quest_tips_.Get();
}
inline void ServerMsgScriptCommand::_internal_set_quest_tips(const std::string& value) {
  
  _impl_.quest_tips_.Set(value, GetArenaForAllocation());
}
inline std::string* ServerMsgScriptCommand::_internal_mutable_quest_tips() {
  
  return _impl_.quest_tips_.Mutable(GetArenaForAllocation());
}
inline std::string* ServerMsgScriptCommand::release_quest_tips() {
  // @@protoc_insertion_point(field_release:servermessage.ServerMsgScriptCommand.quest_tips)
  return _impl_.quest_tips_.Release();
}
inline void ServerMsgScriptCommand::set_allocated_quest_tips(std::string* quest_tips) {
  if (quest_tips != nullptr) {
    
  } else {
    
  }
  _impl_.quest_tips_.SetAllocated(quest_tips, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.quest_tips_.IsDefault()) {
    _impl_.quest_tips_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:servermessage.ServerMsgScriptCommand.quest_tips)
}

// -------------------------------------------------------------------

// ServerMsgSkillUpgrade

// int32 object_id = 1;
inline void ServerMsgSkillUpgrade::clear_object_id() {
  _impl_.object_id_ = 0;
}
inline int32_t ServerMsgSkillUpgrade::_internal_object_id() const {
  return _impl_.object_id_;
}
inline int32_t ServerMsgSkillUpgrade::object_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgSkillUpgrade.object_id)
  return _internal_object_id();
}
inline void ServerMsgSkillUpgrade::_internal_set_object_id(int32_t value) {
  
  _impl_.object_id_ = value;
}
inline void ServerMsgSkillUpgrade::set_object_id(int32_t value) {
  _internal_set_object_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgSkillUpgrade.object_id)
}

// int32 skill_id = 2;
inline void ServerMsgSkillUpgrade::clear_skill_id() {
  _impl_.skill_id_ = 0;
}
inline int32_t ServerMsgSkillUpgrade::_internal_skill_id() const {
  return _impl_.skill_id_;
}
inline int32_t ServerMsgSkillUpgrade::skill_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgSkillUpgrade.skill_id)
  return _internal_skill_id();
}
inline void ServerMsgSkillUpgrade::_internal_set_skill_id(int32_t value) {
  
  _impl_.skill_id_ = value;
}
inline void ServerMsgSkillUpgrade::set_skill_id(int32_t value) {
  _internal_set_skill_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgSkillUpgrade.skill_id)
}

// int32 skill_level = 3;
inline void ServerMsgSkillUpgrade::clear_skill_level() {
  _impl_.skill_level_ = 0;
}
inline int32_t ServerMsgSkillUpgrade::_internal_skill_level() const {
  return _impl_.skill_level_;
}
inline int32_t ServerMsgSkillUpgrade::skill_level() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgSkillUpgrade.skill_level)
  return _internal_skill_level();
}
inline void ServerMsgSkillUpgrade::_internal_set_skill_level(int32_t value) {
  
  _impl_.skill_level_ = value;
}
inline void ServerMsgSkillUpgrade::set_skill_level(int32_t value) {
  _internal_set_skill_level(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgSkillUpgrade.skill_level)
}

// bool sucess = 4;
inline void ServerMsgSkillUpgrade::clear_sucess() {
  _impl_.sucess_ = false;
}
inline bool ServerMsgSkillUpgrade::_internal_sucess() const {
  return _impl_.sucess_;
}
inline bool ServerMsgSkillUpgrade::sucess() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgSkillUpgrade.sucess)
  return _internal_sucess();
}
inline void ServerMsgSkillUpgrade::_internal_set_sucess(bool value) {
  
  _impl_.sucess_ = value;
}
inline void ServerMsgSkillUpgrade::set_sucess(bool value) {
  _internal_set_sucess(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgSkillUpgrade.sucess)
}

// int32 type = 5;
inline void ServerMsgSkillUpgrade::clear_type() {
  _impl_.type_ = 0;
}
inline int32_t ServerMsgSkillUpgrade::_internal_type() const {
  return _impl_.type_;
}
inline int32_t ServerMsgSkillUpgrade::type() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgSkillUpgrade.type)
  return _internal_type();
}
inline void ServerMsgSkillUpgrade::_internal_set_type(int32_t value) {
  
  _impl_.type_ = value;
}
inline void ServerMsgSkillUpgrade::set_type(int32_t value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgSkillUpgrade.type)
}

// -------------------------------------------------------------------

// ServerMsgSwapItem

// int32 result = 1;
inline void ServerMsgSwapItem::clear_result() {
  _impl_.result_ = 0;
}
inline int32_t ServerMsgSwapItem::_internal_result() const {
  return _impl_.result_;
}
inline int32_t ServerMsgSwapItem::result() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgSwapItem.result)
  return _internal_result();
}
inline void ServerMsgSwapItem::_internal_set_result(int32_t value) {
  
  _impl_.result_ = value;
}
inline void ServerMsgSwapItem::set_result(int32_t value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgSwapItem.result)
}

// int32 source_pos = 2;
inline void ServerMsgSwapItem::clear_source_pos() {
  _impl_.source_pos_ = 0;
}
inline int32_t ServerMsgSwapItem::_internal_source_pos() const {
  return _impl_.source_pos_;
}
inline int32_t ServerMsgSwapItem::source_pos() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgSwapItem.source_pos)
  return _internal_source_pos();
}
inline void ServerMsgSwapItem::_internal_set_source_pos(int32_t value) {
  
  _impl_.source_pos_ = value;
}
inline void ServerMsgSwapItem::set_source_pos(int32_t value) {
  _internal_set_source_pos(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgSwapItem.source_pos)
}

// int32 dest_pos = 3;
inline void ServerMsgSwapItem::clear_dest_pos() {
  _impl_.dest_pos_ = 0;
}
inline int32_t ServerMsgSwapItem::_internal_dest_pos() const {
  return _impl_.dest_pos_;
}
inline int32_t ServerMsgSwapItem::dest_pos() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgSwapItem.dest_pos)
  return _internal_dest_pos();
}
inline void ServerMsgSwapItem::_internal_set_dest_pos(int32_t value) {
  
  _impl_.dest_pos_ = value;
}
inline void ServerMsgSwapItem::set_dest_pos(int32_t value) {
  _internal_set_dest_pos(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgSwapItem.dest_pos)
}

// -------------------------------------------------------------------

// ServerMsgTargetListAndHitFlags

// int32 object_id = 1;
inline void ServerMsgTargetListAndHitFlags::clear_object_id() {
  _impl_.object_id_ = 0;
}
inline int32_t ServerMsgTargetListAndHitFlags::_internal_object_id() const {
  return _impl_.object_id_;
}
inline int32_t ServerMsgTargetListAndHitFlags::object_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgTargetListAndHitFlags.object_id)
  return _internal_object_id();
}
inline void ServerMsgTargetListAndHitFlags::_internal_set_object_id(int32_t value) {
  
  _impl_.object_id_ = value;
}
inline void ServerMsgTargetListAndHitFlags::set_object_id(int32_t value) {
  _internal_set_object_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgTargetListAndHitFlags.object_id)
}

// int32 logic_count = 2;
inline void ServerMsgTargetListAndHitFlags::clear_logic_count() {
  _impl_.logic_count_ = 0;
}
inline int32_t ServerMsgTargetListAndHitFlags::_internal_logic_count() const {
  return _impl_.logic_count_;
}
inline int32_t ServerMsgTargetListAndHitFlags::logic_count() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgTargetListAndHitFlags.logic_count)
  return _internal_logic_count();
}
inline void ServerMsgTargetListAndHitFlags::_internal_set_logic_count(int32_t value) {
  
  _impl_.logic_count_ = value;
}
inline void ServerMsgTargetListAndHitFlags::set_logic_count(int32_t value) {
  _internal_set_logic_count(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgTargetListAndHitFlags.logic_count)
}

// int32 skill_id = 3;
inline void ServerMsgTargetListAndHitFlags::clear_skill_id() {
  _impl_.skill_id_ = 0;
}
inline int32_t ServerMsgTargetListAndHitFlags::_internal_skill_id() const {
  return _impl_.skill_id_;
}
inline int32_t ServerMsgTargetListAndHitFlags::skill_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgTargetListAndHitFlags.skill_id)
  return _internal_skill_id();
}
inline void ServerMsgTargetListAndHitFlags::_internal_set_skill_id(int32_t value) {
  
  _impl_.skill_id_ = value;
}
inline void ServerMsgTargetListAndHitFlags::set_skill_id(int32_t value) {
  _internal_set_skill_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgTargetListAndHitFlags.skill_id)
}

// repeated int32 target_list = 4;
inline int ServerMsgTargetListAndHitFlags::_internal_target_list_size() const {
  return _impl_.target_list_.size();
}
inline int ServerMsgTargetListAndHitFlags::target_list_size() const {
  return _internal_target_list_size();
}
inline void ServerMsgTargetListAndHitFlags::clear_target_list() {
  _impl_.target_list_.Clear();
}
inline int32_t ServerMsgTargetListAndHitFlags::_internal_target_list(int index) const {
  return _impl_.target_list_.Get(index);
}
inline int32_t ServerMsgTargetListAndHitFlags::target_list(int index) const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgTargetListAndHitFlags.target_list)
  return _internal_target_list(index);
}
inline void ServerMsgTargetListAndHitFlags::set_target_list(int index, int32_t value) {
  _impl_.target_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgTargetListAndHitFlags.target_list)
}
inline void ServerMsgTargetListAndHitFlags::_internal_add_target_list(int32_t value) {
  _impl_.target_list_.Add(value);
}
inline void ServerMsgTargetListAndHitFlags::add_target_list(int32_t value) {
  _internal_add_target_list(value);
  // @@protoc_insertion_point(field_add:servermessage.ServerMsgTargetListAndHitFlags.target_list)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
ServerMsgTargetListAndHitFlags::_internal_target_list() const {
  return _impl_.target_list_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
ServerMsgTargetListAndHitFlags::target_list() const {
  // @@protoc_insertion_point(field_list:servermessage.ServerMsgTargetListAndHitFlags.target_list)
  return _internal_target_list();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
ServerMsgTargetListAndHitFlags::_internal_mutable_target_list() {
  return &_impl_.target_list_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
ServerMsgTargetListAndHitFlags::mutable_target_list() {
  // @@protoc_insertion_point(field_mutable_list:servermessage.ServerMsgTargetListAndHitFlags.target_list)
  return _internal_mutable_target_list();
}

// float position_x = 5;
inline void ServerMsgTargetListAndHitFlags::clear_position_x() {
  _impl_.position_x_ = 0;
}
inline float ServerMsgTargetListAndHitFlags::_internal_position_x() const {
  return _impl_.position_x_;
}
inline float ServerMsgTargetListAndHitFlags::position_x() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgTargetListAndHitFlags.position_x)
  return _internal_position_x();
}
inline void ServerMsgTargetListAndHitFlags::_internal_set_position_x(float value) {
  
  _impl_.position_x_ = value;
}
inline void ServerMsgTargetListAndHitFlags::set_position_x(float value) {
  _internal_set_position_x(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgTargetListAndHitFlags.position_x)
}

// float position_z = 6;
inline void ServerMsgTargetListAndHitFlags::clear_position_z() {
  _impl_.position_z_ = 0;
}
inline float ServerMsgTargetListAndHitFlags::_internal_position_z() const {
  return _impl_.position_z_;
}
inline float ServerMsgTargetListAndHitFlags::position_z() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgTargetListAndHitFlags.position_z)
  return _internal_position_z();
}
inline void ServerMsgTargetListAndHitFlags::_internal_set_position_z(float value) {
  
  _impl_.position_z_ = value;
}
inline void ServerMsgTargetListAndHitFlags::set_position_z(float value) {
  _internal_set_position_z(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgTargetListAndHitFlags.position_z)
}

// -------------------------------------------------------------------

// ServerMsgTaskDownEquipResult

// int32 result = 1;
inline void ServerMsgTaskDownEquipResult::clear_result() {
  _impl_.result_ = 0;
}
inline int32_t ServerMsgTaskDownEquipResult::_internal_result() const {
  return _impl_.result_;
}
inline int32_t ServerMsgTaskDownEquipResult::result() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgTaskDownEquipResult.result)
  return _internal_result();
}
inline void ServerMsgTaskDownEquipResult::_internal_set_result(int32_t value) {
  
  _impl_.result_ = value;
}
inline void ServerMsgTaskDownEquipResult::set_result(int32_t value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgTaskDownEquipResult.result)
}

// int32 player_id = 2;
inline void ServerMsgTaskDownEquipResult::clear_player_id() {
  _impl_.player_id_ = 0;
}
inline int32_t ServerMsgTaskDownEquipResult::_internal_player_id() const {
  return _impl_.player_id_;
}
inline int32_t ServerMsgTaskDownEquipResult::player_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgTaskDownEquipResult.player_id)
  return _internal_player_id();
}
inline void ServerMsgTaskDownEquipResult::_internal_set_player_id(int32_t value) {
  
  _impl_.player_id_ = value;
}
inline void ServerMsgTaskDownEquipResult::set_player_id(int32_t value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgTaskDownEquipResult.player_id)
}

// int32 map_id = 3;
inline void ServerMsgTaskDownEquipResult::clear_map_id() {
  _impl_.map_id_ = 0;
}
inline int32_t ServerMsgTaskDownEquipResult::_internal_map_id() const {
  return _impl_.map_id_;
}
inline int32_t ServerMsgTaskDownEquipResult::map_id() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgTaskDownEquipResult.map_id)
  return _internal_map_id();
}
inline void ServerMsgTaskDownEquipResult::_internal_set_map_id(int32_t value) {
  
  _impl_.map_id_ = value;
}
inline void ServerMsgTaskDownEquipResult::set_map_id(int32_t value) {
  _internal_set_map_id(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgTaskDownEquipResult.map_id)
}

// int32 equip_point = 4;
inline void ServerMsgTaskDownEquipResult::clear_equip_point() {
  _impl_.equip_point_ = 0;
}
inline int32_t ServerMsgTaskDownEquipResult::_internal_equip_point() const {
  return _impl_.equip_point_;
}
inline int32_t ServerMsgTaskDownEquipResult::equip_point() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgTaskDownEquipResult.equip_point)
  return _internal_equip_point();
}
inline void ServerMsgTaskDownEquipResult::_internal_set_equip_point(int32_t value) {
  
  _impl_.equip_point_ = value;
}
inline void ServerMsgTaskDownEquipResult::set_equip_point(int32_t value) {
  _internal_set_equip_point(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgTaskDownEquipResult.equip_point)
}

// int32 bag_index = 5;
inline void ServerMsgTaskDownEquipResult::clear_bag_index() {
  _impl_.bag_index_ = 0;
}
inline int32_t ServerMsgTaskDownEquipResult::_internal_bag_index() const {
  return _impl_.bag_index_;
}
inline int32_t ServerMsgTaskDownEquipResult::bag_index() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgTaskDownEquipResult.bag_index)
  return _internal_bag_index();
}
inline void ServerMsgTaskDownEquipResult::_internal_set_bag_index(int32_t value) {
  
  _impl_.bag_index_ = value;
}
inline void ServerMsgTaskDownEquipResult::set_bag_index(int32_t value) {
  _internal_set_bag_index(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgTaskDownEquipResult.bag_index)
}

// -------------------------------------------------------------------

// ServerMsgUseEquipResult

// int32 result = 1;
inline void ServerMsgUseEquipResult::clear_result() {
  _impl_.result_ = 0;
}
inline int32_t ServerMsgUseEquipResult::_internal_result() const {
  return _impl_.result_;
}
inline int32_t ServerMsgUseEquipResult::result() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgUseEquipResult.result)
  return _internal_result();
}
inline void ServerMsgUseEquipResult::_internal_set_result(int32_t value) {
  
  _impl_.result_ = value;
}
inline void ServerMsgUseEquipResult::set_result(int32_t value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgUseEquipResult.result)
}

// int32 equip_point = 2;
inline void ServerMsgUseEquipResult::clear_equip_point() {
  _impl_.equip_point_ = 0;
}
inline int32_t ServerMsgUseEquipResult::_internal_equip_point() const {
  return _impl_.equip_point_;
}
inline int32_t ServerMsgUseEquipResult::equip_point() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgUseEquipResult.equip_point)
  return _internal_equip_point();
}
inline void ServerMsgUseEquipResult::_internal_set_equip_point(int32_t value) {
  
  _impl_.equip_point_ = value;
}
inline void ServerMsgUseEquipResult::set_equip_point(int32_t value) {
  _internal_set_equip_point(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgUseEquipResult.equip_point)
}

// int32 bag_index = 3;
inline void ServerMsgUseEquipResult::clear_bag_index() {
  _impl_.bag_index_ = 0;
}
inline int32_t ServerMsgUseEquipResult::_internal_bag_index() const {
  return _impl_.bag_index_;
}
inline int32_t ServerMsgUseEquipResult::bag_index() const {
  // @@protoc_insertion_point(field_get:servermessage.ServerMsgUseEquipResult.bag_index)
  return _internal_bag_index();
}
inline void ServerMsgUseEquipResult::_internal_set_bag_index(int32_t value) {
  
  _impl_.bag_index_ = value;
}
inline void ServerMsgUseEquipResult::set_bag_index(int32_t value) {
  _internal_set_bag_index(value);
  // @@protoc_insertion_point(field_set:servermessage.ServerMsgUseEquipResult.bag_index)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace servermessage

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::servermessage::MessageID> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::servermessage::MessageID>() {
  return ::servermessage::MessageID_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_server_5fmessage_2eproto
