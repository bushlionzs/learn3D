/*$T Client/Game/Core/GameSingleton.h GC 1.140 08/23/09 04:52:41 */


/*$6
 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 */


/*
 * ;
 * µ¥¼þÀà ;
 * ;
 */
#ifndef _GAME_SINGLETON_H_
#define _GAME_SINGLETON_H_
#include <assert.h>
#pragma warning(disable : 4311)
#pragma warning(disable : 4312)
template<typename T>
class GameSingleton
{
/*
 -----------------------------------------------------------------------------------------------------------------------
 -----------------------------------------------------------------------------------------------------------------------
 */
public:

	/*
	 ===================================================================================================================
	 ===================================================================================================================
	 */
	GameSingleton(void)
	{
		assert(NULL == m_sSingleton);

		m_sSingleton = static_cast<T *>(this);
	}

	/*
	 ===================================================================================================================
	 ===================================================================================================================
	 */
	~GameSingleton(void)
	{
	

		m_sSingleton = NULL;
	}

	/*
	 ===================================================================================================================
	 ===================================================================================================================
	 */
	static T &GetSingleton(void)
	{
		assert(m_sSingleton);

		return(*m_sSingleton);
	}

	/*
	 ===================================================================================================================
	 ===================================================================================================================
	 */
	static T *GetSingletonPtr(void)
	{
		return m_sSingleton;
	}

/*
 -----------------------------------------------------------------------------------------------------------------------
 -----------------------------------------------------------------------------------------------------------------------
 */
protected:
	static T	*m_sSingleton;
};	/* class */
#endif /* _GAME_SINGLETON_H_ */

/*
 * static xxx& GetSingleton( void );
 * static xxx* GetSingletonPtr( void );
 * ;
 * template<> xxx* Singleton< xxx >::m_sSingleton = 0;
 * xxx* xxx::GetSingletonPtr( void ) { return m_sSingleton;
 * } xxx& xxx::GetSingleton( void ) { KLAssert( m_sSingleton );
 * return ( *m_sSingleton );
 * }
 */
